

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 28 12:27:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.32
    45                           ; Generated 02/02/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001B8E                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for main@F32
    85  001B8E  03                 	db	3
    86  001B8F  07                 	db	7
    87  001B90  07                 	db	7
    88  001B91  07                 	db	7
    89  001B92  03                 	db	3
    90  001B93  00                 	db	0
    91  001B94  01                 	db	1
    92  001B95  03                 	db	3
    93  001B96  10                 	db	16
    94  001B97  18                 	db	24
    95  001B98  18                 	db	24
    96  001B99  18                 	db	24
    97  001B9A  10                 	db	16
    98  001B9B  00                 	db	0
    99  001B9C  00                 	db	0
   100  001B9D  1E                 	db	30
   101  001B9E  05                 	db	5
   102  001B9F  09                 	db	9
   103  001BA0  01                 	db	1
   104  001BA1  01                 	db	1
   105  001BA2  06                 	db	6
   106  001BA3  08                 	db	8
   107  001BA4  10                 	db	16
   108  001BA5  00                 	db	0
   109  001BA6  00                 	db	0
   110  001BA7  00                 	db	0
   111  001BA8  00                 	db	0
   112  001BA9  00                 	db	0
   113  001BAA  10                 	db	16
   114  001BAB  10                 	db	16
   115  001BAC  10                 	db	16
   116  001BAD  18                 	db	24
   117                           
   118                           ;initializer for main@F40
   119  001BAE  45                 	db	69
   120  001BAF  73                 	db	115
   121  001BB0  63                 	db	99
   122  001BB1  75                 	db	117
   123  001BB2  74                 	db	116
   124  001BB3  65                 	db	101
   125  001BB4  20                 	db	32
   126  001BB5  61                 	db	97
   127  001BB6  20                 	db	32
   128  001BB7  6D                 	db	109
   129  001BB8  75                 	db	117
   130  001BB9  73                 	db	115
   131  001BBA  69                 	db	105
   132  001BBB  63                 	db	99
   133  001BBC  61                 	db	97
   134                           
   135                           ;initializer for main@F44
   136  001BBD  56                 	db	86
   137  001BBE  6F                 	db	111
   138  001BBF  63                 	db	99
   139  001BC0  65                 	db	101
   140  001BC1  20                 	db	32
   141  001BC2  50                 	db	80
   142  001BC3  65                 	db	101
   143  001BC4  72                 	db	114
   144  001BC5  64                 	db	100
   145  001BC6  65                 	db	101
   146  001BC7  75                 	db	117
   147  001BC8  21                 	db	33
   148                           
   149                           ;initializer for main@F42
   150  001BC9  53                 	db	83
   151  001BCA  75                 	db	117
   152  001BCB  61                 	db	97
   153  001BCC  20                 	db	32
   154  001BCD  76                 	db	118
   155  001BCE  65                 	db	101
   156  001BCF  7A                 	db	122
   157  001BD0  21                 	db	33
   158                           
   159                           	psect	idataBANK0
   160  001A2C                     __pidataBANK0:
   161                           	callstack 0
   162                           
   163                           ;initializer for main@F38
   164  001A2C  03                 	db	3
   165  001A2D  07                 	db	7
   166  001A2E  07                 	db	7
   167  001A2F  07                 	db	7
   168  001A30  13                 	db	19
   169  001A31  08                 	db	8
   170  001A32  05                 	db	5
   171  001A33  03                 	db	3
   172  001A34  10                 	db	16
   173  001A35  18                 	db	24
   174  001A36  18                 	db	24
   175  001A37  18                 	db	24
   176  001A38  12                 	db	18
   177  001A39  04                 	db	4
   178  001A3A  08                 	db	8
   179  001A3B  10                 	db	16
   180  001A3C  01                 	db	1
   181  001A3D  01                 	db	1
   182  001A3E  01                 	db	1
   183  001A3F  01                 	db	1
   184  001A40  02                 	db	2
   185  001A41  04                 	db	4
   186  001A42  04                 	db	4
   187  001A43  08                 	db	8
   188  001A44  00                 	db	0
   189  001A45  00                 	db	0
   190  001A46  00                 	db	0
   191  001A47  00                 	db	0
   192  001A48  10                 	db	16
   193  001A49  08                 	db	8
   194  001A4A  08                 	db	8
   195  001A4B  04                 	db	4
   196                           
   197                           ;initializer for main@F36
   198  001A4C  01                 	db	1
   199  001A4D  03                 	db	3
   200  001A4E  03                 	db	3
   201  001A4F  03                 	db	3
   202  001A50  01                 	db	1
   203  001A51  00                 	db	0
   204  001A52  00                 	db	0
   205  001A53  01                 	db	1
   206  001A54  18                 	db	24
   207  001A55  1C                 	db	28
   208  001A56  1C                 	db	28
   209  001A57  1C                 	db	28
   210  001A58  18                 	db	24
   211  001A59  00                 	db	0
   212  001A5A  10                 	db	16
   213  001A5B  18                 	db	24
   214  001A5C  02                 	db	2
   215  001A5D  04                 	db	4
   216  001A5E  00                 	db	0
   217  001A5F  00                 	db	0
   218  001A60  01                 	db	1
   219  001A61  01                 	db	1
   220  001A62  01                 	db	1
   221  001A63  01                 	db	1
   222  001A64  14                 	db	20
   223  001A65  12                 	db	18
   224  001A66  10                 	db	16
   225  001A67  10                 	db	16
   226  001A68  08                 	db	8
   227  001A69  08                 	db	8
   228  001A6A  08                 	db	8
   229  001A6B  08                 	db	8
   230                           
   231                           ;initializer for main@F34
   232  001A6C  01                 	db	1
   233  001A6D  03                 	db	3
   234  001A6E  03                 	db	3
   235  001A6F  03                 	db	3
   236  001A70  01                 	db	1
   237  001A71  00                 	db	0
   238  001A72  00                 	db	0
   239  001A73  0F                 	db	15
   240  001A74  18                 	db	24
   241  001A75  1C                 	db	28
   242  001A76  1C                 	db	28
   243  001A77  1C                 	db	28
   244  001A78  18                 	db	24
   245  001A79  00                 	db	0
   246  001A7A  10                 	db	16
   247  001A7B  18                 	db	24
   248  001A7C  00                 	db	0
   249  001A7D  00                 	db	0
   250  001A7E  00                 	db	0
   251  001A7F  00                 	db	0
   252  001A80  01                 	db	1
   253  001A81  01                 	db	1
   254  001A82  01                 	db	1
   255  001A83  03                 	db	3
   256  001A84  14                 	db	20
   257  001A85  12                 	db	18
   258  001A86  10                 	db	16
   259  001A87  10                 	db	16
   260  001A88  0C                 	db	12
   261  001A89  02                 	db	2
   262  001A8A  01                 	db	1
   263  001A8B  00                 	db	0
   264                           
   265                           	psect	idataBANK2
   266  001BD1                     __pidataBANK2:
   267                           	callstack 0
   268                           
   269                           ;initializer for main@F46
   270  001BD1  0001               	dw	1
   271  001BD3  0002               	dw	2
   272  001BD5  0008               	dw	8
   273  001BD7  0002               	dw	2
   274  001BD9  0004               	dw	4
   275  001BDB  0002               	dw	2
   276  001BDD  0004               	dw	4
   277  001BDF  0001               	dw	1
   278  001BE1  0004               	dw	4
   279  001BE3  0008               	dw	8
   280  001BE5  0002               	dw	2
   281  001BE7  0004               	dw	4
   282  001BE9  0001               	dw	1
   283  001BEB  0004               	dw	4
   284  001BED  0008               	dw	8
   285  001BEF  0002               	dw	2
   286  001BF1  0008               	dw	8
   287  001BF3  0008               	dw	8
   288  001BF5  0001               	dw	1
   289  001BF7  0002               	dw	2
   290                           
   291                           	psect	smallconst
   292  000600                     __psmallconst:
   293                           	callstack 0
   294  000600  00                 	db	0
   295  000601                     _valor@ssd$F250:
   296                           	callstack 0
   297  000601  3F                 	db	63
   298  000602  06                 	db	6
   299  000603  5B                 	db	91
   300  000604  4F                 	db	79
   301  000605  66                 	db	102
   302  000606  6D                 	db	109
   303  000607  7D                 	db	125
   304  000608  07                 	db	7
   305  000609  7F                 	db	127
   306  00060A  6F                 	db	111
   307  00060B  77                 	db	119
   308  00060C  7C                 	db	124
   309  00060D  39                 	db	57
   310  00060E  5E                 	db	94
   311  00060F  79                 	db	121
   312  000610  71                 	db	113
   313  000611                     __end_of_valor@ssd$F250:
   314                           	callstack 0
   315  0000                     _PORTCbits	set	3970
   316  0000                     _TRISCbits	set	3988
   317  0000                     _T0CON	set	4053
   318  0000                     _TMR0L	set	4054
   319  0000                     _TMR0H	set	4055
   320  0000                     _INTCON	set	4082
   321  0000                     _TRISE	set	3990
   322  0000                     _TRISD	set	3989
   323  0000                     _TRISC	set	3988
   324  0000                     _TRISB	set	3987
   325  0000                     _TRISA	set	3986
   326  0000                     _PORTE	set	3972
   327  0000                     _PORTD	set	3971
   328  0000                     _PORTC	set	3970
   329  0000                     _PORTB	set	3969
   330  0000                     _PORTA	set	3968
   331  000611  00                 	db	0	; dummy byte at the end
   332  0000                     
   333                           ; #config settings
   334                           
   335                           	psect	cinit
   336  0018E4                     __pcinit:
   337                           	callstack 0
   338  0018E4                     start_initialization:
   339                           	callstack 0
   340  0018E4                     __initialization:
   341                           	callstack 0
   342                           
   343                           ; Initialize objects allocated to BANK2 (40 bytes)
   344                           ; load TBLPTR registers with __pidataBANK2
   345  0018E4  0ED1               	movlw	low __pidataBANK2
   346  0018E6  6EF6               	movwf	tblptrl,c
   347  0018E8  0E1B               	movlw	high __pidataBANK2
   348  0018EA  6EF7               	movwf	tblptrh,c
   349  0018EC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   350  0018EE  6EF8               	movwf	tblptru,c
   351  0018F0  EE02  F000         	lfsr	0,__pdataBANK2
   352  0018F4  EE10 F028          	lfsr	1,40
   353  0018F8                     copy_data0:
   354  0018F8  0009               	tblrd		*+
   355  0018FA  CFF5 FFEE          	movff	tablat,postinc0
   356  0018FE  50E5               	movf	postdec1,w,c
   357  001900  50E1               	movf	fsr1l,w,c
   358  001902  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to BANK0 (96 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362  001904  0E2C               	movlw	low __pidataBANK0
   363  001906  6EF6               	movwf	tblptrl,c
   364  001908  0E1A               	movlw	high __pidataBANK0
   365  00190A  6EF7               	movwf	tblptrh,c
   366  00190C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367  00190E  6EF8               	movwf	tblptru,c
   368  001910  EE00  F080         	lfsr	0,__pdataBANK0
   369  001914  EE10 F060          	lfsr	1,96
   370  001918                     copy_data1:
   371  001918  0009               	tblrd		*+
   372  00191A  CFF5 FFEE          	movff	tablat,postinc0
   373  00191E  50E5               	movf	postdec1,w,c
   374  001920  50E1               	movf	fsr1l,w,c
   375  001922  E1FA               	bnz	copy_data1
   376                           
   377                           ; Initialize objects allocated to COMRAM (67 bytes)
   378                           ; load TBLPTR registers with __pidataCOMRAM
   379  001924  0E8E               	movlw	low __pidataCOMRAM
   380  001926  6EF6               	movwf	tblptrl,c
   381  001928  0E1B               	movlw	high __pidataCOMRAM
   382  00192A  6EF7               	movwf	tblptrh,c
   383  00192C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   384  00192E  6EF8               	movwf	tblptru,c
   385  001930  EE00  F001         	lfsr	0,__pdataCOMRAM
   386  001934  EE10 F043          	lfsr	1,67
   387  001938                     copy_data2:
   388  001938  0009               	tblrd		*+
   389  00193A  CFF5 FFEE          	movff	tablat,postinc0
   390  00193E  50E5               	movf	postdec1,w,c
   391  001940  50E1               	movf	fsr1l,w,c
   392  001942  E1FA               	bnz	copy_data2
   393                           
   394                           ; Clear objects allocated to COMRAM (16 bytes)
   395  001944  EE00  F058         	lfsr	0,__pbssCOMRAM
   396  001948  0E10               	movlw	16
   397  00194A                     clear_0:
   398  00194A  6AEE               	clrf	postinc0,c
   399  00194C  06E8               	decf	wreg,f,c
   400  00194E  E1FD               	bnz	clear_0
   401  001950                     end_of_initialization:
   402                           	callstack 0
   403  001950                     __end_of__initialization:
   404                           	callstack 0
   405  001950  0E00               	movlw	low (__Lmediumconst shr (0+16))
   406  001952  6EF8               	movwf	tblptru,c
   407  001954  0100               	movlb	0
   408  001956  EF09  F003         	goto	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMRAM
   411  000058                     __pbssCOMRAM:
   412                           	callstack 0
   413  000058                     _pos:
   414                           	callstack 0
   415  000058                     	ds	2
   416  00005A                     _rodada:
   417                           	callstack 0
   418  00005A                     	ds	2
   419  00005C                     kpDebounce@valorAntigo:
   420                           	callstack 0
   421  00005C                     	ds	2
   422  00005E                     kpDebounce@valorNovo:
   423                           	callstack 0
   424  00005E                     	ds	2
   425  000060                     _valor:
   426                           	callstack 0
   427  000060                     	ds	2
   428  000062                     _v3:
   429                           	callstack 0
   430  000062                     	ds	1
   431  000063                     _v2:
   432                           	callstack 0
   433  000063                     	ds	1
   434  000064                     _v1:
   435                           	callstack 0
   436  000064                     	ds	1
   437  000065                     _v0:
   438                           	callstack 0
   439  000065                     	ds	1
   440  000066                     _display:
   441                           	callstack 0
   442  000066                     	ds	1
   443  000067                     kpDebounce@tempo:
   444                           	callstack 0
   445  000067                     	ds	1
   446                           
   447                           	psect	dataCOMRAM
   448  000001                     __pdataCOMRAM:
   449                           	callstack 0
   450  000001                     main@F32:
   451                           	callstack 0
   452  000001                     	ds	32
   453  000021                     main@F40:
   454                           	callstack 0
   455  000021                     	ds	15
   456  000030                     main@F44:
   457                           	callstack 0
   458  000030                     	ds	12
   459  00003C                     main@F42:
   460                           	callstack 0
   461  00003C                     	ds	8
   462                           
   463                           	psect	dataBANK0
   464  000080                     __pdataBANK0:
   465                           	callstack 0
   466  000080                     main@F38:
   467                           	callstack 0
   468  000080                     	ds	32
   469  0000A0                     main@F36:
   470                           	callstack 0
   471  0000A0                     	ds	32
   472  0000C0                     main@F34:
   473                           	callstack 0
   474  0000C0                     	ds	32
   475                           
   476                           	psect	dataBANK2
   477  000200                     __pdataBANK2:
   478                           	callstack 0
   479  000200                     main@F46:
   480                           	callstack 0
   481  000200                     	ds	40
   482                           
   483                           	psect	cstackBANK1
   484  000100                     __pcstackBANK1:
   485                           	callstack 0
   486  000100                     main@img1:
   487                           	callstack 0
   488                           
   489                           ; 32 bytes @ 0x0
   490  000100                     	ds	32
   491  000120                     main@img2:
   492                           	callstack 0
   493                           
   494                           ; 32 bytes @ 0x20
   495  000120                     	ds	32
   496  000140                     main@img3:
   497                           	callstack 0
   498                           
   499                           ; 32 bytes @ 0x40
   500  000140                     	ds	32
   501  000160                     main@img4:
   502                           	callstack 0
   503                           
   504                           ; 32 bytes @ 0x60
   505  000160                     	ds	32
   506  000180                     main@msg_inicio:
   507                           	callstack 0
   508                           
   509                           ; 15 bytes @ 0x80
   510  000180                     	ds	15
   511  00018F                     main@msg_perdeu:
   512                           	callstack 0
   513                           
   514                           ; 12 bytes @ 0x8F
   515  00018F                     	ds	12
   516  00019B                     main@msg:
   517                           	callstack 0
   518                           
   519                           ; 8 bytes @ 0x9B
   520  00019B                     	ds	8
   521  0001A3                     main@resp:
   522                           	callstack 0
   523                           
   524                           ; 40 bytes @ 0xA3
   525  0001A3                     	ds	40
   526  0001CB                     main@vetor:
   527                           	callstack 0
   528                           
   529                           ; 40 bytes @ 0xCB
   530  0001CB                     	ds	40
   531  0001F3                     main@turno:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xF3
   535  0001F3                     	ds	2
   536  0001F5                     main@erro:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0xF5
   540  0001F5                     	ds	1
   541  0001F6                     main@tecla:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xF6
   545  0001F6                     	ds	2
   546  0001F8                     main@k:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0xF8
   550  0001F8                     	ds	1
   551  0001F9                     main@i:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0xF9
   555  0001F9                     	ds	1
   556                           
   557                           	psect	cstackCOMRAM
   558  000044                     __pcstackCOMRAM:
   559                           	callstack 0
   560  000044                     ??_kpDebounce:
   561  000044                     ?_kpRead:
   562                           	callstack 0
   563  000044                     ?___wmul:
   564                           	callstack 0
   565  000044                     ?___awdiv:
   566                           	callstack 0
   567  000044                     ?___awmod:
   568                           	callstack 0
   569  000044                     ?___aldiv:
   570                           	callstack 0
   571  000044                     Delay40us@i:
   572                           	callstack 0
   573  000044                     tempo@tempo_x:
   574                           	callstack 0
   575  000044                     digitalWrite@pin:
   576                           	callstack 0
   577  000044                     pinMode@pin:
   578                           	callstack 0
   579  000044                     ___wmul@multiplier:
   580                           	callstack 0
   581  000044                     ___awdiv@dividend:
   582                           	callstack 0
   583  000044                     ___awmod@dividend:
   584                           	callstack 0
   585  000044                     ___aldiv@dividend:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x0
   589  000044                     	ds	1
   590  000045                     Delay2ms@i:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x1
   594  000045                     	ds	1
   595  000046                     tempo@j:
   596                           	callstack 0
   597  000046                     digitalWrite@value:
   598                           	callstack 0
   599  000046                     pinMode@type:
   600                           	callstack 0
   601  000046                     ___wmul@multiplicand:
   602                           	callstack 0
   603  000046                     ___awdiv@divisor:
   604                           	callstack 0
   605  000046                     ___awmod@divisor:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x2
   609  000046                     	ds	1
   610  000047                     tempo@k:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0x3
   614  000047                     	ds	1
   615  000048                     ??_digitalWrite:
   616  000048                     ??_pinMode:
   617  000048                     ___awdiv@counter:
   618                           	callstack 0
   619  000048                     ___awmod@counter:
   620                           	callstack 0
   621  000048                     ___wmul@product:
   622                           	callstack 0
   623  000048                     ___aldiv@divisor:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x4
   627  000048                     	ds	1
   628  000049                     kpDebounce@old_D:
   629                           	callstack 0
   630  000049                     ___awdiv@sign:
   631                           	callstack 0
   632  000049                     ___awmod@sign:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x5
   636  000049                     	ds	1
   637  00004A                     ??_ssdUpdate:
   638  00004A                     lcdCommand@old_D:
   639                           	callstack 0
   640  00004A                     lcdData@valor:
   641                           	callstack 0
   642  00004A                     kpDebounce@k:
   643                           	callstack 0
   644  00004A                     ___awdiv@quotient:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x6
   648  00004A                     	ds	1
   649  00004B                     lcdCommand@cmd:
   650                           	callstack 0
   651  00004B                     lcdData@old_D:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x7
   655  00004B                     	ds	1
   656  00004C                     kpDebounce@j:
   657                           	callstack 0
   658  00004C                     ssdDigit@pos:
   659                           	callstack 0
   660  00004C                     ___aldiv@counter:
   661                           	callstack 0
   662  00004C                     imprime_img@img:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x8
   666  00004C                     	ds	1
   667  00004D                     kpDebounce@i:
   668                           	callstack 0
   669  00004D                     ssdDigit@val:
   670                           	callstack 0
   671  00004D                     ___aldiv@sign:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x9
   675  00004D                     	ds	1
   676  00004E                     imprime_img@i:
   677                           	callstack 0
   678  00004E                     num_rodada@intervalo:
   679                           	callstack 0
   680  00004E                     ___aldiv@quotient:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0xA
   684  00004E                     	ds	4
   685  000052                     pwmFrequency@freq:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0xE
   689  000052                     	ds	2
   690  000054                     ??_main:
   691                           
   692                           ; 1 bytes @ 0x10
   693  000054                     	ds	4
   694                           
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 89 in file "main.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  vetor          40  203[BANK1 ] int [20]
   705 ;;  resp           40  163[BANK1 ] int [20]
   706 ;;  img4           32   96[BANK1 ] unsigned char [32]
   707 ;;  img3           32   64[BANK1 ] unsigned char [32]
   708 ;;  img2           32   32[BANK1 ] unsigned char [32]
   709 ;;  img1           32    0[BANK1 ] unsigned char [32]
   710 ;;  msg_inicio     15  128[BANK1 ] unsigned char [15]
   711 ;;  msg_perdeu     12  143[BANK1 ] unsigned char [12]
   712 ;;  msg             8  155[BANK1 ] unsigned char [8]
   713 ;;  tecla           2  246[BANK1 ] unsigned int 
   714 ;;  turno           2  243[BANK1 ] unsigned int 
   715 ;;  i               1  249[BANK1 ] unsigned char 
   716 ;;  j               1    0        unsigned char 
   717 ;;  k               1  248[BANK1 ] unsigned char 
   718 ;;  erro            1  245[BANK1 ] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   728 ;;      Params:         0       0       0       0       0       0       0
   729 ;;      Locals:         0       0     250       0       0       0       0
   730 ;;      Temps:          4       0       0       0       0       0       0
   731 ;;      Totals:         4       0     250       0       0       0       0
   732 ;;Total ram usage:      254 bytes
   733 ;; Hardware stack levels required when called: 5
   734 ;; This function calls:
   735 ;;		___wmul
   736 ;;		_imprime_img
   737 ;;		_kpDebounce
   738 ;;		_kpInit
   739 ;;		_kpRead
   740 ;;		_lcdCommand
   741 ;;		_lcdData
   742 ;;		_lcdInit
   743 ;;		_num_rodada
   744 ;;		_pwmFrequency
   745 ;;		_pwmInit
   746 ;;		_ssdInit
   747 ;;		_tempo
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text0
   754  000612                     __ptext0:
   755                           	callstack 0
   756  000612                     _main:
   757                           	callstack 26
   758  000612                     
   759                           ;main.c: 90:     char img1[32] = {
   760  000612  EE20  F001         	lfsr	2,main@F32
   761  000616  EE11  F000         	lfsr	1,main@img1
   762  00061A  0E1F               	movlw	31
   763  00061C                     u2241:
   764  00061C  CFDB FFE3          	movff	plusw2,plusw1
   765  000620  06E8               	decf	wreg,f,c
   766  000622  E2FC               	bc	u2241
   767                           
   768                           ;main.c: 96:     char img2[32] = {
   769  000624  EE20  F0C0         	lfsr	2,main@F34
   770  000628  EE11  F020         	lfsr	1,main@img2
   771  00062C  0E1F               	movlw	31
   772  00062E                     u2251:
   773  00062E  CFDB FFE3          	movff	plusw2,plusw1
   774  000632  06E8               	decf	wreg,f,c
   775  000634  E2FC               	bc	u2251
   776                           
   777                           ;main.c: 102:     char img3[32] = {
   778  000636  EE20  F0A0         	lfsr	2,main@F36
   779  00063A  EE11  F040         	lfsr	1,main@img3
   780  00063E  0E1F               	movlw	31
   781  000640                     u2261:
   782  000640  CFDB FFE3          	movff	plusw2,plusw1
   783  000644  06E8               	decf	wreg,f,c
   784  000646  E2FC               	bc	u2261
   785                           
   786                           ;main.c: 108:     char img4[32] = {
   787  000648  EE20  F080         	lfsr	2,main@F38
   788  00064C  EE11  F060         	lfsr	1,main@img4
   789  000650  0E1F               	movlw	31
   790  000652                     u2271:
   791  000652  CFDB FFE3          	movff	plusw2,plusw1
   792  000656  06E8               	decf	wreg,f,c
   793  000658  E2FC               	bc	u2271
   794                           
   795                           ;main.c: 114:     char msg_inicio[15] = "Escute a musica";
   796  00065A  EE20  F021         	lfsr	2,main@F40
   797  00065E  EE11  F080         	lfsr	1,main@msg_inicio
   798  000662  0E0E               	movlw	14
   799  000664                     u2281:
   800  000664  CFDB FFE3          	movff	plusw2,plusw1
   801  000668  06E8               	decf	wreg,f,c
   802  00066A  E2FC               	bc	u2281
   803                           
   804                           ;main.c: 115:     char msg[8] = "Sua vez!";
   805  00066C  EE20  F03C         	lfsr	2,main@F42
   806  000670  EE11  F09B         	lfsr	1,main@msg
   807  000674  0E07               	movlw	7
   808  000676                     u2291:
   809  000676  CFDB FFE3          	movff	plusw2,plusw1
   810  00067A  06E8               	decf	wreg,f,c
   811  00067C  E2FC               	bc	u2291
   812                           
   813                           ;main.c: 116:     char msg_perdeu[12] = "Voce Perdeu!";
   814  00067E  EE20  F030         	lfsr	2,main@F44
   815  000682  EE11  F08F         	lfsr	1,main@msg_perdeu
   816  000686  0E0B               	movlw	11
   817  000688                     u2301:
   818  000688  CFDB FFE3          	movff	plusw2,plusw1
   819  00068C  06E8               	decf	wreg,f,c
   820  00068E  E2FC               	bc	u2301
   821                           
   822                           ;main.c: 117:     int resp[20] = {1, 2, 8, 2, 4, 2, 4, 1, 4, 8, 2, 4, 1, 4, 8, 2, 8, 8, 
      +                          1, 2};
   823  000690  EE22  F000         	lfsr	2,main@F46
   824  000694  EE11  F0A3         	lfsr	1,main@resp
   825  000698  0E27               	movlw	39
   826  00069A                     u2311:
   827  00069A  CFDB FFE3          	movff	plusw2,plusw1
   828  00069E  06E8               	decf	wreg,f,c
   829  0006A0  E2FC               	bc	u2311
   830  0006A2                     
   831                           ;main.c: 118:     int vetor[20];;main.c: 119:     unsigned int tecla = 16, turno = 0;
   832  0006A2  0E00               	movlw	0
   833  0006A4  0101               	movlb	1	; () banked
   834  0006A6  6FF7               	movwf	(main@tecla+1)& (0+255),b
   835  0006A8  0E10               	movlw	16
   836  0006AA  6FF6               	movwf	main@tecla& (0+255),b
   837  0006AC                     
   838                           ; BSR set to: 1
   839  0006AC  0E00               	movlw	0
   840  0006AE  6FF4               	movwf	(main@turno+1)& (0+255),b
   841  0006B0  0E00               	movlw	0
   842  0006B2  6FF3               	movwf	main@turno& (0+255),b
   843  0006B4                     
   844                           ; BSR set to: 1
   845                           ;main.c: 120:     char i, k, j, erro;;main.c: 122:     (*(volatile __near unsigned char*
      +                          )0xF95) = 0x00;
   846  0006B4  0E00               	movlw	0
   847  0006B6  6E95               	movwf	149,c	;volatile
   848  0006B8                     
   849                           ; BSR set to: 1
   850                           ;main.c: 123:     (*(volatile __near unsigned char*)0xF92) = 0x00;
   851  0006B8  0E00               	movlw	0
   852  0006BA  6E92               	movwf	146,c	;volatile
   853  0006BC                     
   854                           ; BSR set to: 1
   855                           ;main.c: 124:     (*(volatile __near unsigned char*)0xF83) = 0x00;
   856  0006BC  0E00               	movlw	0
   857  0006BE  6E83               	movwf	131,c	;volatile
   858  0006C0                     
   859                           ; BSR set to: 1
   860                           ;main.c: 126:     ssdInit();
   861  0006C0  EC72  F00D         	call	_ssdInit	;wreg free
   862  0006C4                     
   863                           ;main.c: 127:     kpInit();
   864  0006C4  EC4C  F00E         	call	_kpInit	;wreg free
   865  0006C8                     
   866                           ;main.c: 128:     pwmInit();
   867  0006C8  EC3D  F00E         	call	_pwmInit	;wreg free
   868  0006CC                     l2673:
   869                           
   870                           ;main.c: 131:         if(rodada == 0){
   871  0006CC  505A               	movf	_rodada^0,w,c
   872  0006CE  105B               	iorwf	(_rodada+1)^0,w,c
   873  0006D0  A4D8               	btfss	status,2,c
   874  0006D2  EF6D  F003         	goto	u2321
   875  0006D6  EF6F  F003         	goto	u2320
   876  0006DA                     u2321:
   877  0006DA  EF36  F006         	goto	l2971
   878  0006DE                     u2320:
   879  0006DE                     
   880                           ;main.c: 132:             rodada++;
   881  0006DE  4A5A               	infsnz	_rodada^0,f,c
   882  0006E0  2A5B               	incf	(_rodada+1)^0,f,c
   883  0006E2  EF36  F006         	goto	l2971
   884  0006E6                     l2677:
   885                           
   886                           ;main.c: 136:                 num_rodada();
   887  0006E6  ECAD  F00C         	call	_num_rodada	;wreg free
   888  0006EA                     
   889                           ;main.c: 137:                 (*(volatile __near unsigned char*)0xF83) = 0x00;
   890  0006EA  0E00               	movlw	0
   891  0006EC  6E83               	movwf	131,c	;volatile
   892  0006EE                     
   893                           ;main.c: 138:                 pos = 0;
   894  0006EE  0E00               	movlw	0
   895  0006F0  6E59               	movwf	(_pos+1)^0,c
   896  0006F2  0E00               	movlw	0
   897  0006F4  6E58               	movwf	_pos^0,c
   898  0006F6                     
   899                           ;main.c: 140:                 lcdInit();
   900  0006F6  EC36  F00C         	call	_lcdInit	;wreg free
   901  0006FA                     
   902                           ;main.c: 141:                 lcdCommand(0x01);
   903  0006FA  0E01               	movlw	1
   904  0006FC  ECF7  F00B         	call	_lcdCommand
   905  000700                     
   906                           ;main.c: 142:                 for (i = 0; i < 15; i++) {
   907  000700  0E00               	movlw	0
   908  000702  0101               	movlb	1	; () banked
   909  000704  6FF9               	movwf	main@i& (0+255),b
   910  000706                     l2693:
   911                           
   912                           ; BSR set to: 1
   913                           ;main.c: 143:                     lcdData(msg_inicio[i]);
   914  000706  0E80               	movlw	low main@msg_inicio
   915  000708  25F9               	addwf	main@i& (0+255),w,b
   916  00070A  6ED9               	movwf	fsr2l,c
   917  00070C  6ADA               	clrf	fsr2h,c
   918  00070E  0E01               	movlw	high main@msg_inicio
   919  000710  22DA               	addwfc	fsr2h,f,c
   920  000712  50DF               	movf	indf2,w,c
   921  000714  EC9D  F00D         	call	_lcdData
   922  000718                     
   923                           ;main.c: 144:                 }
   924  000718  0101               	movlb	1	; () banked
   925  00071A  2BF9               	incf	main@i& (0+255),f,b
   926  00071C                     
   927                           ; BSR set to: 1
   928  00071C  0E0E               	movlw	14
   929  00071E  65F9               	cpfsgt	main@i& (0+255),b
   930  000720  EF94  F003         	goto	u2331
   931  000724  EF96  F003         	goto	u2330
   932  000728                     u2331:
   933  000728  EF83  F003         	goto	l2693
   934  00072C                     u2330:
   935  00072C                     
   936                           ; BSR set to: 1
   937                           ;main.c: 145:                 tempo(3000);
   938  00072C  0E0B               	movlw	11
   939  00072E  6E45               	movwf	(tempo@tempo_x+1)^0,c
   940  000730  0EB8               	movlw	184
   941  000732  6E44               	movwf	tempo@tempo_x^0,c
   942  000734  ECE5  F00C         	call	_tempo	;wreg free
   943  000738                     
   944                           ;main.c: 147:                 for (i = 0; i < rodada; i++) {
   945  000738  0E00               	movlw	0
   946  00073A  0101               	movlb	1	; () banked
   947  00073C  6FF9               	movwf	main@i& (0+255),b
   948  00073E  EFE6  F003         	goto	l2735
   949  000742                     l2703:
   950                           
   951                           ; BSR set to: 1
   952                           ;main.c: 148:                     (*(volatile __near unsigned char*)0xF83) = 0x00;
   953  000742  0E00               	movlw	0
   954  000744  6E83               	movwf	131,c	;volatile
   955  000746                     
   956                           ; BSR set to: 1
   957                           ;main.c: 149:                     tempo(2000);
   958  000746  0E07               	movlw	7
   959  000748  6E45               	movwf	(tempo@tempo_x+1)^0,c
   960  00074A  0ED0               	movlw	208
   961  00074C  6E44               	movwf	tempo@tempo_x^0,c
   962  00074E  ECE5  F00C         	call	_tempo	;wreg free
   963  000752                     
   964                           ;main.c: 150:                     (*(volatile __near unsigned char*)0xF83) = resp[i];
   965  000752  0101               	movlb	1	; () banked
   966  000754  51F9               	movf	main@i& (0+255),w,b
   967  000756  0D02               	mullw	2
   968  000758  0EA3               	movlw	low main@resp
   969  00075A  24F3               	addwf	243,w,c
   970  00075C  6ED9               	movwf	fsr2l,c
   971  00075E  0E01               	movlw	high main@resp
   972  000760  20F4               	addwfc	prodh,w,c
   973  000762  6EDA               	movwf	fsr2h,c
   974  000764  50DF               	movf	indf2,w,c
   975  000766  6E83               	movwf	131,c	;volatile
   976  000768                     
   977                           ; BSR set to: 1
   978                           ;main.c: 151:                     pwmFrequency(100*resp[i]);
   979  000768  51F9               	movf	main@i& (0+255),w,b
   980  00076A  0D02               	mullw	2
   981  00076C  0EA3               	movlw	low main@resp
   982  00076E  24F3               	addwf	243,w,c
   983  000770  6ED9               	movwf	fsr2l,c
   984  000772  0E01               	movlw	high main@resp
   985  000774  20F4               	addwfc	prodh,w,c
   986  000776  6EDA               	movwf	fsr2h,c
   987  000778  CFDE F044          	movff	postinc2,___wmul@multiplier
   988  00077C  CFDD F045          	movff	postdec2,___wmul@multiplier+1
   989  000780  0E00               	movlw	0
   990  000782  6E47               	movwf	(___wmul@multiplicand+1)^0,c
   991  000784  0E64               	movlw	100
   992  000786  6E46               	movwf	___wmul@multiplicand^0,c
   993  000788  EC10  F00E         	call	___wmul	;wreg free
   994  00078C  C044  F052         	movff	?___wmul,pwmFrequency@freq
   995  000790  C045  F053         	movff	?___wmul+1,pwmFrequency@freq+1
   996  000794  ECFD  F00D         	call	_pwmFrequency	;wreg free
   997  000798                     
   998                           ;main.c: 152:                     for (k = 0; k < 3; k++) {
   999  000798  0E00               	movlw	0
  1000  00079A  0101               	movlb	1	; () banked
  1001  00079C  6FF8               	movwf	main@k& (0+255),b
  1002  00079E                     l2715:
  1003  00079E                     
  1004                           ; BSR set to: 1
  1005                           ;main.c: 154:                             (((*(volatile __near unsigned char*)0xF94)) |=
      +                           (1<<(1)));
  1006  00079E  8294               	bsf	148,1,c	;volatile
  1007  0007A0                     
  1008                           ; BSR set to: 1
  1009                           ;main.c: 155:                             tempo(700);
  1010  0007A0  0E02               	movlw	2
  1011  0007A2  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1012  0007A4  0EBC               	movlw	188
  1013  0007A6  6E44               	movwf	tempo@tempo_x^0,c
  1014  0007A8  ECE5  F00C         	call	_tempo	;wreg free
  1015  0007AC                     
  1016                           ;main.c: 158:                         (((*(volatile __near unsigned char*)0xF94)) &= ~(1
      +                          <<(1)));
  1017  0007AC  9294               	bcf	148,1,c	;volatile
  1018                           
  1019                           ;main.c: 159:                     }
  1020  0007AE  0101               	movlb	1	; () banked
  1021  0007B0  2BF8               	incf	main@k& (0+255),f,b
  1022  0007B2                     
  1023                           ; BSR set to: 1
  1024  0007B2  0E02               	movlw	2
  1025  0007B4  65F8               	cpfsgt	main@k& (0+255),b
  1026  0007B6  EFDF  F003         	goto	u2341
  1027  0007BA  EFE1  F003         	goto	u2340
  1028  0007BE                     u2341:
  1029  0007BE  EFCF  F003         	goto	l2715
  1030  0007C2                     u2340:
  1031  0007C2                     
  1032                           ; BSR set to: 1
  1033                           ;main.c: 160:                     (*(volatile __near unsigned char*)0xF81) = 0x00;
  1034  0007C2  0E00               	movlw	0
  1035  0007C4  6E81               	movwf	129,c	;volatile
  1036                           
  1037                           ;main.c: 161:                     (*(volatile __near unsigned char*)0xF83) = 0x00;
  1038  0007C6  0E00               	movlw	0
  1039  0007C8  6E83               	movwf	131,c	;volatile
  1040  0007CA                     
  1041                           ; BSR set to: 1
  1042                           ;main.c: 162:                 }
  1043  0007CA  2BF9               	incf	main@i& (0+255),f,b
  1044  0007CC                     l2735:
  1045                           
  1046                           ; BSR set to: 1
  1047  0007CC  51F9               	movf	main@i& (0+255),w,b
  1048  0007CE  6E54               	movwf	??_main^0,c
  1049  0007D0  6A55               	clrf	(??_main+1)^0,c
  1050  0007D2  505A               	movf	_rodada^0,w,c
  1051  0007D4  5C54               	subwf	??_main^0,w,c
  1052  0007D6  5055               	movf	(??_main+1)^0,w,c
  1053  0007D8  0A80               	xorlw	128
  1054  0007DA  6E56               	movwf	(??_main+2)^0,c
  1055  0007DC  505B               	movf	(_rodada+1)^0,w,c
  1056  0007DE  0A80               	xorlw	128
  1057  0007E0  5856               	subwfb	(??_main+2)^0,w,c
  1058  0007E2  A0D8               	btfss	status,0,c
  1059  0007E4  EFF6  F003         	goto	u2351
  1060  0007E8  EFF8  F003         	goto	u2350
  1061  0007EC                     u2351:
  1062  0007EC  EFA1  F003         	goto	l2703
  1063  0007F0                     u2350:
  1064  0007F0                     
  1065                           ; BSR set to: 1
  1066                           ;main.c: 164:                 lcdInit();
  1067  0007F0  EC36  F00C         	call	_lcdInit	;wreg free
  1068                           
  1069                           ;main.c: 165:                 lcdCommand(0x01);
  1070  0007F4  0E01               	movlw	1
  1071  0007F6  ECF7  F00B         	call	_lcdCommand
  1072  0007FA                     
  1073                           ;main.c: 166:                 for (i = 0; i < 8; i++) {
  1074  0007FA  0E00               	movlw	0
  1075  0007FC  0101               	movlb	1	; () banked
  1076  0007FE  6FF9               	movwf	main@i& (0+255),b
  1077  000800                     l2745:
  1078                           
  1079                           ; BSR set to: 1
  1080                           ;main.c: 167:                     lcdData(msg[i]);
  1081  000800  0E9B               	movlw	low main@msg
  1082  000802  25F9               	addwf	main@i& (0+255),w,b
  1083  000804  6ED9               	movwf	fsr2l,c
  1084  000806  6ADA               	clrf	fsr2h,c
  1085  000808  0E01               	movlw	high main@msg
  1086  00080A  22DA               	addwfc	fsr2h,f,c
  1087  00080C  50DF               	movf	indf2,w,c
  1088  00080E  EC9D  F00D         	call	_lcdData
  1089  000812                     
  1090                           ;main.c: 168:                 }
  1091  000812  0101               	movlb	1	; () banked
  1092  000814  2BF9               	incf	main@i& (0+255),f,b
  1093  000816                     
  1094                           ; BSR set to: 1
  1095  000816  0E07               	movlw	7
  1096  000818  65F9               	cpfsgt	main@i& (0+255),b
  1097  00081A  EF11  F004         	goto	u2361
  1098  00081E  EF13  F004         	goto	u2360
  1099  000822                     u2361:
  1100  000822  EF00  F004         	goto	l2745
  1101  000826                     u2360:
  1102  000826                     
  1103                           ; BSR set to: 1
  1104                           ;main.c: 169:                 erro = 0;
  1105  000826  0E00               	movlw	0
  1106  000828  6FF5               	movwf	main@erro& (0+255),b
  1107                           
  1108                           ;main.c: 170:                 turno = 1;
  1109  00082A  0E00               	movlw	0
  1110  00082C  6FF4               	movwf	(main@turno+1)& (0+255),b
  1111  00082E  0E01               	movlw	1
  1112  000830  6FF3               	movwf	main@turno& (0+255),b
  1113  000832                     l2753:
  1114                           
  1115                           ;main.c: 172:                 kpDebounce();
  1116  000832  EC9C  F008         	call	_kpDebounce	;wreg free
  1117  000836                     
  1118                           ;main.c: 173:                 if (kpRead() != tecla) {
  1119  000836  EC47  F00E         	call	_kpRead	;wreg free
  1120  00083A  0101               	movlb	1	; () banked
  1121  00083C  51F6               	movf	main@tecla& (0+255),w,b
  1122  00083E  1844               	xorwf	?_kpRead^0,w,c
  1123  000840  E109               	bnz	u2370
  1124  000842  51F7               	movf	(main@tecla+1)& (0+255),w,b
  1125  000844  1845               	xorwf	(?_kpRead+1)^0,w,c
  1126  000846  B4D8               	btfsc	status,2,c
  1127  000848  EF28  F004         	goto	u2371
  1128  00084C  EF2A  F004         	goto	u2370
  1129  000850                     u2371:
  1130  000850  EF98  F005         	goto	l2903
  1131  000854                     u2370:
  1132  000854                     
  1133                           ; BSR set to: 1
  1134                           ;main.c: 174:                     tecla = kpRead();
  1135  000854  EC47  F00E         	call	_kpRead	;wreg free
  1136  000858  C044  F1F6         	movff	?_kpRead,main@tecla
  1137  00085C  C045  F1F7         	movff	?_kpRead+1,main@tecla+1
  1138  000860                     
  1139                           ;main.c: 175:                     if (((tecla) & (1<<(0)))) {
  1140  000860  0101               	movlb	1	; () banked
  1141  000862  A1F6               	btfss	main@tecla& (0+255),0,b
  1142  000864  EF36  F004         	goto	u2381
  1143  000868  EF38  F004         	goto	u2380
  1144  00086C                     u2381:
  1145  00086C  EF8A  F004         	goto	l2795
  1146  000870                     u2380:
  1147  000870                     
  1148                           ; BSR set to: 1
  1149                           ;main.c: 176:                         vetor[pos] = 8;
  1150  000870  90D8               	bcf	status,0,c
  1151  000872  3458               	rlcf	_pos^0,w,c
  1152  000874  6ED9               	movwf	fsr2l,c
  1153  000876  3459               	rlcf	(_pos+1)^0,w,c
  1154  000878  6EDA               	movwf	fsr2h,c
  1155  00087A  0ECB               	movlw	low main@vetor
  1156  00087C  26D9               	addwf	fsr2l,f,c
  1157  00087E  0E01               	movlw	high main@vetor
  1158  000880  22DA               	addwfc	fsr2h,f,c
  1159  000882  0E08               	movlw	8
  1160  000884  6EDE               	movwf	postinc2,c
  1161  000886  0E00               	movlw	0
  1162  000888  6EDD               	movwf	postdec2,c
  1163  00088A                     
  1164                           ; BSR set to: 1
  1165                           ;main.c: 177:                         if(vetor[pos] != resp[pos]){
  1166  00088A  90D8               	bcf	status,0,c
  1167  00088C  3458               	rlcf	_pos^0,w,c
  1168  00088E  6ED9               	movwf	fsr2l,c
  1169  000890  3459               	rlcf	(_pos+1)^0,w,c
  1170  000892  6EDA               	movwf	fsr2h,c
  1171  000894  0EA3               	movlw	low main@resp
  1172  000896  26D9               	addwf	fsr2l,f,c
  1173  000898  0E01               	movlw	high main@resp
  1174  00089A  22DA               	addwfc	fsr2h,f,c
  1175  00089C  90D8               	bcf	status,0,c
  1176  00089E  3458               	rlcf	_pos^0,w,c
  1177  0008A0  6EE1               	movwf	fsr1l,c
  1178  0008A2  3459               	rlcf	(_pos+1)^0,w,c
  1179  0008A4  6EE2               	movwf	fsr1h,c
  1180  0008A6  0ECB               	movlw	low main@vetor
  1181  0008A8  26E1               	addwf	fsr1l,f,c
  1182  0008AA  0E01               	movlw	high main@vetor
  1183  0008AC  22E2               	addwfc	fsr1h,f,c
  1184  0008AE  50DE               	movf	postinc2,w,c
  1185  0008B0  18E6               	xorwf	postinc1,w,c
  1186  0008B2  E109               	bnz	u2390
  1187  0008B4  50DE               	movf	postinc2,w,c
  1188  0008B6  18E6               	xorwf	postinc1,w,c
  1189  0008B8  B4D8               	btfsc	status,2,c
  1190  0008BA  EF61  F004         	goto	u2391
  1191  0008BE  EF63  F004         	goto	u2390
  1192  0008C2                     u2391:
  1193  0008C2  EF65  F004         	goto	l2767
  1194  0008C6                     u2390:
  1195  0008C6                     
  1196                           ; BSR set to: 1
  1197                           ;main.c: 178:                             erro=1;
  1198  0008C6  0E01               	movlw	1
  1199  0008C8  6FF5               	movwf	main@erro& (0+255),b
  1200  0008CA                     l2767:
  1201                           
  1202                           ; BSR set to: 1
  1203                           ;main.c: 180:                         pwmFrequency(100*8);
  1204  0008CA  0E03               	movlw	3
  1205  0008CC  6E53               	movwf	(pwmFrequency@freq+1)^0,c
  1206  0008CE  0E20               	movlw	32
  1207  0008D0  6E52               	movwf	pwmFrequency@freq^0,c
  1208  0008D2  ECFD  F00D         	call	_pwmFrequency	;wreg free
  1209  0008D6                     
  1210                           ;main.c: 181:                         for (k = 0; k < 3; k++) {
  1211  0008D6  0E00               	movlw	0
  1212  0008D8  0101               	movlb	1	; () banked
  1213  0008DA  6FF8               	movwf	main@k& (0+255),b
  1214  0008DC                     l2775:
  1215  0008DC                     
  1216                           ; BSR set to: 1
  1217                           ;main.c: 183:                                 (((*(volatile __near unsigned char*)0xF94)
      +                          ) |= (1<<(1)));
  1218  0008DC  8294               	bsf	148,1,c	;volatile
  1219  0008DE                     
  1220                           ; BSR set to: 1
  1221                           ;main.c: 184:                                 tempo(200);
  1222  0008DE  0E00               	movlw	0
  1223  0008E0  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1224  0008E2  0EC8               	movlw	200
  1225  0008E4  6E44               	movwf	tempo@tempo_x^0,c
  1226  0008E6  ECE5  F00C         	call	_tempo	;wreg free
  1227  0008EA                     
  1228                           ;main.c: 187:                             (((*(volatile __near unsigned char*)0xF94)) &=
      +                           ~(1<<(1)));
  1229  0008EA  9294               	bcf	148,1,c	;volatile
  1230                           
  1231                           ;main.c: 188:                         }
  1232  0008EC  0101               	movlb	1	; () banked
  1233  0008EE  2BF8               	incf	main@k& (0+255),f,b
  1234  0008F0                     
  1235                           ; BSR set to: 1
  1236  0008F0  0E02               	movlw	2
  1237  0008F2  65F8               	cpfsgt	main@k& (0+255),b
  1238  0008F4  EF7E  F004         	goto	u2401
  1239  0008F8  EF80  F004         	goto	u2400
  1240  0008FC                     u2401:
  1241  0008FC  EF6E  F004         	goto	l2775
  1242  000900                     u2400:
  1243  000900                     
  1244                           ; BSR set to: 1
  1245                           ;main.c: 189:                         (*(volatile __near unsigned char*)0xF81) = 0x00;
  1246  000900  0E00               	movlw	0
  1247  000902  6E81               	movwf	129,c	;volatile
  1248                           
  1249                           ;main.c: 190:                         (*(volatile __near unsigned char*)0xF83) = 0x00;
  1250  000904  0E00               	movlw	0
  1251  000906  6E83               	movwf	131,c	;volatile
  1252  000908                     
  1253                           ; BSR set to: 1
  1254                           ;main.c: 191:                         imprime_img(img4);
  1255  000908  0E60               	movlw	low main@img4
  1256  00090A  6E4C               	movwf	imprime_img@img^0,c
  1257  00090C  0E01               	movlw	high main@img4
  1258  00090E  6E4D               	movwf	(imprime_img@img+1)^0,c
  1259  000910  EC59  F009         	call	_imprime_img	;wreg free
  1260  000914                     l2795:
  1261                           
  1262                           ;main.c: 193:                     if (((tecla) & (1<<(1)))) {
  1263  000914  0101               	movlb	1	; () banked
  1264  000916  A3F6               	btfss	main@tecla& (0+255),1,b
  1265  000918  EF90  F004         	goto	u2411
  1266  00091C  EF92  F004         	goto	u2410
  1267  000920                     u2411:
  1268  000920  EFE4  F004         	goto	l2831
  1269  000924                     u2410:
  1270  000924                     
  1271                           ; BSR set to: 1
  1272                           ;main.c: 194:                         vetor[pos] = 4;
  1273  000924  90D8               	bcf	status,0,c
  1274  000926  3458               	rlcf	_pos^0,w,c
  1275  000928  6ED9               	movwf	fsr2l,c
  1276  00092A  3459               	rlcf	(_pos+1)^0,w,c
  1277  00092C  6EDA               	movwf	fsr2h,c
  1278  00092E  0ECB               	movlw	low main@vetor
  1279  000930  26D9               	addwf	fsr2l,f,c
  1280  000932  0E01               	movlw	high main@vetor
  1281  000934  22DA               	addwfc	fsr2h,f,c
  1282  000936  0E04               	movlw	4
  1283  000938  6EDE               	movwf	postinc2,c
  1284  00093A  0E00               	movlw	0
  1285  00093C  6EDD               	movwf	postdec2,c
  1286  00093E                     
  1287                           ; BSR set to: 1
  1288                           ;main.c: 195:                         if(vetor[pos] != resp[pos]){
  1289  00093E  90D8               	bcf	status,0,c
  1290  000940  3458               	rlcf	_pos^0,w,c
  1291  000942  6ED9               	movwf	fsr2l,c
  1292  000944  3459               	rlcf	(_pos+1)^0,w,c
  1293  000946  6EDA               	movwf	fsr2h,c
  1294  000948  0EA3               	movlw	low main@resp
  1295  00094A  26D9               	addwf	fsr2l,f,c
  1296  00094C  0E01               	movlw	high main@resp
  1297  00094E  22DA               	addwfc	fsr2h,f,c
  1298  000950  90D8               	bcf	status,0,c
  1299  000952  3458               	rlcf	_pos^0,w,c
  1300  000954  6EE1               	movwf	fsr1l,c
  1301  000956  3459               	rlcf	(_pos+1)^0,w,c
  1302  000958  6EE2               	movwf	fsr1h,c
  1303  00095A  0ECB               	movlw	low main@vetor
  1304  00095C  26E1               	addwf	fsr1l,f,c
  1305  00095E  0E01               	movlw	high main@vetor
  1306  000960  22E2               	addwfc	fsr1h,f,c
  1307  000962  50DE               	movf	postinc2,w,c
  1308  000964  18E6               	xorwf	postinc1,w,c
  1309  000966  E109               	bnz	u2420
  1310  000968  50DE               	movf	postinc2,w,c
  1311  00096A  18E6               	xorwf	postinc1,w,c
  1312  00096C  B4D8               	btfsc	status,2,c
  1313  00096E  EFBB  F004         	goto	u2421
  1314  000972  EFBD  F004         	goto	u2420
  1315  000976                     u2421:
  1316  000976  EFBF  F004         	goto	l2803
  1317  00097A                     u2420:
  1318  00097A                     
  1319                           ; BSR set to: 1
  1320                           ;main.c: 196:                             erro=1;
  1321  00097A  0E01               	movlw	1
  1322  00097C  6FF5               	movwf	main@erro& (0+255),b
  1323  00097E                     l2803:
  1324                           
  1325                           ; BSR set to: 1
  1326                           ;main.c: 198:                         pwmFrequency(100*4);
  1327  00097E  0E01               	movlw	1
  1328  000980  6E53               	movwf	(pwmFrequency@freq+1)^0,c
  1329  000982  0E90               	movlw	144
  1330  000984  6E52               	movwf	pwmFrequency@freq^0,c
  1331  000986  ECFD  F00D         	call	_pwmFrequency	;wreg free
  1332  00098A                     
  1333                           ;main.c: 199:                         for (k = 0; k < 3; k++) {
  1334  00098A  0E00               	movlw	0
  1335  00098C  0101               	movlb	1	; () banked
  1336  00098E  6FF8               	movwf	main@k& (0+255),b
  1337  000990                     l2811:
  1338  000990                     
  1339                           ; BSR set to: 1
  1340                           ;main.c: 201:                                 (((*(volatile __near unsigned char*)0xF94)
      +                          ) |= (1<<(1)));
  1341  000990  8294               	bsf	148,1,c	;volatile
  1342  000992                     
  1343                           ; BSR set to: 1
  1344                           ;main.c: 202:                                 tempo(200);
  1345  000992  0E00               	movlw	0
  1346  000994  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1347  000996  0EC8               	movlw	200
  1348  000998  6E44               	movwf	tempo@tempo_x^0,c
  1349  00099A  ECE5  F00C         	call	_tempo	;wreg free
  1350  00099E                     
  1351                           ;main.c: 205:                             (((*(volatile __near unsigned char*)0xF94)) &=
      +                           ~(1<<(1)));
  1352  00099E  9294               	bcf	148,1,c	;volatile
  1353                           
  1354                           ;main.c: 206:                         }
  1355  0009A0  0101               	movlb	1	; () banked
  1356  0009A2  2BF8               	incf	main@k& (0+255),f,b
  1357  0009A4                     
  1358                           ; BSR set to: 1
  1359  0009A4  0E02               	movlw	2
  1360  0009A6  65F8               	cpfsgt	main@k& (0+255),b
  1361  0009A8  EFD8  F004         	goto	u2431
  1362  0009AC  EFDA  F004         	goto	u2430
  1363  0009B0                     u2431:
  1364  0009B0  EFC8  F004         	goto	l2811
  1365  0009B4                     u2430:
  1366  0009B4                     
  1367                           ; BSR set to: 1
  1368                           ;main.c: 207:                         (*(volatile __near unsigned char*)0xF81) = 0x00;
  1369  0009B4  0E00               	movlw	0
  1370  0009B6  6E81               	movwf	129,c	;volatile
  1371                           
  1372                           ;main.c: 208:                         (*(volatile __near unsigned char*)0xF83) = 0x00;
  1373  0009B8  0E00               	movlw	0
  1374  0009BA  6E83               	movwf	131,c	;volatile
  1375  0009BC                     
  1376                           ; BSR set to: 1
  1377                           ;main.c: 209:                         imprime_img(img3);
  1378  0009BC  0E40               	movlw	low main@img3
  1379  0009BE  6E4C               	movwf	imprime_img@img^0,c
  1380  0009C0  0E01               	movlw	high main@img3
  1381  0009C2  6E4D               	movwf	(imprime_img@img+1)^0,c
  1382  0009C4  EC59  F009         	call	_imprime_img	;wreg free
  1383  0009C8                     l2831:
  1384                           
  1385                           ;main.c: 211:                     if (((tecla) & (1<<(2)))) {
  1386  0009C8  0101               	movlb	1	; () banked
  1387  0009CA  A5F6               	btfss	main@tecla& (0+255),2,b
  1388  0009CC  EFEA  F004         	goto	u2441
  1389  0009D0  EFEC  F004         	goto	u2440
  1390  0009D4                     u2441:
  1391  0009D4  EF3E  F005         	goto	l2867
  1392  0009D8                     u2440:
  1393  0009D8                     
  1394                           ; BSR set to: 1
  1395                           ;main.c: 212:                         vetor[pos] = 2;
  1396  0009D8  90D8               	bcf	status,0,c
  1397  0009DA  3458               	rlcf	_pos^0,w,c
  1398  0009DC  6ED9               	movwf	fsr2l,c
  1399  0009DE  3459               	rlcf	(_pos+1)^0,w,c
  1400  0009E0  6EDA               	movwf	fsr2h,c
  1401  0009E2  0ECB               	movlw	low main@vetor
  1402  0009E4  26D9               	addwf	fsr2l,f,c
  1403  0009E6  0E01               	movlw	high main@vetor
  1404  0009E8  22DA               	addwfc	fsr2h,f,c
  1405  0009EA  0E02               	movlw	2
  1406  0009EC  6EDE               	movwf	postinc2,c
  1407  0009EE  0E00               	movlw	0
  1408  0009F0  6EDD               	movwf	postdec2,c
  1409  0009F2                     
  1410                           ; BSR set to: 1
  1411                           ;main.c: 213:                         if(vetor[pos] != resp[pos]){
  1412  0009F2  90D8               	bcf	status,0,c
  1413  0009F4  3458               	rlcf	_pos^0,w,c
  1414  0009F6  6ED9               	movwf	fsr2l,c
  1415  0009F8  3459               	rlcf	(_pos+1)^0,w,c
  1416  0009FA  6EDA               	movwf	fsr2h,c
  1417  0009FC  0EA3               	movlw	low main@resp
  1418  0009FE  26D9               	addwf	fsr2l,f,c
  1419  000A00  0E01               	movlw	high main@resp
  1420  000A02  22DA               	addwfc	fsr2h,f,c
  1421  000A04  90D8               	bcf	status,0,c
  1422  000A06  3458               	rlcf	_pos^0,w,c
  1423  000A08  6EE1               	movwf	fsr1l,c
  1424  000A0A  3459               	rlcf	(_pos+1)^0,w,c
  1425  000A0C  6EE2               	movwf	fsr1h,c
  1426  000A0E  0ECB               	movlw	low main@vetor
  1427  000A10  26E1               	addwf	fsr1l,f,c
  1428  000A12  0E01               	movlw	high main@vetor
  1429  000A14  22E2               	addwfc	fsr1h,f,c
  1430  000A16  50DE               	movf	postinc2,w,c
  1431  000A18  18E6               	xorwf	postinc1,w,c
  1432  000A1A  E109               	bnz	u2450
  1433  000A1C  50DE               	movf	postinc2,w,c
  1434  000A1E  18E6               	xorwf	postinc1,w,c
  1435  000A20  B4D8               	btfsc	status,2,c
  1436  000A22  EF15  F005         	goto	u2451
  1437  000A26  EF17  F005         	goto	u2450
  1438  000A2A                     u2451:
  1439  000A2A  EF19  F005         	goto	l2839
  1440  000A2E                     u2450:
  1441  000A2E                     
  1442                           ; BSR set to: 1
  1443                           ;main.c: 214:                            erro=1;
  1444  000A2E  0E01               	movlw	1
  1445  000A30  6FF5               	movwf	main@erro& (0+255),b
  1446  000A32                     l2839:
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;main.c: 216:                         pwmFrequency(100*2);
  1450  000A32  0E00               	movlw	0
  1451  000A34  6E53               	movwf	(pwmFrequency@freq+1)^0,c
  1452  000A36  0EC8               	movlw	200
  1453  000A38  6E52               	movwf	pwmFrequency@freq^0,c
  1454  000A3A  ECFD  F00D         	call	_pwmFrequency	;wreg free
  1455  000A3E                     
  1456                           ;main.c: 217:                         for (k = 0; k < 3; k++) {
  1457  000A3E  0E00               	movlw	0
  1458  000A40  0101               	movlb	1	; () banked
  1459  000A42  6FF8               	movwf	main@k& (0+255),b
  1460  000A44                     l2847:
  1461  000A44                     
  1462                           ; BSR set to: 1
  1463                           ;main.c: 219:                                 (((*(volatile __near unsigned char*)0xF94)
      +                          ) |= (1<<(1)));
  1464  000A44  8294               	bsf	148,1,c	;volatile
  1465  000A46                     
  1466                           ; BSR set to: 1
  1467                           ;main.c: 220:                                 tempo(200);
  1468  000A46  0E00               	movlw	0
  1469  000A48  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1470  000A4A  0EC8               	movlw	200
  1471  000A4C  6E44               	movwf	tempo@tempo_x^0,c
  1472  000A4E  ECE5  F00C         	call	_tempo	;wreg free
  1473  000A52                     
  1474                           ;main.c: 223:                             (((*(volatile __near unsigned char*)0xF94)) &=
      +                           ~(1<<(1)));
  1475  000A52  9294               	bcf	148,1,c	;volatile
  1476                           
  1477                           ;main.c: 224:                         }
  1478  000A54  0101               	movlb	1	; () banked
  1479  000A56  2BF8               	incf	main@k& (0+255),f,b
  1480  000A58                     
  1481                           ; BSR set to: 1
  1482  000A58  0E02               	movlw	2
  1483  000A5A  65F8               	cpfsgt	main@k& (0+255),b
  1484  000A5C  EF32  F005         	goto	u2461
  1485  000A60  EF34  F005         	goto	u2460
  1486  000A64                     u2461:
  1487  000A64  EF22  F005         	goto	l2847
  1488  000A68                     u2460:
  1489  000A68                     
  1490                           ; BSR set to: 1
  1491                           ;main.c: 225:                         (*(volatile __near unsigned char*)0xF81) = 0x00;
  1492  000A68  0E00               	movlw	0
  1493  000A6A  6E81               	movwf	129,c	;volatile
  1494                           
  1495                           ;main.c: 226:                         (*(volatile __near unsigned char*)0xF83) = 0x00;
  1496  000A6C  0E00               	movlw	0
  1497  000A6E  6E83               	movwf	131,c	;volatile
  1498  000A70                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 227:                         imprime_img(img2);
  1501  000A70  0E20               	movlw	low main@img2
  1502  000A72  6E4C               	movwf	imprime_img@img^0,c
  1503  000A74  0E01               	movlw	high main@img2
  1504  000A76  6E4D               	movwf	(imprime_img@img+1)^0,c
  1505  000A78  EC59  F009         	call	_imprime_img	;wreg free
  1506  000A7C                     l2867:
  1507                           
  1508                           ;main.c: 229:                     if (((tecla) & (1<<(3)))) {
  1509  000A7C  0101               	movlb	1	; () banked
  1510  000A7E  A7F6               	btfss	main@tecla& (0+255),3,b
  1511  000A80  EF44  F005         	goto	u2471
  1512  000A84  EF46  F005         	goto	u2470
  1513  000A88                     u2471:
  1514  000A88  EF98  F005         	goto	l2903
  1515  000A8C                     u2470:
  1516  000A8C                     
  1517                           ; BSR set to: 1
  1518                           ;main.c: 230:                         vetor[pos] = 1;
  1519  000A8C  90D8               	bcf	status,0,c
  1520  000A8E  3458               	rlcf	_pos^0,w,c
  1521  000A90  6ED9               	movwf	fsr2l,c
  1522  000A92  3459               	rlcf	(_pos+1)^0,w,c
  1523  000A94  6EDA               	movwf	fsr2h,c
  1524  000A96  0ECB               	movlw	low main@vetor
  1525  000A98  26D9               	addwf	fsr2l,f,c
  1526  000A9A  0E01               	movlw	high main@vetor
  1527  000A9C  22DA               	addwfc	fsr2h,f,c
  1528  000A9E  0E01               	movlw	1
  1529  000AA0  6EDE               	movwf	postinc2,c
  1530  000AA2  0E00               	movlw	0
  1531  000AA4  6EDD               	movwf	postdec2,c
  1532  000AA6                     
  1533                           ; BSR set to: 1
  1534                           ;main.c: 231:                         if(vetor[pos] != resp[pos]){
  1535  000AA6  90D8               	bcf	status,0,c
  1536  000AA8  3458               	rlcf	_pos^0,w,c
  1537  000AAA  6ED9               	movwf	fsr2l,c
  1538  000AAC  3459               	rlcf	(_pos+1)^0,w,c
  1539  000AAE  6EDA               	movwf	fsr2h,c
  1540  000AB0  0EA3               	movlw	low main@resp
  1541  000AB2  26D9               	addwf	fsr2l,f,c
  1542  000AB4  0E01               	movlw	high main@resp
  1543  000AB6  22DA               	addwfc	fsr2h,f,c
  1544  000AB8  90D8               	bcf	status,0,c
  1545  000ABA  3458               	rlcf	_pos^0,w,c
  1546  000ABC  6EE1               	movwf	fsr1l,c
  1547  000ABE  3459               	rlcf	(_pos+1)^0,w,c
  1548  000AC0  6EE2               	movwf	fsr1h,c
  1549  000AC2  0ECB               	movlw	low main@vetor
  1550  000AC4  26E1               	addwf	fsr1l,f,c
  1551  000AC6  0E01               	movlw	high main@vetor
  1552  000AC8  22E2               	addwfc	fsr1h,f,c
  1553  000ACA  50DE               	movf	postinc2,w,c
  1554  000ACC  18E6               	xorwf	postinc1,w,c
  1555  000ACE  E109               	bnz	u2480
  1556  000AD0  50DE               	movf	postinc2,w,c
  1557  000AD2  18E6               	xorwf	postinc1,w,c
  1558  000AD4  B4D8               	btfsc	status,2,c
  1559  000AD6  EF6F  F005         	goto	u2481
  1560  000ADA  EF71  F005         	goto	u2480
  1561  000ADE                     u2481:
  1562  000ADE  EF73  F005         	goto	l2875
  1563  000AE2                     u2480:
  1564  000AE2                     
  1565                           ; BSR set to: 1
  1566                           ;main.c: 232:                            erro=1;
  1567  000AE2  0E01               	movlw	1
  1568  000AE4  6FF5               	movwf	main@erro& (0+255),b
  1569  000AE6                     l2875:
  1570                           
  1571                           ; BSR set to: 1
  1572                           ;main.c: 234:                         pwmFrequency(100);
  1573  000AE6  0E00               	movlw	0
  1574  000AE8  6E53               	movwf	(pwmFrequency@freq+1)^0,c
  1575  000AEA  0E64               	movlw	100
  1576  000AEC  6E52               	movwf	pwmFrequency@freq^0,c
  1577  000AEE  ECFD  F00D         	call	_pwmFrequency	;wreg free
  1578  000AF2                     
  1579                           ;main.c: 235:                         for (k = 0; k < 3; k++) {
  1580  000AF2  0E00               	movlw	0
  1581  000AF4  0101               	movlb	1	; () banked
  1582  000AF6  6FF8               	movwf	main@k& (0+255),b
  1583  000AF8                     l2883:
  1584  000AF8                     
  1585                           ; BSR set to: 1
  1586                           ;main.c: 237:                                 (((*(volatile __near unsigned char*)0xF94)
      +                          ) |= (1<<(1)));
  1587  000AF8  8294               	bsf	148,1,c	;volatile
  1588  000AFA                     
  1589                           ; BSR set to: 1
  1590                           ;main.c: 238:                                 tempo(200);
  1591  000AFA  0E00               	movlw	0
  1592  000AFC  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1593  000AFE  0EC8               	movlw	200
  1594  000B00  6E44               	movwf	tempo@tempo_x^0,c
  1595  000B02  ECE5  F00C         	call	_tempo	;wreg free
  1596  000B06                     
  1597                           ;main.c: 241:                             (((*(volatile __near unsigned char*)0xF94)) &=
      +                           ~(1<<(1)));
  1598  000B06  9294               	bcf	148,1,c	;volatile
  1599                           
  1600                           ;main.c: 242:                         }
  1601  000B08  0101               	movlb	1	; () banked
  1602  000B0A  2BF8               	incf	main@k& (0+255),f,b
  1603  000B0C                     
  1604                           ; BSR set to: 1
  1605  000B0C  0E02               	movlw	2
  1606  000B0E  65F8               	cpfsgt	main@k& (0+255),b
  1607  000B10  EF8C  F005         	goto	u2491
  1608  000B14  EF8E  F005         	goto	u2490
  1609  000B18                     u2491:
  1610  000B18  EF7C  F005         	goto	l2883
  1611  000B1C                     u2490:
  1612  000B1C                     
  1613                           ; BSR set to: 1
  1614                           ;main.c: 243:                         (*(volatile __near unsigned char*)0xF81) = 0x00;
  1615  000B1C  0E00               	movlw	0
  1616  000B1E  6E81               	movwf	129,c	;volatile
  1617                           
  1618                           ;main.c: 244:                         (*(volatile __near unsigned char*)0xF83) = 0x00;
  1619  000B20  0E00               	movlw	0
  1620  000B22  6E83               	movwf	131,c	;volatile
  1621  000B24                     
  1622                           ; BSR set to: 1
  1623                           ;main.c: 245:                         imprime_img(img1);
  1624  000B24  0E00               	movlw	low main@img1
  1625  000B26  6E4C               	movwf	imprime_img@img^0,c
  1626  000B28  0E01               	movlw	high main@img1
  1627  000B2A  6E4D               	movwf	(imprime_img@img+1)^0,c
  1628  000B2C  EC59  F009         	call	_imprime_img	;wreg free
  1629  000B30                     l2903:
  1630                           
  1631                           ;main.c: 249:                 if (erro>0){
  1632  000B30  0101               	movlb	1	; () banked
  1633  000B32  51F5               	movf	main@erro& (0+255),w,b
  1634  000B34  B4D8               	btfsc	status,2,c
  1635  000B36  EF9F  F005         	goto	u2501
  1636  000B3A  EFA1  F005         	goto	u2500
  1637  000B3E                     u2501:
  1638  000B3E  EFE3  F005         	goto	l2939
  1639  000B42                     u2500:
  1640  000B42                     
  1641                           ; BSR set to: 1
  1642                           ;main.c: 250:                     lcdInit();
  1643  000B42  EC36  F00C         	call	_lcdInit	;wreg free
  1644                           
  1645                           ;main.c: 251:                     lcdCommand(0x01);
  1646  000B46  0E01               	movlw	1
  1647  000B48  ECF7  F00B         	call	_lcdCommand
  1648  000B4C                     
  1649                           ;main.c: 252:                     for (i = 0; i < 12; i++) {
  1650  000B4C  0E00               	movlw	0
  1651  000B4E  0101               	movlb	1	; () banked
  1652  000B50  6FF9               	movwf	main@i& (0+255),b
  1653  000B52                     l2913:
  1654                           
  1655                           ; BSR set to: 1
  1656                           ;main.c: 253:                         lcdData(msg_perdeu[i]);
  1657  000B52  0E8F               	movlw	low main@msg_perdeu
  1658  000B54  25F9               	addwf	main@i& (0+255),w,b
  1659  000B56  6ED9               	movwf	fsr2l,c
  1660  000B58  6ADA               	clrf	fsr2h,c
  1661  000B5A  0E01               	movlw	high main@msg_perdeu
  1662  000B5C  22DA               	addwfc	fsr2h,f,c
  1663  000B5E  50DF               	movf	indf2,w,c
  1664  000B60  EC9D  F00D         	call	_lcdData
  1665  000B64                     
  1666                           ;main.c: 254:                     }
  1667  000B64  0101               	movlb	1	; () banked
  1668  000B66  2BF9               	incf	main@i& (0+255),f,b
  1669  000B68                     
  1670                           ; BSR set to: 1
  1671  000B68  0E0B               	movlw	11
  1672  000B6A  65F9               	cpfsgt	main@i& (0+255),b
  1673  000B6C  EFBA  F005         	goto	u2511
  1674  000B70  EFBC  F005         	goto	u2510
  1675  000B74                     u2511:
  1676  000B74  EFA9  F005         	goto	l2913
  1677  000B78                     u2510:
  1678  000B78                     
  1679                           ; BSR set to: 1
  1680                           ;main.c: 255:                     for(i=0; i<3; i++){
  1681  000B78  0E00               	movlw	0
  1682  000B7A  6FF9               	movwf	main@i& (0+255),b
  1683  000B7C                     l2925:
  1684                           
  1685                           ; BSR set to: 1
  1686                           ;main.c: 256:                         tempo(2000);
  1687  000B7C  0E07               	movlw	7
  1688  000B7E  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1689  000B80  0ED0               	movlw	208
  1690  000B82  6E44               	movwf	tempo@tempo_x^0,c
  1691  000B84  ECE5  F00C         	call	_tempo	;wreg free
  1692  000B88                     
  1693                           ;main.c: 257:                         (*(volatile __near unsigned char*)0xF83) = 0x00;
  1694  000B88  0E00               	movlw	0
  1695  000B8A  6E83               	movwf	131,c	;volatile
  1696  000B8C                     
  1697                           ;main.c: 258:                         tempo(2000);
  1698  000B8C  0E07               	movlw	7
  1699  000B8E  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1700  000B90  0ED0               	movlw	208
  1701  000B92  6E44               	movwf	tempo@tempo_x^0,c
  1702  000B94  ECE5  F00C         	call	_tempo	;wreg free
  1703  000B98                     
  1704                           ;main.c: 259:                         (*(volatile __near unsigned char*)0xF83) = 0xFF;
  1705  000B98  6883               	setf	131,c	;volatile
  1706  000B9A                     
  1707                           ;main.c: 260:                     }
  1708  000B9A  0101               	movlb	1	; () banked
  1709  000B9C  2BF9               	incf	main@i& (0+255),f,b
  1710  000B9E                     
  1711                           ; BSR set to: 1
  1712  000B9E  0E02               	movlw	2
  1713  000BA0  65F9               	cpfsgt	main@i& (0+255),b
  1714  000BA2  EFD5  F005         	goto	u2521
  1715  000BA6  EFD7  F005         	goto	u2520
  1716  000BAA                     u2521:
  1717  000BAA  EFBE  F005         	goto	l2925
  1718  000BAE                     u2520:
  1719  000BAE                     
  1720                           ; BSR set to: 1
  1721                           ;main.c: 261:                     pos=0;
  1722  000BAE  0E00               	movlw	0
  1723  000BB0  6E59               	movwf	(_pos+1)^0,c
  1724  000BB2  0E00               	movlw	0
  1725  000BB4  6E58               	movwf	_pos^0,c
  1726                           
  1727                           ;main.c: 262:                     rodada=0;
  1728  000BB6  0E00               	movlw	0
  1729  000BB8  6E5B               	movwf	(_rodada+1)^0,c
  1730  000BBA  0E00               	movlw	0
  1731  000BBC  6E5A               	movwf	_rodada^0,c
  1732                           
  1733                           ;main.c: 263:                     turno=0;
  1734  000BBE  0E00               	movlw	0
  1735  000BC0  6FF4               	movwf	(main@turno+1)& (0+255),b
  1736  000BC2  0E00               	movlw	0
  1737  000BC4  6FF3               	movwf	main@turno& (0+255),b
  1738  000BC6                     l2939:
  1739                           
  1740                           ; BSR set to: 1
  1741                           ;main.c: 266:                 if(pos == 20){
  1742  000BC6  0E14               	movlw	20
  1743  000BC8  1858               	xorwf	_pos^0,w,c
  1744  000BCA  1059               	iorwf	(_pos+1)^0,w,c
  1745  000BCC  A4D8               	btfss	status,2,c
  1746  000BCE  EFEB  F005         	goto	u2531
  1747  000BD2  EFED  F005         	goto	u2530
  1748  000BD6                     u2531:
  1749  000BD6  EF10  F006         	goto	l2961
  1750  000BDA                     u2530:
  1751  000BDA                     
  1752                           ; BSR set to: 1
  1753                           ;main.c: 267:                     for(i=0; i<3; i++){
  1754  000BDA  0E00               	movlw	0
  1755  000BDC  6FF9               	movwf	main@i& (0+255),b
  1756  000BDE                     l2947:
  1757                           
  1758                           ; BSR set to: 1
  1759                           ;main.c: 268:                         tempo(2000);
  1760  000BDE  0E07               	movlw	7
  1761  000BE0  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1762  000BE2  0ED0               	movlw	208
  1763  000BE4  6E44               	movwf	tempo@tempo_x^0,c
  1764  000BE6  ECE5  F00C         	call	_tempo	;wreg free
  1765  000BEA                     
  1766                           ;main.c: 269:                         (*(volatile __near unsigned char*)0xF83) = 0x00;
  1767  000BEA  0E00               	movlw	0
  1768  000BEC  6E83               	movwf	131,c	;volatile
  1769  000BEE                     
  1770                           ;main.c: 270:                         tempo(2000);
  1771  000BEE  0E07               	movlw	7
  1772  000BF0  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1773  000BF2  0ED0               	movlw	208
  1774  000BF4  6E44               	movwf	tempo@tempo_x^0,c
  1775  000BF6  ECE5  F00C         	call	_tempo	;wreg free
  1776  000BFA                     
  1777                           ;main.c: 271:                         (*(volatile __near unsigned char*)0xF83) = 0xFF;
  1778  000BFA  6883               	setf	131,c	;volatile
  1779  000BFC                     
  1780                           ;main.c: 272:                     }
  1781  000BFC  0101               	movlb	1	; () banked
  1782  000BFE  2BF9               	incf	main@i& (0+255),f,b
  1783  000C00                     
  1784                           ; BSR set to: 1
  1785  000C00  0E02               	movlw	2
  1786  000C02  65F9               	cpfsgt	main@i& (0+255),b
  1787  000C04  EF06  F006         	goto	u2541
  1788  000C08  EF08  F006         	goto	u2540
  1789  000C0C                     u2541:
  1790  000C0C  EFEF  F005         	goto	l2947
  1791  000C10                     u2540:
  1792  000C10                     
  1793                           ; BSR set to: 1
  1794                           ;main.c: 273:                     rodada = 0;
  1795  000C10  0E00               	movlw	0
  1796  000C12  6E5B               	movwf	(_rodada+1)^0,c
  1797  000C14  0E00               	movlw	0
  1798  000C16  6E5A               	movwf	_rodada^0,c
  1799                           
  1800                           ;main.c: 274:                     turno = 0;
  1801  000C18  0E00               	movlw	0
  1802  000C1A  6FF4               	movwf	(main@turno+1)& (0+255),b
  1803  000C1C  0E00               	movlw	0
  1804  000C1E  6FF3               	movwf	main@turno& (0+255),b
  1805  000C20                     l2961:
  1806                           
  1807                           ; BSR set to: 1
  1808                           ;main.c: 277:                 if (pos == rodada) {
  1809  000C20  505A               	movf	_rodada^0,w,c
  1810  000C22  1858               	xorwf	_pos^0,w,c
  1811  000C24  E107               	bnz	u2551
  1812  000C26  505B               	movf	(_rodada+1)^0,w,c
  1813  000C28  1859               	xorwf	(_pos+1)^0,w,c
  1814  000C2A  A4D8               	btfss	status,2,c
  1815  000C2C  EF1A  F006         	goto	u2551
  1816  000C30  EF1C  F006         	goto	u2550
  1817  000C34                     u2551:
  1818  000C34  EF66  F003         	goto	l2673
  1819  000C38                     u2550:
  1820  000C38                     
  1821                           ; BSR set to: 1
  1822                           ;main.c: 278:                     tempo(3000);
  1823  000C38  0E0B               	movlw	11
  1824  000C3A  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1825  000C3C  0EB8               	movlw	184
  1826  000C3E  6E44               	movwf	tempo@tempo_x^0,c
  1827  000C40  ECE5  F00C         	call	_tempo	;wreg free
  1828                           
  1829                           ;main.c: 279:                     lcdInit();
  1830  000C44  EC36  F00C         	call	_lcdInit	;wreg free
  1831                           
  1832                           ;main.c: 280:                     lcdCommand(0x01);
  1833  000C48  0E01               	movlw	1
  1834  000C4A  ECF7  F00B         	call	_lcdCommand
  1835                           
  1836                           ;main.c: 281:                     tempo(3000);
  1837  000C4E  0E0B               	movlw	11
  1838  000C50  6E45               	movwf	(tempo@tempo_x+1)^0,c
  1839  000C52  0EB8               	movlw	184
  1840  000C54  6E44               	movwf	tempo@tempo_x^0,c
  1841  000C56  ECE5  F00C         	call	_tempo	;wreg free
  1842  000C5A                     
  1843                           ;main.c: 282:                     rodada++;
  1844  000C5A  4A5A               	infsnz	_rodada^0,f,c
  1845  000C5C  2A5B               	incf	(_rodada+1)^0,f,c
  1846  000C5E                     
  1847                           ;main.c: 283:                     turno = 0;
  1848  000C5E  0E00               	movlw	0
  1849  000C60  0101               	movlb	1	; () banked
  1850  000C62  6FF4               	movwf	(main@turno+1)& (0+255),b
  1851  000C64  0E00               	movlw	0
  1852  000C66  6FF3               	movwf	main@turno& (0+255),b
  1853  000C68  EF66  F003         	goto	l2673
  1854  000C6C                     l2971:
  1855  000C6C  C1F3  F054         	movff	main@turno,??_main
  1856  000C70  C1F4  F055         	movff	main@turno+1,??_main+1
  1857                           
  1858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1859                           ; Switch size 1, requested type "simple"
  1860                           ; Number of cases is 1, Range of values is 0 to 0
  1861                           ; switch strategies available:
  1862                           ; Name         Instructions Cycles
  1863                           ; simple_byte            4     3 (average)
  1864                           ;	Chosen strategy is simple_byte
  1865  000C74  5055               	movf	(??_main+1)^0,w,c
  1866  000C76  0A00               	xorlw	0	; case 0
  1867  000C78  B4D8               	btfsc	status,2,c
  1868  000C7A  EF41  F006         	goto	l3049
  1869  000C7E  EF66  F003         	goto	l2673
  1870  000C82                     l3049:
  1871                           
  1872                           ; Switch size 1, requested type "simple"
  1873                           ; Number of cases is 2, Range of values is 0 to 1
  1874                           ; switch strategies available:
  1875                           ; Name         Instructions Cycles
  1876                           ; simple_byte            7     4 (average)
  1877                           ;	Chosen strategy is simple_byte
  1878  000C82  5054               	movf	??_main^0,w,c
  1879  000C84  0A00               	xorlw	0	; case 0
  1880  000C86  B4D8               	btfsc	status,2,c
  1881  000C88  EF73  F003         	goto	l2677
  1882  000C8C  0A01               	xorlw	1	; case 1
  1883  000C8E  B4D8               	btfsc	status,2,c
  1884  000C90  EF19  F004         	goto	l2753
  1885  000C94  EF66  F003         	goto	l2673
  1886  000C98  EF00  F000         	goto	start
  1887  000C9C                     __end_of_main:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _ssdInit *****************
  1891 ;; Defined at:
  1892 ;;		line 101 in file "ssd.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1906 ;;      Params:         0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 1
  1913 ;; This function calls:
  1914 ;;		_pinMode
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text1
  1921  001AE4                     __ptext1:
  1922                           	callstack 0
  1923  001AE4                     _ssdInit:
  1924                           	callstack 29
  1925  001AE4                     
  1926                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  1927  001AE4  0E00               	movlw	0
  1928  001AE6  6E45               	movwf	(pinMode@pin+1)^0,c
  1929  001AE8  0E02               	movlw	2
  1930  001AEA  6E44               	movwf	pinMode@pin^0,c
  1931  001AEC  0E00               	movlw	0
  1932  001AEE  6E47               	movwf	(pinMode@type+1)^0,c
  1933  001AF0  0E00               	movlw	0
  1934  001AF2  6E46               	movwf	pinMode@type^0,c
  1935  001AF4  EC4E  F006         	call	_pinMode	;wreg free
  1936                           
  1937                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  1938  001AF8  0E00               	movlw	0
  1939  001AFA  6E45               	movwf	(pinMode@pin+1)^0,c
  1940  001AFC  0E03               	movlw	3
  1941  001AFE  6E44               	movwf	pinMode@pin^0,c
  1942  001B00  0E00               	movlw	0
  1943  001B02  6E47               	movwf	(pinMode@type+1)^0,c
  1944  001B04  0E00               	movlw	0
  1945  001B06  6E46               	movwf	pinMode@type^0,c
  1946  001B08  EC4E  F006         	call	_pinMode	;wreg free
  1947                           
  1948                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  1949  001B0C  0E00               	movlw	0
  1950  001B0E  6E45               	movwf	(pinMode@pin+1)^0,c
  1951  001B10  0E04               	movlw	4
  1952  001B12  6E44               	movwf	pinMode@pin^0,c
  1953  001B14  0E00               	movlw	0
  1954  001B16  6E47               	movwf	(pinMode@type+1)^0,c
  1955  001B18  0E00               	movlw	0
  1956  001B1A  6E46               	movwf	pinMode@type^0,c
  1957  001B1C  EC4E  F006         	call	_pinMode	;wreg free
  1958                           
  1959                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  1960  001B20  0E00               	movlw	0
  1961  001B22  6E45               	movwf	(pinMode@pin+1)^0,c
  1962  001B24  0E05               	movlw	5
  1963  001B26  6E44               	movwf	pinMode@pin^0,c
  1964  001B28  0E00               	movlw	0
  1965  001B2A  6E47               	movwf	(pinMode@type+1)^0,c
  1966  001B2C  0E00               	movlw	0
  1967  001B2E  6E46               	movwf	pinMode@type^0,c
  1968  001B30  EC4E  F006         	call	_pinMode	;wreg free
  1969  001B34                     
  1970                           ;ssd.c: 109:     TRISD = 0x00;
  1971  001B34  0E00               	movlw	0
  1972  001B36  6E95               	movwf	149,c	;volatile
  1973  001B38  0012               	return		;funcret
  1974  001B3A                     __end_of_ssdInit:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _pwmInit *****************
  1978 ;; Defined at:
  1979 ;;		line 59 in file "pwm.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1993 ;;      Params:         0       0       0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0
  1996 ;;      Totals:         0       0       0       0       0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text2
  2007  001C7A                     __ptext2:
  2008                           	callstack 0
  2009  001C7A                     _pwmInit:
  2010                           	callstack 30
  2011  001C7A                     
  2012                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  2013  001C7A  9294               	bcf	148,1,c	;volatile
  2014                           
  2015                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  2016  001C7C  9494               	bcf	148,2,c	;volatile
  2017  001C7E                     
  2018                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  2019  001C7E  0E03               	movlw	3
  2020  001C80  12CA               	iorwf	202,f,c	;volatile
  2021  001C82                     
  2022                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  2023  001C82  84CA               	bsf	202,2,c	;volatile
  2024                           
  2025                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  2026  001C84  0E0C               	movlw	12
  2027  001C86  12BD               	iorwf	189,f,c	;volatile
  2028                           
  2029                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  2030  001C88  0E0C               	movlw	12
  2031  001C8A  12BA               	iorwf	186,f,c	;volatile
  2032  001C8C  0012               	return		;funcret
  2033  001C8E                     __end_of_pwmInit:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function _pwmFrequency *****************
  2037 ;; Defined at:
  2038 ;;		line 52 in file "pwm.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  freq            2   14[COMRAM] unsigned int 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2052 ;;      Params:         2       0       0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0
  2055 ;;      Totals:         2       0       0       0       0       0       0
  2056 ;;Total ram usage:        2 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 1
  2059 ;; This function calls:
  2060 ;;		___aldiv
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text3
  2067  001BFA                     __ptext3:
  2068                           	callstack 0
  2069  001BFA                     _pwmFrequency:
  2070                           	callstack 29
  2071  001BFA                     
  2072                           ;pwm.c: 52: void pwmFrequency(unsigned int freq);pwm.c: 53: {;pwm.c: 56:  (*(volatile __
      +                          near unsigned char*)0xFCB) = (125000/(freq)) - 1;
  2073  001BFA  0E48               	movlw	72
  2074  001BFC  6E44               	movwf	___aldiv@dividend^0,c
  2075  001BFE  0EE8               	movlw	232
  2076  001C00  6E45               	movwf	(___aldiv@dividend+1)^0,c
  2077  001C02  0E01               	movlw	1
  2078  001C04  6E46               	movwf	(___aldiv@dividend+2)^0,c
  2079  001C06  0E00               	movlw	0
  2080  001C08  6E47               	movwf	(___aldiv@dividend+3)^0,c
  2081  001C0A  C052  F048         	movff	pwmFrequency@freq,___aldiv@divisor
  2082  001C0E  C053  F049         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2083  001C12  6A4A               	clrf	(___aldiv@divisor+2)^0,c
  2084  001C14  6A4B               	clrf	(___aldiv@divisor+3)^0,c
  2085  001C16  ECB7  F00A         	call	___aldiv	;wreg free
  2086  001C1A  0444               	decf	?___aldiv^0,w,c
  2087  001C1C  6ECB               	movwf	203,c	;volatile
  2088  001C1E  0012               	return		;funcret
  2089  001C20                     __end_of_pwmFrequency:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function ___aldiv *****************
  2093 ;; Defined at:
  2094 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aldiv.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  dividend        4    0[COMRAM] long 
  2097 ;;  divisor         4    4[COMRAM] long 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  quotient        4   10[COMRAM] long 
  2100 ;;  sign            1    9[COMRAM] unsigned char 
  2101 ;;  counter         1    8[COMRAM] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  4    0[COMRAM] long 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2111 ;;      Params:         8       0       0       0       0       0       0
  2112 ;;      Locals:         6       0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0
  2114 ;;      Totals:        14       0       0       0       0       0       0
  2115 ;;Total ram usage:       14 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_pwmFrequency
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text4
  2125  00156E                     __ptext4:
  2126                           	callstack 0
  2127  00156E                     ___aldiv:
  2128                           	callstack 29
  2129  00156E  0E00               	movlw	0
  2130  001570  6E4D               	movwf	___aldiv@sign^0,c
  2131  001572  BE4B               	btfsc	(___aldiv@divisor+3)^0,7,c
  2132  001574  EFC0  F00A         	goto	u1890
  2133  001578  EFBE  F00A         	goto	u1891
  2134  00157C                     u1891:
  2135  00157C  EFCA  F00A         	goto	l2401
  2136  001580                     u1890:
  2137  001580  1E4B               	comf	(___aldiv@divisor+3)^0,f,c
  2138  001582  1E4A               	comf	(___aldiv@divisor+2)^0,f,c
  2139  001584  1E49               	comf	(___aldiv@divisor+1)^0,f,c
  2140  001586  6C48               	negf	___aldiv@divisor^0,c
  2141  001588  0E00               	movlw	0
  2142  00158A  2249               	addwfc	(___aldiv@divisor+1)^0,f,c
  2143  00158C  224A               	addwfc	(___aldiv@divisor+2)^0,f,c
  2144  00158E  224B               	addwfc	(___aldiv@divisor+3)^0,f,c
  2145  001590  0E01               	movlw	1
  2146  001592  6E4D               	movwf	___aldiv@sign^0,c
  2147  001594                     l2401:
  2148  001594  BE47               	btfsc	(___aldiv@dividend+3)^0,7,c
  2149  001596  EFD1  F00A         	goto	u1900
  2150  00159A  EFCF  F00A         	goto	u1901
  2151  00159E                     u1901:
  2152  00159E  EFDB  F00A         	goto	l2407
  2153  0015A2                     u1900:
  2154  0015A2  1E47               	comf	(___aldiv@dividend+3)^0,f,c
  2155  0015A4  1E46               	comf	(___aldiv@dividend+2)^0,f,c
  2156  0015A6  1E45               	comf	(___aldiv@dividend+1)^0,f,c
  2157  0015A8  6C44               	negf	___aldiv@dividend^0,c
  2158  0015AA  0E00               	movlw	0
  2159  0015AC  2245               	addwfc	(___aldiv@dividend+1)^0,f,c
  2160  0015AE  2246               	addwfc	(___aldiv@dividend+2)^0,f,c
  2161  0015B0  2247               	addwfc	(___aldiv@dividend+3)^0,f,c
  2162  0015B2  0E01               	movlw	1
  2163  0015B4  1A4D               	xorwf	___aldiv@sign^0,f,c
  2164  0015B6                     l2407:
  2165  0015B6  0E00               	movlw	0
  2166  0015B8  6E4E               	movwf	___aldiv@quotient^0,c
  2167  0015BA  0E00               	movlw	0
  2168  0015BC  6E4F               	movwf	(___aldiv@quotient+1)^0,c
  2169  0015BE  0E00               	movlw	0
  2170  0015C0  6E50               	movwf	(___aldiv@quotient+2)^0,c
  2171  0015C2  0E00               	movlw	0
  2172  0015C4  6E51               	movwf	(___aldiv@quotient+3)^0,c
  2173  0015C6  5048               	movf	___aldiv@divisor^0,w,c
  2174  0015C8  1049               	iorwf	(___aldiv@divisor+1)^0,w,c
  2175  0015CA  104A               	iorwf	(___aldiv@divisor+2)^0,w,c
  2176  0015CC  104B               	iorwf	(___aldiv@divisor+3)^0,w,c
  2177  0015CE  B4D8               	btfsc	status,2,c
  2178  0015D0  EFEC  F00A         	goto	u1911
  2179  0015D4  EFEE  F00A         	goto	u1910
  2180  0015D8                     u1911:
  2181  0015D8  EF24  F00B         	goto	l2429
  2182  0015DC                     u1910:
  2183  0015DC  0E01               	movlw	1
  2184  0015DE  6E4C               	movwf	___aldiv@counter^0,c
  2185  0015E0  EFF8  F00A         	goto	l2415
  2186  0015E4                     l2413:
  2187  0015E4  90D8               	bcf	status,0,c
  2188  0015E6  3648               	rlcf	___aldiv@divisor^0,f,c
  2189  0015E8  3649               	rlcf	(___aldiv@divisor+1)^0,f,c
  2190  0015EA  364A               	rlcf	(___aldiv@divisor+2)^0,f,c
  2191  0015EC  364B               	rlcf	(___aldiv@divisor+3)^0,f,c
  2192  0015EE  2A4C               	incf	___aldiv@counter^0,f,c
  2193  0015F0                     l2415:
  2194  0015F0  AE4B               	btfss	(___aldiv@divisor+3)^0,7,c
  2195  0015F2  EFFD  F00A         	goto	u1921
  2196  0015F6  EFFF  F00A         	goto	u1920
  2197  0015FA                     u1921:
  2198  0015FA  EFF2  F00A         	goto	l2413
  2199  0015FE                     u1920:
  2200  0015FE                     l2417:
  2201  0015FE  90D8               	bcf	status,0,c
  2202  001600  364E               	rlcf	___aldiv@quotient^0,f,c
  2203  001602  364F               	rlcf	(___aldiv@quotient+1)^0,f,c
  2204  001604  3650               	rlcf	(___aldiv@quotient+2)^0,f,c
  2205  001606  3651               	rlcf	(___aldiv@quotient+3)^0,f,c
  2206  001608  5048               	movf	___aldiv@divisor^0,w,c
  2207  00160A  5C44               	subwf	___aldiv@dividend^0,w,c
  2208  00160C  5049               	movf	(___aldiv@divisor+1)^0,w,c
  2209  00160E  5845               	subwfb	(___aldiv@dividend+1)^0,w,c
  2210  001610  504A               	movf	(___aldiv@divisor+2)^0,w,c
  2211  001612  5846               	subwfb	(___aldiv@dividend+2)^0,w,c
  2212  001614  504B               	movf	(___aldiv@divisor+3)^0,w,c
  2213  001616  5847               	subwfb	(___aldiv@dividend+3)^0,w,c
  2214  001618  A0D8               	btfss	status,0,c
  2215  00161A  EF11  F00B         	goto	u1931
  2216  00161E  EF13  F00B         	goto	u1930
  2217  001622                     u1931:
  2218  001622  EF1C  F00B         	goto	l2425
  2219  001626                     u1930:
  2220  001626  5048               	movf	___aldiv@divisor^0,w,c
  2221  001628  5E44               	subwf	___aldiv@dividend^0,f,c
  2222  00162A  5049               	movf	(___aldiv@divisor+1)^0,w,c
  2223  00162C  5A45               	subwfb	(___aldiv@dividend+1)^0,f,c
  2224  00162E  504A               	movf	(___aldiv@divisor+2)^0,w,c
  2225  001630  5A46               	subwfb	(___aldiv@dividend+2)^0,f,c
  2226  001632  504B               	movf	(___aldiv@divisor+3)^0,w,c
  2227  001634  5A47               	subwfb	(___aldiv@dividend+3)^0,f,c
  2228  001636  804E               	bsf	___aldiv@quotient^0,0,c
  2229  001638                     l2425:
  2230  001638  90D8               	bcf	status,0,c
  2231  00163A  324B               	rrcf	(___aldiv@divisor+3)^0,f,c
  2232  00163C  324A               	rrcf	(___aldiv@divisor+2)^0,f,c
  2233  00163E  3249               	rrcf	(___aldiv@divisor+1)^0,f,c
  2234  001640  3248               	rrcf	___aldiv@divisor^0,f,c
  2235  001642  2E4C               	decfsz	___aldiv@counter^0,f,c
  2236  001644  EFFF  F00A         	goto	l2417
  2237  001648                     l2429:
  2238  001648  504D               	movf	___aldiv@sign^0,w,c
  2239  00164A  B4D8               	btfsc	status,2,c
  2240  00164C  EF2A  F00B         	goto	u1941
  2241  001650  EF2C  F00B         	goto	u1940
  2242  001654                     u1941:
  2243  001654  EF34  F00B         	goto	l2433
  2244  001658                     u1940:
  2245  001658  1E51               	comf	(___aldiv@quotient+3)^0,f,c
  2246  00165A  1E50               	comf	(___aldiv@quotient+2)^0,f,c
  2247  00165C  1E4F               	comf	(___aldiv@quotient+1)^0,f,c
  2248  00165E  6C4E               	negf	___aldiv@quotient^0,c
  2249  001660  0E00               	movlw	0
  2250  001662  224F               	addwfc	(___aldiv@quotient+1)^0,f,c
  2251  001664  2250               	addwfc	(___aldiv@quotient+2)^0,f,c
  2252  001666  2251               	addwfc	(___aldiv@quotient+3)^0,f,c
  2253  001668                     l2433:
  2254  001668  C04E  F044         	movff	___aldiv@quotient,?___aldiv
  2255  00166C  C04F  F045         	movff	___aldiv@quotient+1,?___aldiv+1
  2256  001670  C050  F046         	movff	___aldiv@quotient+2,?___aldiv+2
  2257  001674  C051  F047         	movff	___aldiv@quotient+3,?___aldiv+3
  2258  001678  0012               	return		;funcret
  2259  00167A                     __end_of___aldiv:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _num_rodada *****************
  2263 ;; Defined at:
  2264 ;;		line 74 in file "main.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  intervalo       1   10[COMRAM] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2278 ;;      Params:         0       0       0       0       0       0       0
  2279 ;;      Locals:         1       0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0
  2281 ;;      Totals:         1       0       0       0       0       0       0
  2282 ;;Total ram usage:        1 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; Hardware stack levels required when called: 2
  2285 ;; This function calls:
  2286 ;;		___awdiv
  2287 ;;		___awmod
  2288 ;;		_ssdDigit
  2289 ;;		_ssdUpdate
  2290 ;;		_tempo
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text5
  2297  00195A                     __ptext5:
  2298                           	callstack 0
  2299  00195A                     _num_rodada:
  2300                           	callstack 28
  2301  00195A                     
  2302                           ;main.c: 75:     char intervalo;;main.c: 76:     for(intervalo=0; intervalo<60; interval
      +                          o++){
  2303  00195A  0E00               	movlw	0
  2304  00195C  6E4E               	movwf	num_rodada@intervalo^0,c
  2305  00195E                     l2615:
  2306                           
  2307                           ;main.c: 77:         (*(volatile __near unsigned char*)0xF92) = 0x00;
  2308  00195E  0E00               	movlw	0
  2309  001960  6E92               	movwf	146,c	;volatile
  2310  001962                     
  2311                           ;main.c: 78:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<(5)));
  2312  001962  9A80               	bcf	128,5,c	;volatile
  2313  001964                     
  2314                           ;main.c: 79:         (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<(4)));
  2315  001964  9880               	bcf	128,4,c	;volatile
  2316  001966                     
  2317                           ;main.c: 80:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<(3)));
  2318  001966  8680               	bsf	128,3,c	;volatile
  2319  001968                     
  2320                           ;main.c: 81:         (((*(volatile __near unsigned char*)0xF80)) |= (1<<(2)));
  2321  001968  8480               	bsf	128,2,c	;volatile
  2322  00196A                     
  2323                           ;main.c: 82:         ssdDigit(((rodada) % 10), 3);
  2324  00196A  0E03               	movlw	3
  2325  00196C  6E4C               	movwf	ssdDigit@pos^0,c
  2326  00196E  C05A  F044         	movff	_rodada,___awmod@dividend
  2327  001972  C05B  F045         	movff	_rodada+1,___awmod@dividend+1
  2328  001976  0E00               	movlw	0
  2329  001978  6E47               	movwf	(___awmod@divisor+1)^0,c
  2330  00197A  0E0A               	movlw	10
  2331  00197C  6E46               	movwf	___awmod@divisor^0,c
  2332  00197E  EC9F  F00B         	call	___awmod	;wreg free
  2333  001982  5044               	movf	?___awmod^0,w,c
  2334  001984  EC46  F00D         	call	_ssdDigit
  2335  001988                     
  2336                           ;main.c: 83:         ssdDigit(((rodada) / 10), 2);
  2337  001988  0E02               	movlw	2
  2338  00198A  6E4C               	movwf	ssdDigit@pos^0,c
  2339  00198C  C05A  F044         	movff	_rodada,___awdiv@dividend
  2340  001990  C05B  F045         	movff	_rodada+1,___awdiv@dividend+1
  2341  001994  0E00               	movlw	0
  2342  001996  6E47               	movwf	(___awdiv@divisor+1)^0,c
  2343  001998  0E0A               	movlw	10
  2344  00199A  6E46               	movwf	___awdiv@divisor^0,c
  2345  00199C  EC3D  F00B         	call	___awdiv	;wreg free
  2346  0019A0  5044               	movf	?___awdiv^0,w,c
  2347  0019A2  EC46  F00D         	call	_ssdDigit
  2348  0019A6                     
  2349                           ;main.c: 84:         ssdUpdate();
  2350  0019A6  EC0F  F00A         	call	_ssdUpdate	;wreg free
  2351  0019AA                     
  2352                           ;main.c: 85:         tempo(100);
  2353  0019AA  0E00               	movlw	0
  2354  0019AC  6E45               	movwf	(tempo@tempo_x+1)^0,c
  2355  0019AE  0E64               	movlw	100
  2356  0019B0  6E44               	movwf	tempo@tempo_x^0,c
  2357  0019B2  ECE5  F00C         	call	_tempo	;wreg free
  2358  0019B6                     
  2359                           ;main.c: 86:     }
  2360  0019B6  2A4E               	incf	num_rodada@intervalo^0,f,c
  2361  0019B8  0E3B               	movlw	59
  2362  0019BA  644E               	cpfsgt	num_rodada@intervalo^0,c
  2363  0019BC  EFE2  F00C         	goto	u2231
  2364  0019C0  EFE4  F00C         	goto	u2230
  2365  0019C4                     u2231:
  2366  0019C4  EFAF  F00C         	goto	l2615
  2367  0019C8                     u2230:
  2368  0019C8  0012               	return		;funcret
  2369  0019CA                     __end_of_num_rodada:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _tempo *****************
  2373 ;; Defined at:
  2374 ;;		line 3 in file "delay.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  tempo_x         2    0[COMRAM] int 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  k               1    3[COMRAM] volatile unsigned char 
  2379 ;;  j               1    2[COMRAM] volatile unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2389 ;;      Params:         2       0       0       0       0       0       0
  2390 ;;      Locals:         2       0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0
  2392 ;;      Totals:         4       0       0       0       0       0       0
  2393 ;;Total ram usage:        4 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_num_rodada
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text6
  2404  0019CA                     __ptext6:
  2405                           	callstack 0
  2406  0019CA                     _tempo:
  2407                           	callstack 30
  2408  0019CA                     
  2409                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 6:     while(tempo_x>0){
  2410  0019CA  EF08  F00D         	goto	l2281
  2411  0019CE                     l2259:
  2412                           
  2413                           ;delay.c: 7:         for(j = 0; j < 10; j++) {
  2414  0019CE  0E00               	movlw	0
  2415  0019D0  6E46               	movwf	tempo@j^0,c	;volatile
  2416  0019D2                     l2261:
  2417  0019D2  0E09               	movlw	9
  2418  0019D4  6446               	cpfsgt	tempo@j^0,c	;volatile
  2419  0019D6  EFEF  F00C         	goto	u1821
  2420  0019DA  EFF1  F00C         	goto	u1820
  2421  0019DE                     u1821:
  2422  0019DE  EFF3  F00C         	goto	l2265
  2423  0019E2                     u1820:
  2424  0019E2  EF05  F00D         	goto	l2279
  2425  0019E6                     l2265:
  2426                           
  2427                           ;delay.c: 8:             for(k = 0; k < 3; k++);
  2428  0019E6  0E00               	movlw	0
  2429  0019E8  6E47               	movwf	tempo@k^0,c	;volatile
  2430  0019EA                     l2267:
  2431  0019EA  0E02               	movlw	2
  2432  0019EC  6447               	cpfsgt	tempo@k^0,c	;volatile
  2433  0019EE  EFFB  F00C         	goto	u1831
  2434  0019F2  EFFD  F00C         	goto	u1830
  2435  0019F6                     u1831:
  2436  0019F6  EFFF  F00C         	goto	l2271
  2437  0019FA                     u1830:
  2438  0019FA  EF02  F00D         	goto	l2275
  2439  0019FE                     l2271:
  2440  0019FE  2A47               	incf	tempo@k^0,f,c	;volatile
  2441  001A00  EFF5  F00C         	goto	l2267
  2442  001A04                     l2275:
  2443                           
  2444                           ;delay.c: 9:         }
  2445  001A04  2A46               	incf	tempo@j^0,f,c	;volatile
  2446  001A06  EFE9  F00C         	goto	l2261
  2447  001A0A                     l2279:
  2448                           
  2449                           ;delay.c: 10:         tempo_x--;
  2450  001A0A  0644               	decf	tempo@tempo_x^0,f,c
  2451  001A0C  A0D8               	btfss	status,0,c
  2452  001A0E  0645               	decf	(tempo@tempo_x+1)^0,f,c
  2453  001A10                     l2281:
  2454                           
  2455                           ;delay.c: 6:     while(tempo_x>0){
  2456  001A10  BE45               	btfsc	(tempo@tempo_x+1)^0,7,c
  2457  001A12  EF15  F00D         	goto	u1840
  2458  001A16  5045               	movf	(tempo@tempo_x+1)^0,w,c
  2459  001A18  E106               	bnz	u1841
  2460  001A1A  0444               	decf	tempo@tempo_x^0,w,c
  2461  001A1C  B0D8               	btfsc	status,0,c
  2462  001A1E  EF13  F00D         	goto	u1841
  2463  001A22  EF15  F00D         	goto	u1840
  2464  001A26                     u1841:
  2465  001A26  EFE7  F00C         	goto	l2259
  2466  001A2A                     u1840:
  2467  001A2A  0012               	return		;funcret
  2468  001A2C                     __end_of_tempo:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _ssdUpdate *****************
  2472 ;; Defined at:
  2473 ;;		line 54 in file "ssd.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2487 ;;      Params:         0       0       0       0       0       0       0
  2488 ;;      Locals:         0       0       0       0       0       0       0
  2489 ;;      Temps:          2       0       0       0       0       0       0
  2490 ;;      Totals:         2       0       0       0       0       0       0
  2491 ;;Total ram usage:        2 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 1
  2494 ;; This function calls:
  2495 ;;		_digitalWrite
  2496 ;; This function is called by:
  2497 ;;		_num_rodada
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text7
  2502  00141E                     __ptext7:
  2503                           	callstack 0
  2504  00141E                     _ssdUpdate:
  2505                           	callstack 28
  2506  00141E                     
  2507                           ;ssd.c: 58:     TRISD= 0x00;
  2508  00141E  0E00               	movlw	0
  2509  001420  6E95               	movwf	149,c	;volatile
  2510  001422                     
  2511                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2512  001422  0E00               	movlw	0
  2513  001424  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2514  001426  0E02               	movlw	2
  2515  001428  6E44               	movwf	digitalWrite@pin^0,c
  2516  00142A  0E00               	movlw	0
  2517  00142C  6E47               	movwf	(digitalWrite@value+1)^0,c
  2518  00142E  0E00               	movlw	0
  2519  001430  6E46               	movwf	digitalWrite@value^0,c
  2520  001432  EC75  F007         	call	_digitalWrite	;wreg free
  2521  001436                     
  2522                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2523  001436  0E00               	movlw	0
  2524  001438  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2525  00143A  0E03               	movlw	3
  2526  00143C  6E44               	movwf	digitalWrite@pin^0,c
  2527  00143E  0E00               	movlw	0
  2528  001440  6E47               	movwf	(digitalWrite@value+1)^0,c
  2529  001442  0E00               	movlw	0
  2530  001444  6E46               	movwf	digitalWrite@value^0,c
  2531  001446  EC75  F007         	call	_digitalWrite	;wreg free
  2532  00144A                     
  2533                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2534  00144A  0E00               	movlw	0
  2535  00144C  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2536  00144E  0E04               	movlw	4
  2537  001450  6E44               	movwf	digitalWrite@pin^0,c
  2538  001452  0E00               	movlw	0
  2539  001454  6E47               	movwf	(digitalWrite@value+1)^0,c
  2540  001456  0E00               	movlw	0
  2541  001458  6E46               	movwf	digitalWrite@value^0,c
  2542  00145A  EC75  F007         	call	_digitalWrite	;wreg free
  2543  00145E                     
  2544                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2545  00145E  0E00               	movlw	0
  2546  001460  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2547  001462  0E05               	movlw	5
  2548  001464  6E44               	movwf	digitalWrite@pin^0,c
  2549  001466  0E00               	movlw	0
  2550  001468  6E47               	movwf	(digitalWrite@value+1)^0,c
  2551  00146A  0E00               	movlw	0
  2552  00146C  6E46               	movwf	digitalWrite@value^0,c
  2553  00146E  EC75  F007         	call	_digitalWrite	;wreg free
  2554                           
  2555                           ;ssd.c: 66:     PORTD = 0x00;
  2556  001472  0E00               	movlw	0
  2557  001474  6E83               	movwf	131,c	;volatile
  2558                           
  2559                           ;ssd.c: 69:     switch (display)
  2560  001476  EF99  F00A         	goto	l2387
  2561  00147A                     l2359:
  2562                           
  2563                           ;ssd.c: 72:             PORTD = valor[v0];
  2564  00147A  0E01               	movlw	low _valor@ssd$F250
  2565  00147C  2465               	addwf	_v0^0,w,c
  2566  00147E  6EF6               	movwf	tblptrl,c
  2567  001480  6AF7               	clrf	tblptrh,c
  2568  001482  0E06               	movlw	high _valor@ssd$F250
  2569  001484  22F7               	addwfc	tblptrh,f,c
  2570  001486                     	if	0	;There are less than 3 active tblptr bytes
  2571  001486                     	endif
  2572  001486  0008               	tblrd		*
  2573  001488  CFF5 FF83          	movff	tablat,3971	;volatile
  2574  00148C                     
  2575                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2576  00148C  0E00               	movlw	0
  2577  00148E  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2578  001490  0E02               	movlw	2
  2579  001492  6E44               	movwf	digitalWrite@pin^0,c
  2580  001494  0E00               	movlw	0
  2581  001496  6E47               	movwf	(digitalWrite@value+1)^0,c
  2582  001498  0E01               	movlw	1
  2583  00149A  6E46               	movwf	digitalWrite@value^0,c
  2584  00149C  EC75  F007         	call	_digitalWrite	;wreg free
  2585  0014A0                     
  2586                           ;ssd.c: 74:             display = 1;
  2587  0014A0  0E01               	movlw	1
  2588  0014A2  6E66               	movwf	_display^0,c
  2589                           
  2590                           ;ssd.c: 75:             break;
  2591  0014A4  EFB6  F00A         	goto	l317
  2592  0014A8                     l2365:
  2593                           
  2594                           ;ssd.c: 78:             PORTD = valor[v1];
  2595  0014A8  0E01               	movlw	low _valor@ssd$F250
  2596  0014AA  2464               	addwf	_v1^0,w,c
  2597  0014AC  6EF6               	movwf	tblptrl,c
  2598  0014AE  6AF7               	clrf	tblptrh,c
  2599  0014B0  0E06               	movlw	high _valor@ssd$F250
  2600  0014B2  22F7               	addwfc	tblptrh,f,c
  2601  0014B4                     	if	0	;There are less than 3 active tblptr bytes
  2602  0014B4                     	endif
  2603  0014B4  0008               	tblrd		*
  2604  0014B6  CFF5 FF83          	movff	tablat,3971	;volatile
  2605  0014BA                     
  2606                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2607  0014BA  0E00               	movlw	0
  2608  0014BC  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2609  0014BE  0E03               	movlw	3
  2610  0014C0  6E44               	movwf	digitalWrite@pin^0,c
  2611  0014C2  0E00               	movlw	0
  2612  0014C4  6E47               	movwf	(digitalWrite@value+1)^0,c
  2613  0014C6  0E01               	movlw	1
  2614  0014C8  6E46               	movwf	digitalWrite@value^0,c
  2615  0014CA  EC75  F007         	call	_digitalWrite	;wreg free
  2616  0014CE                     
  2617                           ;ssd.c: 80:             display = 2;
  2618  0014CE  0E02               	movlw	2
  2619  0014D0  6E66               	movwf	_display^0,c
  2620                           
  2621                           ;ssd.c: 81:             break;
  2622  0014D2  EFB6  F00A         	goto	l317
  2623  0014D6                     l2371:
  2624                           
  2625                           ;ssd.c: 84:             PORTD = valor[v2];
  2626  0014D6  0E01               	movlw	low _valor@ssd$F250
  2627  0014D8  2463               	addwf	_v2^0,w,c
  2628  0014DA  6EF6               	movwf	tblptrl,c
  2629  0014DC  6AF7               	clrf	tblptrh,c
  2630  0014DE  0E06               	movlw	high _valor@ssd$F250
  2631  0014E0  22F7               	addwfc	tblptrh,f,c
  2632  0014E2                     	if	0	;There are less than 3 active tblptr bytes
  2633  0014E2                     	endif
  2634  0014E2  0008               	tblrd		*
  2635  0014E4  CFF5 FF83          	movff	tablat,3971	;volatile
  2636  0014E8                     
  2637                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2638  0014E8  0E00               	movlw	0
  2639  0014EA  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2640  0014EC  0E04               	movlw	4
  2641  0014EE  6E44               	movwf	digitalWrite@pin^0,c
  2642  0014F0  0E00               	movlw	0
  2643  0014F2  6E47               	movwf	(digitalWrite@value+1)^0,c
  2644  0014F4  0E01               	movlw	1
  2645  0014F6  6E46               	movwf	digitalWrite@value^0,c
  2646  0014F8  EC75  F007         	call	_digitalWrite	;wreg free
  2647  0014FC                     
  2648                           ;ssd.c: 86:             display = 3;
  2649  0014FC  0E03               	movlw	3
  2650  0014FE  6E66               	movwf	_display^0,c
  2651                           
  2652                           ;ssd.c: 87:             break;
  2653  001500  EFB6  F00A         	goto	l317
  2654  001504                     l2377:
  2655                           
  2656                           ;ssd.c: 90:             PORTD = valor[v3];
  2657  001504  0E01               	movlw	low _valor@ssd$F250
  2658  001506  2462               	addwf	_v3^0,w,c
  2659  001508  6EF6               	movwf	tblptrl,c
  2660  00150A  6AF7               	clrf	tblptrh,c
  2661  00150C  0E06               	movlw	high _valor@ssd$F250
  2662  00150E  22F7               	addwfc	tblptrh,f,c
  2663  001510                     	if	0	;There are less than 3 active tblptr bytes
  2664  001510                     	endif
  2665  001510  0008               	tblrd		*
  2666  001512  CFF5 FF83          	movff	tablat,3971	;volatile
  2667  001516                     
  2668                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2669  001516  0E00               	movlw	0
  2670  001518  6E45               	movwf	(digitalWrite@pin+1)^0,c
  2671  00151A  0E05               	movlw	5
  2672  00151C  6E44               	movwf	digitalWrite@pin^0,c
  2673  00151E  0E00               	movlw	0
  2674  001520  6E47               	movwf	(digitalWrite@value+1)^0,c
  2675  001522  0E01               	movlw	1
  2676  001524  6E46               	movwf	digitalWrite@value^0,c
  2677  001526  EC75  F007         	call	_digitalWrite	;wreg free
  2678  00152A                     l2381:
  2679                           
  2680                           ;ssd.c: 92:             display = 0;
  2681  00152A  0E00               	movlw	0
  2682  00152C  6E66               	movwf	_display^0,c
  2683                           
  2684                           ;ssd.c: 93:             break;
  2685  00152E  EFB6  F00A         	goto	l317
  2686  001532                     l2387:
  2687  001532  5066               	movf	_display^0,w,c
  2688  001534  6E4A               	movwf	??_ssdUpdate^0,c
  2689  001536  6A4B               	clrf	(??_ssdUpdate+1)^0,c
  2690                           
  2691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2692                           ; Switch size 1, requested type "simple"
  2693                           ; Number of cases is 1, Range of values is 0 to 0
  2694                           ; switch strategies available:
  2695                           ; Name         Instructions Cycles
  2696                           ; simple_byte            4     3 (average)
  2697                           ;	Chosen strategy is simple_byte
  2698  001538  504B               	movf	(??_ssdUpdate+1)^0,w,c
  2699  00153A  0A00               	xorlw	0	; case 0
  2700  00153C  B4D8               	btfsc	status,2,c
  2701  00153E  EFA3  F00A         	goto	l3051
  2702  001542  EF95  F00A         	goto	l2381
  2703  001546                     l3051:
  2704                           
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 4, Range of values is 0 to 3
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte           13     7 (average)
  2710                           ;	Chosen strategy is simple_byte
  2711  001546  504A               	movf	??_ssdUpdate^0,w,c
  2712  001548  0A00               	xorlw	0	; case 0
  2713  00154A  B4D8               	btfsc	status,2,c
  2714  00154C  EF3D  F00A         	goto	l2359
  2715  001550  0A01               	xorlw	1	; case 1
  2716  001552  B4D8               	btfsc	status,2,c
  2717  001554  EF54  F00A         	goto	l2365
  2718  001558  0A03               	xorlw	3	; case 2
  2719  00155A  B4D8               	btfsc	status,2,c
  2720  00155C  EF6B  F00A         	goto	l2371
  2721  001560  0A01               	xorlw	1	; case 3
  2722  001562  B4D8               	btfsc	status,2,c
  2723  001564  EF82  F00A         	goto	l2377
  2724  001568  EF95  F00A         	goto	l2381
  2725  00156C                     l317:
  2726  00156C  0012               	return		;funcret
  2727  00156E                     __end_of_ssdUpdate:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function _ssdDigit *****************
  2731 ;; Defined at:
  2732 ;;		line 38 in file "ssd.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  val             1    wreg     unsigned char 
  2735 ;;  pos             1    8[COMRAM] unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  val             1    9[COMRAM] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2747 ;;      Params:         1       0       0       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0
  2750 ;;      Totals:         2       0       0       0       0       0       0
  2751 ;;Total ram usage:        2 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_num_rodada
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text8
  2761  001A8C                     __ptext8:
  2762                           	callstack 0
  2763  001A8C                     _ssdDigit:
  2764                           	callstack 29
  2765                           
  2766                           ;incstack = 0
  2767                           ;ssdDigit@val stored from wreg
  2768  001A8C  6E4D               	movwf	ssdDigit@val^0,c
  2769  001A8E                     
  2770                           ;ssd.c: 39:     if (pos == 0) {
  2771  001A8E  504C               	movf	ssdDigit@pos^0,w,c
  2772  001A90  A4D8               	btfss	status,2,c
  2773  001A92  EF4D  F00D         	goto	u1851
  2774  001A96  EF4F  F00D         	goto	u1850
  2775  001A9A                     u1851:
  2776  001A9A  EF51  F00D         	goto	l2337
  2777  001A9E                     u1850:
  2778  001A9E                     
  2779                           ;ssd.c: 40:         v0 = val;
  2780  001A9E  C04D  F065         	movff	ssdDigit@val,_v0
  2781  001AA2                     l2337:
  2782                           
  2783                           ;ssd.c: 42:     if (pos == 1) {
  2784  001AA2  044C               	decf	ssdDigit@pos^0,w,c
  2785  001AA4  A4D8               	btfss	status,2,c
  2786  001AA6  EF57  F00D         	goto	u1861
  2787  001AAA  EF59  F00D         	goto	u1860
  2788  001AAE                     u1861:
  2789  001AAE  EF5B  F00D         	goto	l2341
  2790  001AB2                     u1860:
  2791  001AB2                     
  2792                           ;ssd.c: 43:         v1 = val;
  2793  001AB2  C04D  F064         	movff	ssdDigit@val,_v1
  2794  001AB6                     l2341:
  2795                           
  2796                           ;ssd.c: 45:     if (pos == 2) {
  2797  001AB6  0E02               	movlw	2
  2798  001AB8  184C               	xorwf	ssdDigit@pos^0,w,c
  2799  001ABA  A4D8               	btfss	status,2,c
  2800  001ABC  EF62  F00D         	goto	u1871
  2801  001AC0  EF64  F00D         	goto	u1870
  2802  001AC4                     u1871:
  2803  001AC4  EF66  F00D         	goto	l2345
  2804  001AC8                     u1870:
  2805  001AC8                     
  2806                           ;ssd.c: 46:         v2 = val;
  2807  001AC8  C04D  F063         	movff	ssdDigit@val,_v2
  2808  001ACC                     l2345:
  2809                           
  2810                           ;ssd.c: 48:     if (pos == 3) {
  2811  001ACC  0E03               	movlw	3
  2812  001ACE  184C               	xorwf	ssdDigit@pos^0,w,c
  2813  001AD0  A4D8               	btfss	status,2,c
  2814  001AD2  EF6D  F00D         	goto	u1881
  2815  001AD6  EF6F  F00D         	goto	u1880
  2816  001ADA                     u1881:
  2817  001ADA  EF71  F00D         	goto	l307
  2818  001ADE                     u1880:
  2819  001ADE                     
  2820                           ;ssd.c: 49:         v3 = val;
  2821  001ADE  C04D  F062         	movff	ssdDigit@val,_v3
  2822  001AE2                     l307:
  2823  001AE2  0012               	return		;funcret
  2824  001AE4                     __end_of_ssdDigit:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function ___awmod *****************
  2828 ;; Defined at:
  2829 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awmod.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  dividend        2    0[COMRAM] int 
  2832 ;;  divisor         2    2[COMRAM] int 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  sign            1    5[COMRAM] unsigned char 
  2835 ;;  counter         1    4[COMRAM] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2    0[COMRAM] int 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2845 ;;      Params:         4       0       0       0       0       0       0
  2846 ;;      Locals:         2       0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0
  2848 ;;      Totals:         6       0       0       0       0       0       0
  2849 ;;Total ram usage:        6 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_num_rodada
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text9
  2859  00173E                     __ptext9:
  2860                           	callstack 0
  2861  00173E                     ___awmod:
  2862                           	callstack 29
  2863  00173E  0E00               	movlw	0
  2864  001740  6E49               	movwf	___awmod@sign^0,c
  2865  001742  BE45               	btfsc	(___awmod@dividend+1)^0,7,c
  2866  001744  EFA8  F00B         	goto	u2010
  2867  001748  EFA6  F00B         	goto	u2011
  2868  00174C                     u2011:
  2869  00174C  EFAE  F00B         	goto	l2489
  2870  001750                     u2010:
  2871  001750  6C44               	negf	___awmod@dividend^0,c
  2872  001752  1E45               	comf	(___awmod@dividend+1)^0,f,c
  2873  001754  B0D8               	btfsc	status,0,c
  2874  001756  2A45               	incf	(___awmod@dividend+1)^0,f,c
  2875  001758  0E01               	movlw	1
  2876  00175A  6E49               	movwf	___awmod@sign^0,c
  2877  00175C                     l2489:
  2878  00175C  BE47               	btfsc	(___awmod@divisor+1)^0,7,c
  2879  00175E  EFB5  F00B         	goto	u2020
  2880  001762  EFB3  F00B         	goto	u2021
  2881  001766                     u2021:
  2882  001766  EFB9  F00B         	goto	l2493
  2883  00176A                     u2020:
  2884  00176A  6C46               	negf	___awmod@divisor^0,c
  2885  00176C  1E47               	comf	(___awmod@divisor+1)^0,f,c
  2886  00176E  B0D8               	btfsc	status,0,c
  2887  001770  2A47               	incf	(___awmod@divisor+1)^0,f,c
  2888  001772                     l2493:
  2889  001772  5046               	movf	___awmod@divisor^0,w,c
  2890  001774  1047               	iorwf	(___awmod@divisor+1)^0,w,c
  2891  001776  B4D8               	btfsc	status,2,c
  2892  001778  EFC0  F00B         	goto	u2031
  2893  00177C  EFC2  F00B         	goto	u2030
  2894  001780                     u2031:
  2895  001780  EFE6  F00B         	goto	l2509
  2896  001784                     u2030:
  2897  001784  0E01               	movlw	1
  2898  001786  6E48               	movwf	___awmod@counter^0,c
  2899  001788  EFCA  F00B         	goto	l2499
  2900  00178C                     l2497:
  2901  00178C  90D8               	bcf	status,0,c
  2902  00178E  3646               	rlcf	___awmod@divisor^0,f,c
  2903  001790  3647               	rlcf	(___awmod@divisor+1)^0,f,c
  2904  001792  2A48               	incf	___awmod@counter^0,f,c
  2905  001794                     l2499:
  2906  001794  AE47               	btfss	(___awmod@divisor+1)^0,7,c
  2907  001796  EFCF  F00B         	goto	u2041
  2908  00179A  EFD1  F00B         	goto	u2040
  2909  00179E                     u2041:
  2910  00179E  EFC6  F00B         	goto	l2497
  2911  0017A2                     u2040:
  2912  0017A2                     l2501:
  2913  0017A2  5046               	movf	___awmod@divisor^0,w,c
  2914  0017A4  5C44               	subwf	___awmod@dividend^0,w,c
  2915  0017A6  5047               	movf	(___awmod@divisor+1)^0,w,c
  2916  0017A8  5845               	subwfb	(___awmod@dividend+1)^0,w,c
  2917  0017AA  A0D8               	btfss	status,0,c
  2918  0017AC  EFDA  F00B         	goto	u2051
  2919  0017B0  EFDC  F00B         	goto	u2050
  2920  0017B4                     u2051:
  2921  0017B4  EFE0  F00B         	goto	l2505
  2922  0017B8                     u2050:
  2923  0017B8  5046               	movf	___awmod@divisor^0,w,c
  2924  0017BA  5E44               	subwf	___awmod@dividend^0,f,c
  2925  0017BC  5047               	movf	(___awmod@divisor+1)^0,w,c
  2926  0017BE  5A45               	subwfb	(___awmod@dividend+1)^0,f,c
  2927  0017C0                     l2505:
  2928  0017C0  90D8               	bcf	status,0,c
  2929  0017C2  3247               	rrcf	(___awmod@divisor+1)^0,f,c
  2930  0017C4  3246               	rrcf	___awmod@divisor^0,f,c
  2931  0017C6  2E48               	decfsz	___awmod@counter^0,f,c
  2932  0017C8  EFD1  F00B         	goto	l2501
  2933  0017CC                     l2509:
  2934  0017CC  5049               	movf	___awmod@sign^0,w,c
  2935  0017CE  B4D8               	btfsc	status,2,c
  2936  0017D0  EFEC  F00B         	goto	u2061
  2937  0017D4  EFEE  F00B         	goto	u2060
  2938  0017D8                     u2061:
  2939  0017D8  EFF2  F00B         	goto	l2513
  2940  0017DC                     u2060:
  2941  0017DC  6C44               	negf	___awmod@dividend^0,c
  2942  0017DE  1E45               	comf	(___awmod@dividend+1)^0,f,c
  2943  0017E0  B0D8               	btfsc	status,0,c
  2944  0017E2  2A45               	incf	(___awmod@dividend+1)^0,f,c
  2945  0017E4                     l2513:
  2946  0017E4  C044  F044         	movff	___awmod@dividend,?___awmod
  2947  0017E8  C045  F045         	movff	___awmod@dividend+1,?___awmod+1
  2948  0017EC  0012               	return		;funcret
  2949  0017EE                     __end_of___awmod:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function ___awdiv *****************
  2953 ;; Defined at:
  2954 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  dividend        2    0[COMRAM] int 
  2957 ;;  divisor         2    2[COMRAM] int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  quotient        2    6[COMRAM] int 
  2960 ;;  sign            1    5[COMRAM] unsigned char 
  2961 ;;  counter         1    4[COMRAM] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  2    0[COMRAM] int 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2971 ;;      Params:         4       0       0       0       0       0       0
  2972 ;;      Locals:         4       0       0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0
  2974 ;;      Totals:         8       0       0       0       0       0       0
  2975 ;;Total ram usage:        8 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_num_rodada
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text10
  2985  00167A                     __ptext10:
  2986                           	callstack 0
  2987  00167A                     ___awdiv:
  2988                           	callstack 29
  2989  00167A  0E00               	movlw	0
  2990  00167C  6E49               	movwf	___awdiv@sign^0,c
  2991  00167E  BE47               	btfsc	(___awdiv@divisor+1)^0,7,c
  2992  001680  EF46  F00B         	goto	u1950
  2993  001684  EF44  F00B         	goto	u1951
  2994  001688                     u1951:
  2995  001688  EF4C  F00B         	goto	l2445
  2996  00168C                     u1950:
  2997  00168C  6C46               	negf	___awdiv@divisor^0,c
  2998  00168E  1E47               	comf	(___awdiv@divisor+1)^0,f,c
  2999  001690  B0D8               	btfsc	status,0,c
  3000  001692  2A47               	incf	(___awdiv@divisor+1)^0,f,c
  3001  001694  0E01               	movlw	1
  3002  001696  6E49               	movwf	___awdiv@sign^0,c
  3003  001698                     l2445:
  3004  001698  BE45               	btfsc	(___awdiv@dividend+1)^0,7,c
  3005  00169A  EF53  F00B         	goto	u1960
  3006  00169E  EF51  F00B         	goto	u1961
  3007  0016A2                     u1961:
  3008  0016A2  EF59  F00B         	goto	l2451
  3009  0016A6                     u1960:
  3010  0016A6  6C44               	negf	___awdiv@dividend^0,c
  3011  0016A8  1E45               	comf	(___awdiv@dividend+1)^0,f,c
  3012  0016AA  B0D8               	btfsc	status,0,c
  3013  0016AC  2A45               	incf	(___awdiv@dividend+1)^0,f,c
  3014  0016AE  0E01               	movlw	1
  3015  0016B0  1A49               	xorwf	___awdiv@sign^0,f,c
  3016  0016B2                     l2451:
  3017  0016B2  0E00               	movlw	0
  3018  0016B4  6E4B               	movwf	(___awdiv@quotient+1)^0,c
  3019  0016B6  0E00               	movlw	0
  3020  0016B8  6E4A               	movwf	___awdiv@quotient^0,c
  3021  0016BA  5046               	movf	___awdiv@divisor^0,w,c
  3022  0016BC  1047               	iorwf	(___awdiv@divisor+1)^0,w,c
  3023  0016BE  B4D8               	btfsc	status,2,c
  3024  0016C0  EF64  F00B         	goto	u1971
  3025  0016C4  EF66  F00B         	goto	u1970
  3026  0016C8                     u1971:
  3027  0016C8  EF8E  F00B         	goto	l2473
  3028  0016CC                     u1970:
  3029  0016CC  0E01               	movlw	1
  3030  0016CE  6E48               	movwf	___awdiv@counter^0,c
  3031  0016D0  EF6E  F00B         	goto	l2459
  3032  0016D4                     l2457:
  3033  0016D4  90D8               	bcf	status,0,c
  3034  0016D6  3646               	rlcf	___awdiv@divisor^0,f,c
  3035  0016D8  3647               	rlcf	(___awdiv@divisor+1)^0,f,c
  3036  0016DA  2A48               	incf	___awdiv@counter^0,f,c
  3037  0016DC                     l2459:
  3038  0016DC  AE47               	btfss	(___awdiv@divisor+1)^0,7,c
  3039  0016DE  EF73  F00B         	goto	u1981
  3040  0016E2  EF75  F00B         	goto	u1980
  3041  0016E6                     u1981:
  3042  0016E6  EF6A  F00B         	goto	l2457
  3043  0016EA                     u1980:
  3044  0016EA                     l2461:
  3045  0016EA  90D8               	bcf	status,0,c
  3046  0016EC  364A               	rlcf	___awdiv@quotient^0,f,c
  3047  0016EE  364B               	rlcf	(___awdiv@quotient+1)^0,f,c
  3048  0016F0  5046               	movf	___awdiv@divisor^0,w,c
  3049  0016F2  5C44               	subwf	___awdiv@dividend^0,w,c
  3050  0016F4  5047               	movf	(___awdiv@divisor+1)^0,w,c
  3051  0016F6  5845               	subwfb	(___awdiv@dividend+1)^0,w,c
  3052  0016F8  A0D8               	btfss	status,0,c
  3053  0016FA  EF81  F00B         	goto	u1991
  3054  0016FE  EF83  F00B         	goto	u1990
  3055  001702                     u1991:
  3056  001702  EF88  F00B         	goto	l2469
  3057  001706                     u1990:
  3058  001706  5046               	movf	___awdiv@divisor^0,w,c
  3059  001708  5E44               	subwf	___awdiv@dividend^0,f,c
  3060  00170A  5047               	movf	(___awdiv@divisor+1)^0,w,c
  3061  00170C  5A45               	subwfb	(___awdiv@dividend+1)^0,f,c
  3062  00170E  804A               	bsf	___awdiv@quotient^0,0,c
  3063  001710                     l2469:
  3064  001710  90D8               	bcf	status,0,c
  3065  001712  3247               	rrcf	(___awdiv@divisor+1)^0,f,c
  3066  001714  3246               	rrcf	___awdiv@divisor^0,f,c
  3067  001716  2E48               	decfsz	___awdiv@counter^0,f,c
  3068  001718  EF75  F00B         	goto	l2461
  3069  00171C                     l2473:
  3070  00171C  5049               	movf	___awdiv@sign^0,w,c
  3071  00171E  B4D8               	btfsc	status,2,c
  3072  001720  EF94  F00B         	goto	u2001
  3073  001724  EF96  F00B         	goto	u2000
  3074  001728                     u2001:
  3075  001728  EF9A  F00B         	goto	l2477
  3076  00172C                     u2000:
  3077  00172C  6C4A               	negf	___awdiv@quotient^0,c
  3078  00172E  1E4B               	comf	(___awdiv@quotient+1)^0,f,c
  3079  001730  B0D8               	btfsc	status,0,c
  3080  001732  2A4B               	incf	(___awdiv@quotient+1)^0,f,c
  3081  001734                     l2477:
  3082  001734  C04A  F044         	movff	___awdiv@quotient,?___awdiv
  3083  001738  C04B  F045         	movff	___awdiv@quotient+1,?___awdiv+1
  3084  00173C  0012               	return		;funcret
  3085  00173E                     __end_of___awdiv:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _kpRead *****************
  3089 ;; Defined at:
  3090 ;;		line 35 in file "keypad.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2    0[COMRAM] unsigned int 
  3097 ;; Registers used:
  3098 ;;		None
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         2       0       0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text11
  3118  001C8E                     __ptext11:
  3119                           	callstack 0
  3120  001C8E                     _kpRead:
  3121                           	callstack 30
  3122  001C8E                     
  3123                           ;keypad.c: 36:     return valor;
  3124  001C8E  C060  F044         	movff	_valor,?_kpRead
  3125  001C92  C061  F045         	movff	_valor+1,?_kpRead+1
  3126  001C96  0012               	return		;funcret
  3127  001C98                     __end_of_kpRead:
  3128                           	callstack 0
  3129                           
  3130 ;; *************** function _kpInit *****************
  3131 ;; Defined at:
  3132 ;;		line 87 in file "keypad.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3146 ;;      Params:         0       0       0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0
  3149 ;;      Totals:         0       0       0       0       0       0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text12
  3160  001C98                     __ptext12:
  3161                           	callstack 0
  3162  001C98                     _kpInit:
  3163                           	callstack 30
  3164  001C98                     
  3165                           ;keypad.c: 89:     TRISB &= 0x07;
  3166  001C98  0E07               	movlw	7
  3167  001C9A  1693               	andwf	147,f,c	;volatile
  3168                           
  3169                           ;keypad.c: 91:     TRISD |= 0x0f;
  3170  001C9C  0E0F               	movlw	15
  3171  001C9E  1295               	iorwf	149,f,c	;volatile
  3172  001CA0  0012               	return		;funcret
  3173  001CA2                     __end_of_kpInit:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _kpDebounce *****************
  3177 ;; Defined at:
  3178 ;;		line 39 in file "keypad.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;		None
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  k               2    6[COMRAM] int 
  3183 ;;  i               1    9[COMRAM] unsigned char 
  3184 ;;  j               1    8[COMRAM] unsigned char 
  3185 ;;  old_D           1    5[COMRAM] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, prodl, prodh
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3195 ;;      Params:         0       0       0       0       0       0       0
  3196 ;;      Locals:         5       0       0       0       0       0       0
  3197 ;;      Temps:          5       0       0       0       0       0       0
  3198 ;;      Totals:        10       0       0       0       0       0       0
  3199 ;;Total ram usage:       10 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text13
  3209  001138                     __ptext13:
  3210                           	callstack 0
  3211  001138                     _kpDebounce:
  3212                           	callstack 30
  3213  001138                     
  3214                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3215  001138  CF83 F049          	movff	3971,kpDebounce@old_D	;volatile
  3216  00113C                     
  3217                           ;keypad.c: 51:     TRISD |= 0x0f;
  3218  00113C  0E0F               	movlw	15
  3219  00113E  1295               	iorwf	149,f,c	;volatile
  3220  001140                     
  3221                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3222  001140  0E00               	movlw	0
  3223  001142  6E4D               	movwf	kpDebounce@i^0,c
  3224  001144                     l2529:
  3225                           
  3226                           ;keypad.c: 55:         TRISB &= 0xF8;
  3227  001144  0EF8               	movlw	248
  3228  001146  1693               	andwf	147,f,c	;volatile
  3229                           
  3230                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3231  001148  C04D  F044         	movff	kpDebounce@i,??_kpDebounce
  3232  00114C  0E01               	movlw	1
  3233  00114E  6E45               	movwf	(??_kpDebounce+1)^0,c
  3234  001150  2A44               	incf	??_kpDebounce^0,f,c
  3235  001152  EFAD  F008         	goto	u2074
  3236  001156                     u2075:
  3237  001156  90D8               	bcf	status,0,c
  3238  001158  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  3239  00115A                     u2074:
  3240  00115A  2E44               	decfsz	??_kpDebounce^0,f,c
  3241  00115C  EFAB  F008         	goto	u2075
  3242  001160  5045               	movf	(??_kpDebounce+1)^0,w,c
  3243  001162  1293               	iorwf	147,f,c	;volatile
  3244                           
  3245                           ;keypad.c: 59:         PORTB |= 0x07;
  3246  001164  0E07               	movlw	7
  3247  001166  1281               	iorwf	129,f,c	;volatile
  3248                           
  3249                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3250  001168  C04D  F044         	movff	kpDebounce@i,??_kpDebounce
  3251  00116C  0E01               	movlw	1
  3252  00116E  6E45               	movwf	(??_kpDebounce+1)^0,c
  3253  001170  2A44               	incf	??_kpDebounce^0,f,c
  3254  001172  EFBD  F008         	goto	u2084
  3255  001176                     u2085:
  3256  001176  90D8               	bcf	status,0,c
  3257  001178  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  3258  00117A                     u2084:
  3259  00117A  2E44               	decfsz	??_kpDebounce^0,f,c
  3260  00117C  EFBB  F008         	goto	u2085
  3261  001180  5045               	movf	(??_kpDebounce+1)^0,w,c
  3262  001182  0AFF               	xorlw	255
  3263  001184  1681               	andwf	129,f,c	;volatile
  3264  001186                     
  3265                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3266  001186  0E00               	movlw	0
  3267  001188  6E4B               	movwf	(kpDebounce@k+1)^0,c
  3268  00118A  0E00               	movlw	0
  3269  00118C  6E4A               	movwf	kpDebounce@k^0,c
  3270  00118E                     l2537:
  3271  00118E  4A4A               	infsnz	kpDebounce@k^0,f,c
  3272  001190  2A4B               	incf	(kpDebounce@k+1)^0,f,c
  3273  001192  BE4B               	btfsc	(kpDebounce@k+1)^0,7,c
  3274  001194  EFD5  F008         	goto	u2091
  3275  001198  504B               	movf	(kpDebounce@k+1)^0,w,c
  3276  00119A  E109               	bnz	u2090
  3277  00119C  0E0A               	movlw	10
  3278  00119E  5C4A               	subwf	kpDebounce@k^0,w,c
  3279  0011A0  A0D8               	btfss	status,0,c
  3280  0011A2  EFD5  F008         	goto	u2091
  3281  0011A6  EFD7  F008         	goto	u2090
  3282  0011AA                     u2091:
  3283  0011AA  EFC7  F008         	goto	l2537
  3284  0011AE                     u2090:
  3285  0011AE                     
  3286                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3287  0011AE  0E00               	movlw	0
  3288  0011B0  6E4C               	movwf	kpDebounce@j^0,c
  3289  0011B2                     l2547:
  3290                           
  3291                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3292  0011B2  C04C  F044         	movff	kpDebounce@j,??_kpDebounce
  3293  0011B6  0E01               	movlw	1
  3294  0011B8  6E45               	movwf	(??_kpDebounce+1)^0,c
  3295  0011BA  2A44               	incf	??_kpDebounce^0,f,c
  3296  0011BC  EFE2  F008         	goto	u2104
  3297  0011C0                     u2105:
  3298  0011C0  90D8               	bcf	status,0,c
  3299  0011C2  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  3300  0011C4                     u2104:
  3301  0011C4  2E44               	decfsz	??_kpDebounce^0,f,c
  3302  0011C6  EFE0  F008         	goto	u2105
  3303  0011CA  5045               	movf	(??_kpDebounce+1)^0,w,c
  3304  0011CC  1483               	andwf	131,w,c	;volatile
  3305  0011CE  0900               	iorlw	0
  3306  0011D0  A4D8               	btfss	status,2,c
  3307  0011D2  EFED  F008         	goto	u2111
  3308  0011D6  EFEF  F008         	goto	u2110
  3309  0011DA                     u2111:
  3310  0011DA  EF07  F009         	goto	l2551
  3311  0011DE                     u2110:
  3312  0011DE                     
  3313                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3314  0011DE  504D               	movf	kpDebounce@i^0,w,c
  3315  0011E0  0D04               	mullw	4
  3316  0011E2  50F3               	movf	243,w,c
  3317  0011E4  244C               	addwf	kpDebounce@j^0,w,c
  3318  0011E6  6E44               	movwf	??_kpDebounce^0,c
  3319  0011E8  0E01               	movlw	1
  3320  0011EA  6E45               	movwf	(??_kpDebounce+1)^0,c
  3321  0011EC  0E00               	movlw	0
  3322  0011EE  6E46               	movwf	(??_kpDebounce+2)^0,c
  3323  0011F0  2A44               	incf	??_kpDebounce^0,f,c
  3324  0011F2  EFFE  F008         	goto	u2124
  3325  0011F6                     u2125:
  3326  0011F6  90D8               	bcf	status,0,c
  3327  0011F8  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  3328  0011FA  3646               	rlcf	(??_kpDebounce+2)^0,f,c
  3329  0011FC                     u2124:
  3330  0011FC  2E44               	decfsz	??_kpDebounce^0,f,c
  3331  0011FE  EFFB  F008         	goto	u2125
  3332  001202  5045               	movf	(??_kpDebounce+1)^0,w,c
  3333  001204  125E               	iorwf	kpDebounce@valorNovo^0,f,c
  3334  001206  5046               	movf	(??_kpDebounce+2)^0,w,c
  3335  001208  125F               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3336                           
  3337                           ;keypad.c: 69:             } else {
  3338  00120A  EF21  F009         	goto	l2553
  3339  00120E                     l2551:
  3340                           
  3341                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3342  00120E  504D               	movf	kpDebounce@i^0,w,c
  3343  001210  0D04               	mullw	4
  3344  001212  50F3               	movf	243,w,c
  3345  001214  244C               	addwf	kpDebounce@j^0,w,c
  3346  001216  6E44               	movwf	??_kpDebounce^0,c
  3347  001218  0E01               	movlw	1
  3348  00121A  6E45               	movwf	(??_kpDebounce+1)^0,c
  3349  00121C  0E00               	movlw	0
  3350  00121E  6E46               	movwf	(??_kpDebounce+2)^0,c
  3351  001220  2A44               	incf	??_kpDebounce^0,f,c
  3352  001222  EF16  F009         	goto	u2134
  3353  001226                     u2135:
  3354  001226  90D8               	bcf	status,0,c
  3355  001228  3645               	rlcf	(??_kpDebounce+1)^0,f,c
  3356  00122A  3646               	rlcf	(??_kpDebounce+2)^0,f,c
  3357  00122C                     u2134:
  3358  00122C  2E44               	decfsz	??_kpDebounce^0,f,c
  3359  00122E  EF13  F009         	goto	u2135
  3360  001232  1C45               	comf	(??_kpDebounce+1)^0,w,c
  3361  001234  6E47               	movwf	(??_kpDebounce+3)^0,c
  3362  001236  1C46               	comf	(??_kpDebounce+2)^0,w,c
  3363  001238  6E48               	movwf	(??_kpDebounce+4)^0,c
  3364  00123A  5047               	movf	(??_kpDebounce+3)^0,w,c
  3365  00123C  165E               	andwf	kpDebounce@valorNovo^0,f,c
  3366  00123E  5048               	movf	(??_kpDebounce+4)^0,w,c
  3367  001240  165F               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3368  001242                     l2553:
  3369                           
  3370                           ;keypad.c: 72:         }
  3371  001242  2A4C               	incf	kpDebounce@j^0,f,c
  3372  001244  0E03               	movlw	3
  3373  001246  644C               	cpfsgt	kpDebounce@j^0,c
  3374  001248  EF28  F009         	goto	u2141
  3375  00124C  EF2A  F009         	goto	u2140
  3376  001250                     u2141:
  3377  001250  EFD9  F008         	goto	l2547
  3378  001254                     u2140:
  3379  001254                     
  3380                           ;keypad.c: 73:     }
  3381  001254  2A4D               	incf	kpDebounce@i^0,f,c
  3382  001256  0E02               	movlw	2
  3383  001258  644D               	cpfsgt	kpDebounce@i^0,c
  3384  00125A  EF31  F009         	goto	u2151
  3385  00125E  EF33  F009         	goto	u2150
  3386  001262                     u2151:
  3387  001262  EFA2  F008         	goto	l2529
  3388  001266                     u2150:
  3389  001266                     
  3390                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3391  001266  505E               	movf	kpDebounce@valorNovo^0,w,c
  3392  001268  185C               	xorwf	kpDebounce@valorAntigo^0,w,c
  3393  00126A  E107               	bnz	u2161
  3394  00126C  505F               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3395  00126E  185D               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3396  001270  A4D8               	btfss	status,2,c
  3397  001272  EF3D  F009         	goto	u2161
  3398  001276  EF3F  F009         	goto	u2160
  3399  00127A                     u2161:
  3400  00127A  EF42  F009         	goto	l2565
  3401  00127E                     u2160:
  3402  00127E                     
  3403                           ;keypad.c: 75:         tempo--;
  3404  00127E  0667               	decf	kpDebounce@tempo^0,f,c
  3405                           
  3406                           ;keypad.c: 76:     } else {
  3407  001280  EF48  F009         	goto	l117
  3408  001284                     l2565:
  3409                           
  3410                           ;keypad.c: 77:         tempo = 10;
  3411  001284  0E0A               	movlw	10
  3412  001286  6E67               	movwf	kpDebounce@tempo^0,c
  3413  001288                     
  3414                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3415  001288  C05E  F05C         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3416  00128C  C05F  F05D         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3417  001290                     l117:
  3418                           
  3419                           ;keypad.c: 80:     if (tempo == 0) {
  3420  001290  5067               	movf	kpDebounce@tempo^0,w,c
  3421  001292  A4D8               	btfss	status,2,c
  3422  001294  EF4E  F009         	goto	u2171
  3423  001298  EF50  F009         	goto	u2170
  3424  00129C                     u2171:
  3425  00129C  EF54  F009         	goto	l118
  3426  0012A0                     u2170:
  3427  0012A0                     
  3428                           ;keypad.c: 81:         valor = valorAntigo;
  3429  0012A0  C05C  F060         	movff	kpDebounce@valorAntigo,_valor
  3430  0012A4  C05D  F061         	movff	kpDebounce@valorAntigo+1,_valor+1
  3431  0012A8                     l118:
  3432                           
  3433                           ;keypad.c: 83:     PORTD = old_D;
  3434  0012A8  C049  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3435  0012AC                     
  3436                           ;keypad.c: 84:     TRISD = 0x00;
  3437  0012AC  0E00               	movlw	0
  3438  0012AE  6E95               	movwf	149,c	;volatile
  3439  0012B0  0012               	return		;funcret
  3440  0012B2                     __end_of_kpDebounce:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _imprime_img *****************
  3444 ;; Defined at:
  3445 ;;		line 15 in file "main.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  img             2    8[COMRAM] PTR unsigned char 
  3448 ;;		 -> main@img4(32), main@img3(32), main@img2(32), main@img1(32), 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  i               1   10[COMRAM] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3460 ;;      Params:         2       0       0       0       0       0       0
  3461 ;;      Locals:         1       0       0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0
  3463 ;;      Totals:         3       0       0       0       0       0       0
  3464 ;;Total ram usage:        3 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 4
  3467 ;; This function calls:
  3468 ;;		_lcdCommand
  3469 ;;		_lcdData
  3470 ;;		_lcdInit
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text14
  3477  0012B2                     __ptext14:
  3478                           	callstack 0
  3479  0012B2                     _imprime_img:
  3480                           	callstack 26
  3481  0012B2                     
  3482                           ;main.c: 16:     char i;;main.c: 17:     lcdInit();
  3483  0012B2  EC36  F00C         	call	_lcdInit	;wreg free
  3484                           
  3485                           ;main.c: 18:     lcdCommand(0x40);
  3486  0012B6  0E40               	movlw	64
  3487  0012B8  ECF7  F00B         	call	_lcdCommand
  3488  0012BC                     
  3489                           ;main.c: 20:     for (i = 0; i < 32; i++) {
  3490  0012BC  0E00               	movlw	0
  3491  0012BE  6E4E               	movwf	imprime_img@i^0,c
  3492  0012C0                     l2583:
  3493                           
  3494                           ;main.c: 21:         lcdData(img[i]);
  3495  0012C0  504E               	movf	imprime_img@i^0,w,c
  3496  0012C2  244C               	addwf	imprime_img@img^0,w,c
  3497  0012C4  6ED9               	movwf	fsr2l,c
  3498  0012C6  0E00               	movlw	0
  3499  0012C8  204D               	addwfc	(imprime_img@img+1)^0,w,c
  3500  0012CA  6EDA               	movwf	fsr2h,c
  3501  0012CC  50DF               	movf	indf2,w,c
  3502  0012CE  EC9D  F00D         	call	_lcdData
  3503  0012D2                     
  3504                           ;main.c: 22:     }
  3505  0012D2  2A4E               	incf	imprime_img@i^0,f,c
  3506  0012D4  0E1F               	movlw	31
  3507  0012D6  644E               	cpfsgt	imprime_img@i^0,c
  3508  0012D8  EF70  F009         	goto	u2181
  3509  0012DC  EF72  F009         	goto	u2180
  3510  0012E0                     u2181:
  3511  0012E0  EF60  F009         	goto	l2583
  3512  0012E4                     u2180:
  3513  0012E4                     
  3514                           ;main.c: 24:     lcdCommand(0x8c);
  3515  0012E4  0E8C               	movlw	140
  3516  0012E6  ECF7  F00B         	call	_lcdCommand
  3517                           
  3518                           ;main.c: 25:     lcdData(0);
  3519  0012EA  0E00               	movlw	0
  3520  0012EC  EC9D  F00D         	call	_lcdData
  3521                           
  3522                           ;main.c: 26:     lcdData(1);
  3523  0012F0  0E01               	movlw	1
  3524  0012F2  EC9D  F00D         	call	_lcdData
  3525                           
  3526                           ;main.c: 27:     lcdCommand(0xcc);
  3527  0012F6  0ECC               	movlw	204
  3528  0012F8  ECF7  F00B         	call	_lcdCommand
  3529                           
  3530                           ;main.c: 28:     lcdData(2);
  3531  0012FC  0E02               	movlw	2
  3532  0012FE  EC9D  F00D         	call	_lcdData
  3533                           
  3534                           ;main.c: 29:     lcdData(3);
  3535  001302  0E03               	movlw	3
  3536  001304  EC9D  F00D         	call	_lcdData
  3537  001308                     
  3538                           ;main.c: 31:     pos++;
  3539  001308  4A58               	infsnz	_pos^0,f,c
  3540  00130A  2A59               	incf	(_pos+1)^0,f,c
  3541  00130C                     
  3542                           ;main.c: 32:     if (pos == 5) {
  3543  00130C  0E05               	movlw	5
  3544  00130E  1858               	xorwf	_pos^0,w,c
  3545  001310  1059               	iorwf	(_pos+1)^0,w,c
  3546  001312  A4D8               	btfss	status,2,c
  3547  001314  EF8E  F009         	goto	u2191
  3548  001318  EF90  F009         	goto	u2190
  3549  00131C                     u2191:
  3550  00131C  EF9F  F009         	goto	l2597
  3551  001320                     u2190:
  3552  001320                     
  3553                           ;main.c: 33:         lcdCommand(0x84);
  3554  001320  0E84               	movlw	132
  3555  001322  ECF7  F00B         	call	_lcdCommand
  3556                           
  3557                           ;main.c: 34:         lcdData('B');
  3558  001326  0E42               	movlw	66
  3559  001328  EC9D  F00D         	call	_lcdData
  3560                           
  3561                           ;main.c: 35:         lcdData('O');
  3562  00132C  0E4F               	movlw	79
  3563  00132E  EC9D  F00D         	call	_lcdData
  3564                           
  3565                           ;main.c: 36:         lcdData('M');
  3566  001332  0E4D               	movlw	77
  3567  001334  EC9D  F00D         	call	_lcdData
  3568                           
  3569                           ;main.c: 37:         lcdData('!');
  3570  001338  0E21               	movlw	33
  3571  00133A  EC9D  F00D         	call	_lcdData
  3572  00133E                     l2597:
  3573                           
  3574                           ;main.c: 39:     if (pos == 10) {
  3575  00133E  0E0A               	movlw	10
  3576  001340  1858               	xorwf	_pos^0,w,c
  3577  001342  1059               	iorwf	(_pos+1)^0,w,c
  3578  001344  A4D8               	btfss	status,2,c
  3579  001346  EFA7  F009         	goto	u2201
  3580  00134A  EFA9  F009         	goto	u2200
  3581  00134E                     u2201:
  3582  00134E  EFBE  F009         	goto	l2601
  3583  001352                     u2200:
  3584  001352                     
  3585                           ;main.c: 40:         lcdCommand(0x83);
  3586  001352  0E83               	movlw	131
  3587  001354  ECF7  F00B         	call	_lcdCommand
  3588                           
  3589                           ;main.c: 41:         lcdData('O');
  3590  001358  0E4F               	movlw	79
  3591  00135A  EC9D  F00D         	call	_lcdData
  3592                           
  3593                           ;main.c: 42:         lcdData('T');
  3594  00135E  0E54               	movlw	84
  3595  001360  EC9D  F00D         	call	_lcdData
  3596                           
  3597                           ;main.c: 43:         lcdData('I');
  3598  001364  0E49               	movlw	73
  3599  001366  EC9D  F00D         	call	_lcdData
  3600                           
  3601                           ;main.c: 44:         lcdData('M');
  3602  00136A  0E4D               	movlw	77
  3603  00136C  EC9D  F00D         	call	_lcdData
  3604                           
  3605                           ;main.c: 45:         lcdData('O');
  3606  001370  0E4F               	movlw	79
  3607  001372  EC9D  F00D         	call	_lcdData
  3608                           
  3609                           ;main.c: 46:         lcdData('!');
  3610  001376  0E21               	movlw	33
  3611  001378  EC9D  F00D         	call	_lcdData
  3612  00137C                     l2601:
  3613                           
  3614                           ;main.c: 48:     if (pos == 15) {
  3615  00137C  0E0F               	movlw	15
  3616  00137E  1858               	xorwf	_pos^0,w,c
  3617  001380  1059               	iorwf	(_pos+1)^0,w,c
  3618  001382  A4D8               	btfss	status,2,c
  3619  001384  EFC6  F009         	goto	u2211
  3620  001388  EFC8  F009         	goto	u2210
  3621  00138C                     u2211:
  3622  00138C  EFE3  F009         	goto	l2605
  3623  001390                     u2210:
  3624  001390                     
  3625                           ;main.c: 49:         lcdCommand(0x82);
  3626  001390  0E82               	movlw	130
  3627  001392  ECF7  F00B         	call	_lcdCommand
  3628                           
  3629                           ;main.c: 50:         lcdData('P');
  3630  001396  0E50               	movlw	80
  3631  001398  EC9D  F00D         	call	_lcdData
  3632                           
  3633                           ;main.c: 51:         lcdData('E');
  3634  00139C  0E45               	movlw	69
  3635  00139E  EC9D  F00D         	call	_lcdData
  3636                           
  3637                           ;main.c: 52:         lcdData('R');
  3638  0013A2  0E52               	movlw	82
  3639  0013A4  EC9D  F00D         	call	_lcdData
  3640                           
  3641                           ;main.c: 53:         lcdData('F');
  3642  0013A8  0E46               	movlw	70
  3643  0013AA  EC9D  F00D         	call	_lcdData
  3644                           
  3645                           ;main.c: 54:         lcdData('E');
  3646  0013AE  0E45               	movlw	69
  3647  0013B0  EC9D  F00D         	call	_lcdData
  3648                           
  3649                           ;main.c: 55:         lcdData('I');
  3650  0013B4  0E49               	movlw	73
  3651  0013B6  EC9D  F00D         	call	_lcdData
  3652                           
  3653                           ;main.c: 56:         lcdData('T');
  3654  0013BA  0E54               	movlw	84
  3655  0013BC  EC9D  F00D         	call	_lcdData
  3656                           
  3657                           ;main.c: 57:         lcdData('O');
  3658  0013C0  0E4F               	movlw	79
  3659  0013C2  EC9D  F00D         	call	_lcdData
  3660  0013C6                     l2605:
  3661                           
  3662                           ;main.c: 59:     if (pos == 20) {
  3663  0013C6  0E14               	movlw	20
  3664  0013C8  1858               	xorwf	_pos^0,w,c
  3665  0013CA  1059               	iorwf	(_pos+1)^0,w,c
  3666  0013CC  A4D8               	btfss	status,2,c
  3667  0013CE  EFEB  F009         	goto	u2221
  3668  0013D2  EFED  F009         	goto	u2220
  3669  0013D6                     u2221:
  3670  0013D6  EF0E  F00A         	goto	l190
  3671  0013DA                     u2220:
  3672  0013DA                     
  3673                           ;main.c: 60:         lcdCommand(0x81);
  3674  0013DA  0E81               	movlw	129
  3675  0013DC  ECF7  F00B         	call	_lcdCommand
  3676                           
  3677                           ;main.c: 61:         lcdData('*');
  3678  0013E0  0E2A               	movlw	42
  3679  0013E2  EC9D  F00D         	call	_lcdData
  3680                           
  3681                           ;main.c: 62:         lcdData('P');
  3682  0013E6  0E50               	movlw	80
  3683  0013E8  EC9D  F00D         	call	_lcdData
  3684                           
  3685                           ;main.c: 63:         lcdData('A');
  3686  0013EC  0E41               	movlw	65
  3687  0013EE  EC9D  F00D         	call	_lcdData
  3688                           
  3689                           ;main.c: 64:         lcdData('R');
  3690  0013F2  0E52               	movlw	82
  3691  0013F4  EC9D  F00D         	call	_lcdData
  3692                           
  3693                           ;main.c: 65:         lcdData('A');
  3694  0013F8  0E41               	movlw	65
  3695  0013FA  EC9D  F00D         	call	_lcdData
  3696                           
  3697                           ;main.c: 66:         lcdData('B');
  3698  0013FE  0E42               	movlw	66
  3699  001400  EC9D  F00D         	call	_lcdData
  3700                           
  3701                           ;main.c: 67:         lcdData('E');
  3702  001404  0E45               	movlw	69
  3703  001406  EC9D  F00D         	call	_lcdData
  3704                           
  3705                           ;main.c: 68:         lcdData('N');
  3706  00140A  0E4E               	movlw	78
  3707  00140C  EC9D  F00D         	call	_lcdData
  3708                           
  3709                           ;main.c: 69:         lcdData('S');
  3710  001410  0E53               	movlw	83
  3711  001412  EC9D  F00D         	call	_lcdData
  3712                           
  3713                           ;main.c: 70:         lcdData('*');
  3714  001416  0E2A               	movlw	42
  3715  001418  EC9D  F00D         	call	_lcdData
  3716  00141C                     l190:
  3717  00141C  0012               	return		;funcret
  3718  00141E                     __end_of_imprime_img:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _lcdInit *****************
  3722 ;; Defined at:
  3723 ;;		line 95 in file "lcd.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3737 ;;      Params:         0       0       0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 3
  3744 ;; This function calls:
  3745 ;;		_Delay2ms
  3746 ;;		_lcdCommand
  3747 ;;		_pinMode
  3748 ;; This function is called by:
  3749 ;;		_imprime_img
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text15
  3755  00186C                     __ptext15:
  3756                           	callstack 0
  3757  00186C                     _lcdInit:
  3758                           	callstack 27
  3759  00186C                     
  3760                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  3761  00186C  0E00               	movlw	0
  3762  00186E  6E45               	movwf	(pinMode@pin+1)^0,c
  3763  001870  0E22               	movlw	34
  3764  001872  6E44               	movwf	pinMode@pin^0,c
  3765  001874  0E00               	movlw	0
  3766  001876  6E47               	movwf	(pinMode@type+1)^0,c
  3767  001878  0E00               	movlw	0
  3768  00187A  6E46               	movwf	pinMode@type^0,c
  3769  00187C  EC4E  F006         	call	_pinMode	;wreg free
  3770                           
  3771                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  3772  001880  0E00               	movlw	0
  3773  001882  6E45               	movwf	(pinMode@pin+1)^0,c
  3774  001884  0E21               	movlw	33
  3775  001886  6E44               	movwf	pinMode@pin^0,c
  3776  001888  0E00               	movlw	0
  3777  00188A  6E47               	movwf	(pinMode@type+1)^0,c
  3778  00188C  0E00               	movlw	0
  3779  00188E  6E46               	movwf	pinMode@type^0,c
  3780  001890  EC4E  F006         	call	_pinMode	;wreg free
  3781  001894                     
  3782                           ;lcd.c: 99:  TRISD = 0x00;
  3783  001894  0E00               	movlw	0
  3784  001896  6E95               	movwf	149,c	;volatile
  3785  001898                     
  3786                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  3787  001898  EC23  F00E         	call	_Delay2ms	;wreg free
  3788  00189C  EC23  F00E         	call	_Delay2ms	;wreg free
  3789  0018A0  EC23  F00E         	call	_Delay2ms	;wreg free
  3790  0018A4  EC23  F00E         	call	_Delay2ms	;wreg free
  3791  0018A8  EC23  F00E         	call	_Delay2ms	;wreg free
  3792  0018AC                     
  3793                           ;lcd.c: 104:     lcdCommand(0x38);
  3794  0018AC  0E38               	movlw	56
  3795  0018AE  ECF7  F00B         	call	_lcdCommand
  3796  0018B2                     
  3797                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  3798  0018B2  EC23  F00E         	call	_Delay2ms	;wreg free
  3799  0018B6  EC23  F00E         	call	_Delay2ms	;wreg free
  3800  0018BA                     
  3801                           ;lcd.c: 106:     lcdCommand(0x38);
  3802  0018BA  0E38               	movlw	56
  3803  0018BC  ECF7  F00B         	call	_lcdCommand
  3804  0018C0                     
  3805                           ;lcd.c: 107:     Delay2ms();
  3806  0018C0  EC23  F00E         	call	_Delay2ms	;wreg free
  3807  0018C4                     
  3808                           ;lcd.c: 108:     lcdCommand(0x38);
  3809  0018C4  0E38               	movlw	56
  3810  0018C6  ECF7  F00B         	call	_lcdCommand
  3811  0018CA                     
  3812                           ;lcd.c: 110:     lcdCommand(0x38);
  3813  0018CA  0E38               	movlw	56
  3814  0018CC  ECF7  F00B         	call	_lcdCommand
  3815  0018D0                     
  3816                           ;lcd.c: 111:     lcdCommand(0x06);
  3817  0018D0  0E06               	movlw	6
  3818  0018D2  ECF7  F00B         	call	_lcdCommand
  3819  0018D6                     
  3820                           ;lcd.c: 114:     lcdCommand(0x0C);
  3821  0018D6  0E0C               	movlw	12
  3822  0018D8  ECF7  F00B         	call	_lcdCommand
  3823  0018DC                     
  3824                           ;lcd.c: 115:     lcdCommand(0x01);
  3825  0018DC  0E01               	movlw	1
  3826  0018DE  ECF7  F00B         	call	_lcdCommand
  3827  0018E2  0012               	return		;funcret
  3828  0018E4                     __end_of_lcdInit:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _pinMode *****************
  3832 ;; Defined at:
  3833 ;;		line 54 in file "io.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  pin             2    0[COMRAM] int 
  3836 ;;  type            2    2[COMRAM] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3848 ;;      Params:         4       0       0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0
  3850 ;;      Temps:          2       0       0       0       0       0       0
  3851 ;;      Totals:         6       0       0       0       0       0       0
  3852 ;;Total ram usage:        6 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_lcdInit
  3858 ;;		_ssdInit
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text16
  3863  000C9C                     __ptext16:
  3864                           	callstack 0
  3865  000C9C                     _pinMode:
  3866                           	callstack 29
  3867  000C9C                     
  3868                           ;io.c: 56:     if(pin <8){
  3869  000C9C  BE45               	btfsc	(pinMode@pin+1)^0,7,c
  3870  000C9E  EF5C  F006         	goto	u1600
  3871  000CA2  5045               	movf	(pinMode@pin+1)^0,w,c
  3872  000CA4  E107               	bnz	u1601
  3873  000CA6  0E08               	movlw	8
  3874  000CA8  5C44               	subwf	pinMode@pin^0,w,c
  3875  000CAA  B0D8               	btfsc	status,0,c
  3876  000CAC  EF5A  F006         	goto	u1601
  3877  000CB0  EF5C  F006         	goto	u1600
  3878  000CB4                     u1601:
  3879  000CB4  EF86  F006         	goto	l2203
  3880  000CB8                     u1600:
  3881  000CB8                     
  3882                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3883  000CB8  5046               	movf	pinMode@type^0,w,c
  3884  000CBA  1047               	iorwf	(pinMode@type+1)^0,w,c
  3885  000CBC  B4D8               	btfsc	status,2,c
  3886  000CBE  EF63  F006         	goto	u1611
  3887  000CC2  EF65  F006         	goto	u1610
  3888  000CC6                     u1611:
  3889  000CC6  EF75  F006         	goto	l2201
  3890  000CCA                     u1610:
  3891  000CCA  C044  F048         	movff	pinMode@pin,??_pinMode
  3892  000CCE  0E01               	movlw	1
  3893  000CD0  6E49               	movwf	(??_pinMode+1)^0,c
  3894  000CD2  2A48               	incf	??_pinMode^0,f,c
  3895  000CD4  EF6E  F006         	goto	u1624
  3896  000CD8                     u1625:
  3897  000CD8  90D8               	bcf	status,0,c
  3898  000CDA  3649               	rlcf	(??_pinMode+1)^0,f,c
  3899  000CDC                     u1624:
  3900  000CDC  2E48               	decfsz	??_pinMode^0,f,c
  3901  000CDE  EF6C  F006         	goto	u1625
  3902  000CE2  5049               	movf	(??_pinMode+1)^0,w,c
  3903  000CE4  1292               	iorwf	146,f,c	;volatile
  3904  000CE6  EF74  F007         	goto	l86
  3905  000CEA                     l2201:
  3906  000CEA  C044  F048         	movff	pinMode@pin,??_pinMode
  3907  000CEE  0E01               	movlw	1
  3908  000CF0  6E49               	movwf	(??_pinMode+1)^0,c
  3909  000CF2  2A48               	incf	??_pinMode^0,f,c
  3910  000CF4  EF7E  F006         	goto	u1634
  3911  000CF8                     u1635:
  3912  000CF8  90D8               	bcf	status,0,c
  3913  000CFA  3649               	rlcf	(??_pinMode+1)^0,f,c
  3914  000CFC                     u1634:
  3915  000CFC  2E48               	decfsz	??_pinMode^0,f,c
  3916  000CFE  EF7C  F006         	goto	u1635
  3917  000D02  5049               	movf	(??_pinMode+1)^0,w,c
  3918  000D04  0AFF               	xorlw	255
  3919  000D06  1692               	andwf	146,f,c	;volatile
  3920  000D08  EF74  F007         	goto	l86
  3921  000D0C                     l2203:
  3922  000D0C  BE45               	btfsc	(pinMode@pin+1)^0,7,c
  3923  000D0E  EF94  F006         	goto	u1640
  3924  000D12  5045               	movf	(pinMode@pin+1)^0,w,c
  3925  000D14  E107               	bnz	u1641
  3926  000D16  0E10               	movlw	16
  3927  000D18  5C44               	subwf	pinMode@pin^0,w,c
  3928  000D1A  B0D8               	btfsc	status,0,c
  3929  000D1C  EF92  F006         	goto	u1641
  3930  000D20  EF94  F006         	goto	u1640
  3931  000D24                     u1641:
  3932  000D24  EFC2  F006         	goto	l2211
  3933  000D28                     u1640:
  3934  000D28                     
  3935                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3936  000D28  5046               	movf	pinMode@type^0,w,c
  3937  000D2A  1047               	iorwf	(pinMode@type+1)^0,w,c
  3938  000D2C  B4D8               	btfsc	status,2,c
  3939  000D2E  EF9B  F006         	goto	u1651
  3940  000D32  EF9D  F006         	goto	u1650
  3941  000D36                     u1651:
  3942  000D36  EFAF  F006         	goto	l2209
  3943  000D3A                     u1650:
  3944  000D3A  C044  F048         	movff	pinMode@pin,??_pinMode
  3945  000D3E  0EF8               	movlw	-8
  3946  000D40  2648               	addwf	??_pinMode^0,f,c
  3947  000D42  0E01               	movlw	1
  3948  000D44  6E49               	movwf	(??_pinMode+1)^0,c
  3949  000D46  2A48               	incf	??_pinMode^0,f,c
  3950  000D48  EFA8  F006         	goto	u1664
  3951  000D4C                     u1665:
  3952  000D4C  90D8               	bcf	status,0,c
  3953  000D4E  3649               	rlcf	(??_pinMode+1)^0,f,c
  3954  000D50                     u1664:
  3955  000D50  2E48               	decfsz	??_pinMode^0,f,c
  3956  000D52  EFA6  F006         	goto	u1665
  3957  000D56  5049               	movf	(??_pinMode+1)^0,w,c
  3958  000D58  1293               	iorwf	147,f,c	;volatile
  3959  000D5A  EF74  F007         	goto	l86
  3960  000D5E                     l2209:
  3961  000D5E  C044  F048         	movff	pinMode@pin,??_pinMode
  3962  000D62  0EF8               	movlw	-8
  3963  000D64  2648               	addwf	??_pinMode^0,f,c
  3964  000D66  0E01               	movlw	1
  3965  000D68  6E49               	movwf	(??_pinMode+1)^0,c
  3966  000D6A  2A48               	incf	??_pinMode^0,f,c
  3967  000D6C  EFBA  F006         	goto	u1674
  3968  000D70                     u1675:
  3969  000D70  90D8               	bcf	status,0,c
  3970  000D72  3649               	rlcf	(??_pinMode+1)^0,f,c
  3971  000D74                     u1674:
  3972  000D74  2E48               	decfsz	??_pinMode^0,f,c
  3973  000D76  EFB8  F006         	goto	u1675
  3974  000D7A  5049               	movf	(??_pinMode+1)^0,w,c
  3975  000D7C  0AFF               	xorlw	255
  3976  000D7E  1693               	andwf	147,f,c	;volatile
  3977  000D80  EF74  F007         	goto	l86
  3978  000D84                     l2211:
  3979  000D84  BE45               	btfsc	(pinMode@pin+1)^0,7,c
  3980  000D86  EFD0  F006         	goto	u1680
  3981  000D8A  5045               	movf	(pinMode@pin+1)^0,w,c
  3982  000D8C  E107               	bnz	u1681
  3983  000D8E  0E18               	movlw	24
  3984  000D90  5C44               	subwf	pinMode@pin^0,w,c
  3985  000D92  B0D8               	btfsc	status,0,c
  3986  000D94  EFCE  F006         	goto	u1681
  3987  000D98  EFD0  F006         	goto	u1680
  3988  000D9C                     u1681:
  3989  000D9C  EFFE  F006         	goto	l2219
  3990  000DA0                     u1680:
  3991  000DA0                     
  3992                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3993  000DA0  5046               	movf	pinMode@type^0,w,c
  3994  000DA2  1047               	iorwf	(pinMode@type+1)^0,w,c
  3995  000DA4  B4D8               	btfsc	status,2,c
  3996  000DA6  EFD7  F006         	goto	u1691
  3997  000DAA  EFD9  F006         	goto	u1690
  3998  000DAE                     u1691:
  3999  000DAE  EFEB  F006         	goto	l2217
  4000  000DB2                     u1690:
  4001  000DB2  C044  F048         	movff	pinMode@pin,??_pinMode
  4002  000DB6  0EF0               	movlw	-16
  4003  000DB8  2648               	addwf	??_pinMode^0,f,c
  4004  000DBA  0E01               	movlw	1
  4005  000DBC  6E49               	movwf	(??_pinMode+1)^0,c
  4006  000DBE  2A48               	incf	??_pinMode^0,f,c
  4007  000DC0  EFE4  F006         	goto	u1704
  4008  000DC4                     u1705:
  4009  000DC4  90D8               	bcf	status,0,c
  4010  000DC6  3649               	rlcf	(??_pinMode+1)^0,f,c
  4011  000DC8                     u1704:
  4012  000DC8  2E48               	decfsz	??_pinMode^0,f,c
  4013  000DCA  EFE2  F006         	goto	u1705
  4014  000DCE  5049               	movf	(??_pinMode+1)^0,w,c
  4015  000DD0  1294               	iorwf	148,f,c	;volatile
  4016  000DD2  EF74  F007         	goto	l86
  4017  000DD6                     l2217:
  4018  000DD6  C044  F048         	movff	pinMode@pin,??_pinMode
  4019  000DDA  0EF0               	movlw	-16
  4020  000DDC  2648               	addwf	??_pinMode^0,f,c
  4021  000DDE  0E01               	movlw	1
  4022  000DE0  6E49               	movwf	(??_pinMode+1)^0,c
  4023  000DE2  2A48               	incf	??_pinMode^0,f,c
  4024  000DE4  EFF6  F006         	goto	u1714
  4025  000DE8                     u1715:
  4026  000DE8  90D8               	bcf	status,0,c
  4027  000DEA  3649               	rlcf	(??_pinMode+1)^0,f,c
  4028  000DEC                     u1714:
  4029  000DEC  2E48               	decfsz	??_pinMode^0,f,c
  4030  000DEE  EFF4  F006         	goto	u1715
  4031  000DF2  5049               	movf	(??_pinMode+1)^0,w,c
  4032  000DF4  0AFF               	xorlw	255
  4033  000DF6  1694               	andwf	148,f,c	;volatile
  4034  000DF8  EF74  F007         	goto	l86
  4035  000DFC                     l2219:
  4036  000DFC  BE45               	btfsc	(pinMode@pin+1)^0,7,c
  4037  000DFE  EF0C  F007         	goto	u1720
  4038  000E02  5045               	movf	(pinMode@pin+1)^0,w,c
  4039  000E04  E107               	bnz	u1721
  4040  000E06  0E20               	movlw	32
  4041  000E08  5C44               	subwf	pinMode@pin^0,w,c
  4042  000E0A  B0D8               	btfsc	status,0,c
  4043  000E0C  EF0A  F007         	goto	u1721
  4044  000E10  EF0C  F007         	goto	u1720
  4045  000E14                     u1721:
  4046  000E14  EF3A  F007         	goto	l2227
  4047  000E18                     u1720:
  4048  000E18                     
  4049                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4050  000E18  5046               	movf	pinMode@type^0,w,c
  4051  000E1A  1047               	iorwf	(pinMode@type+1)^0,w,c
  4052  000E1C  B4D8               	btfsc	status,2,c
  4053  000E1E  EF13  F007         	goto	u1731
  4054  000E22  EF15  F007         	goto	u1730
  4055  000E26                     u1731:
  4056  000E26  EF27  F007         	goto	l2225
  4057  000E2A                     u1730:
  4058  000E2A  C044  F048         	movff	pinMode@pin,??_pinMode
  4059  000E2E  0EE8               	movlw	-24
  4060  000E30  2648               	addwf	??_pinMode^0,f,c
  4061  000E32  0E01               	movlw	1
  4062  000E34  6E49               	movwf	(??_pinMode+1)^0,c
  4063  000E36  2A48               	incf	??_pinMode^0,f,c
  4064  000E38  EF20  F007         	goto	u1744
  4065  000E3C                     u1745:
  4066  000E3C  90D8               	bcf	status,0,c
  4067  000E3E  3649               	rlcf	(??_pinMode+1)^0,f,c
  4068  000E40                     u1744:
  4069  000E40  2E48               	decfsz	??_pinMode^0,f,c
  4070  000E42  EF1E  F007         	goto	u1745
  4071  000E46  5049               	movf	(??_pinMode+1)^0,w,c
  4072  000E48  1295               	iorwf	149,f,c	;volatile
  4073  000E4A  EF74  F007         	goto	l86
  4074  000E4E                     l2225:
  4075  000E4E  C044  F048         	movff	pinMode@pin,??_pinMode
  4076  000E52  0EE8               	movlw	-24
  4077  000E54  2648               	addwf	??_pinMode^0,f,c
  4078  000E56  0E01               	movlw	1
  4079  000E58  6E49               	movwf	(??_pinMode+1)^0,c
  4080  000E5A  2A48               	incf	??_pinMode^0,f,c
  4081  000E5C  EF32  F007         	goto	u1754
  4082  000E60                     u1755:
  4083  000E60  90D8               	bcf	status,0,c
  4084  000E62  3649               	rlcf	(??_pinMode+1)^0,f,c
  4085  000E64                     u1754:
  4086  000E64  2E48               	decfsz	??_pinMode^0,f,c
  4087  000E66  EF30  F007         	goto	u1755
  4088  000E6A  5049               	movf	(??_pinMode+1)^0,w,c
  4089  000E6C  0AFF               	xorlw	255
  4090  000E6E  1695               	andwf	149,f,c	;volatile
  4091  000E70  EF74  F007         	goto	l86
  4092  000E74                     l2227:
  4093  000E74  BE45               	btfsc	(pinMode@pin+1)^0,7,c
  4094  000E76  EF48  F007         	goto	u1760
  4095  000E7A  5045               	movf	(pinMode@pin+1)^0,w,c
  4096  000E7C  E107               	bnz	u1761
  4097  000E7E  0E28               	movlw	40
  4098  000E80  5C44               	subwf	pinMode@pin^0,w,c
  4099  000E82  B0D8               	btfsc	status,0,c
  4100  000E84  EF46  F007         	goto	u1761
  4101  000E88  EF48  F007         	goto	u1760
  4102  000E8C                     u1761:
  4103  000E8C  EF74  F007         	goto	l86
  4104  000E90                     u1760:
  4105  000E90                     
  4106                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4107  000E90  5046               	movf	pinMode@type^0,w,c
  4108  000E92  1047               	iorwf	(pinMode@type+1)^0,w,c
  4109  000E94  B4D8               	btfsc	status,2,c
  4110  000E96  EF4F  F007         	goto	u1771
  4111  000E9A  EF51  F007         	goto	u1770
  4112  000E9E                     u1771:
  4113  000E9E  EF63  F007         	goto	l2233
  4114  000EA2                     u1770:
  4115  000EA2  C044  F048         	movff	pinMode@pin,??_pinMode
  4116  000EA6  0EE0               	movlw	-32
  4117  000EA8  2648               	addwf	??_pinMode^0,f,c
  4118  000EAA  0E01               	movlw	1
  4119  000EAC  6E49               	movwf	(??_pinMode+1)^0,c
  4120  000EAE  2A48               	incf	??_pinMode^0,f,c
  4121  000EB0  EF5C  F007         	goto	u1784
  4122  000EB4                     u1785:
  4123  000EB4  90D8               	bcf	status,0,c
  4124  000EB6  3649               	rlcf	(??_pinMode+1)^0,f,c
  4125  000EB8                     u1784:
  4126  000EB8  2E48               	decfsz	??_pinMode^0,f,c
  4127  000EBA  EF5A  F007         	goto	u1785
  4128  000EBE  5049               	movf	(??_pinMode+1)^0,w,c
  4129  000EC0  1296               	iorwf	150,f,c	;volatile
  4130  000EC2  EF74  F007         	goto	l86
  4131  000EC6                     l2233:
  4132  000EC6  C044  F048         	movff	pinMode@pin,??_pinMode
  4133  000ECA  0EE0               	movlw	-32
  4134  000ECC  2648               	addwf	??_pinMode^0,f,c
  4135  000ECE  0E01               	movlw	1
  4136  000ED0  6E49               	movwf	(??_pinMode+1)^0,c
  4137  000ED2  2A48               	incf	??_pinMode^0,f,c
  4138  000ED4  EF6E  F007         	goto	u1794
  4139  000ED8                     u1795:
  4140  000ED8  90D8               	bcf	status,0,c
  4141  000EDA  3649               	rlcf	(??_pinMode+1)^0,f,c
  4142  000EDC                     u1794:
  4143  000EDC  2E48               	decfsz	??_pinMode^0,f,c
  4144  000EDE  EF6C  F007         	goto	u1795
  4145  000EE2  5049               	movf	(??_pinMode+1)^0,w,c
  4146  000EE4  0AFF               	xorlw	255
  4147  000EE6  1696               	andwf	150,f,c	;volatile
  4148  000EE8                     l86:
  4149  000EE8  0012               	return		;funcret
  4150  000EEA                     __end_of_pinMode:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _lcdCommand *****************
  4154 ;; Defined at:
  4155 ;;		line 48 in file "lcd.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  cmd             1    wreg     unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  cmd             1    7[COMRAM] unsigned char 
  4160 ;;  old_D           1    6[COMRAM] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4170 ;;      Params:         0       0       0       0       0       0       0
  4171 ;;      Locals:         2       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0
  4173 ;;      Totals:         2       0       0       0       0       0       0
  4174 ;;Total ram usage:        2 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 2
  4177 ;; This function calls:
  4178 ;;		_Delay2ms
  4179 ;;		_Delay40us
  4180 ;;		_digitalWrite
  4181 ;; This function is called by:
  4182 ;;		_lcdInit
  4183 ;;		_imprime_img
  4184 ;;		_main
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text17
  4189  0017EE                     __ptext17:
  4190                           	callstack 0
  4191  0017EE                     _lcdCommand:
  4192                           	callstack 27
  4193                           
  4194                           ;incstack = 0
  4195                           ;lcdCommand@cmd stored from wreg
  4196  0017EE  6E4B               	movwf	lcdCommand@cmd^0,c
  4197  0017F0                     
  4198                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  4199  0017F0  CF83 F04A          	movff	3971,lcdCommand@old_D	;volatile
  4200  0017F4                     
  4201                           ;lcd.c: 54:     TRISD = 0x00;
  4202  0017F4  0E00               	movlw	0
  4203  0017F6  6E95               	movwf	149,c	;volatile
  4204  0017F8                     
  4205                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  4206  0017F8  0E00               	movlw	0
  4207  0017FA  6E45               	movwf	(digitalWrite@pin+1)^0,c
  4208  0017FC  0E22               	movlw	34
  4209  0017FE  6E44               	movwf	digitalWrite@pin^0,c
  4210  001800  0E00               	movlw	0
  4211  001802  6E47               	movwf	(digitalWrite@value+1)^0,c
  4212  001804  0E00               	movlw	0
  4213  001806  6E46               	movwf	digitalWrite@value^0,c
  4214  001808  EC75  F007         	call	_digitalWrite	;wreg free
  4215  00180C                     
  4216                           ;lcd.c: 57:  PORTD = cmd;
  4217  00180C  C04B  FF83         	movff	lcdCommand@cmd,3971	;volatile
  4218  001810                     
  4219                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  4220  001810  0E00               	movlw	0
  4221  001812  6E45               	movwf	(digitalWrite@pin+1)^0,c
  4222  001814  0E21               	movlw	33
  4223  001816  6E44               	movwf	digitalWrite@pin^0,c
  4224  001818  0E00               	movlw	0
  4225  00181A  6E47               	movwf	(digitalWrite@value+1)^0,c
  4226  00181C  0E01               	movlw	1
  4227  00181E  6E46               	movwf	digitalWrite@value^0,c
  4228  001820  EC75  F007         	call	_digitalWrite	;wreg free
  4229  001824                     
  4230                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  4231  001824  0E00               	movlw	0
  4232  001826  6E45               	movwf	(digitalWrite@pin+1)^0,c
  4233  001828  0E21               	movlw	33
  4234  00182A  6E44               	movwf	digitalWrite@pin^0,c
  4235  00182C  0E00               	movlw	0
  4236  00182E  6E47               	movwf	(digitalWrite@value+1)^0,c
  4237  001830  0E00               	movlw	0
  4238  001832  6E46               	movwf	digitalWrite@value^0,c
  4239  001834  EC75  F007         	call	_digitalWrite	;wreg free
  4240  001838                     
  4241                           ;lcd.c: 63:     PORTD= old_D;
  4242  001838  C04A  FF83         	movff	lcdCommand@old_D,3971	;volatile
  4243  00183C                     
  4244                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  4245  00183C  0E02               	movlw	2
  4246  00183E  184B               	xorwf	lcdCommand@cmd^0,w,c
  4247  001840  B4D8               	btfsc	status,2,c
  4248  001842  EF25  F00C         	goto	u1801
  4249  001846  EF27  F00C         	goto	u1800
  4250  00184A                     u1801:
  4251  00184A  EF2F  F00C         	goto	l2253
  4252  00184E                     u1800:
  4253  00184E  044B               	decf	lcdCommand@cmd^0,w,c
  4254  001850  A4D8               	btfss	status,2,c
  4255  001852  EF2D  F00C         	goto	u1811
  4256  001856  EF2F  F00C         	goto	u1810
  4257  00185A                     u1811:
  4258  00185A  EF33  F00C         	goto	l2255
  4259  00185E                     u1810:
  4260  00185E                     l2253:
  4261                           
  4262                           ;lcd.c: 66:        Delay2ms();
  4263  00185E  EC23  F00E         	call	_Delay2ms	;wreg free
  4264                           
  4265                           ;lcd.c: 67:     }else{
  4266  001862  EF35  F00C         	goto	l147
  4267  001866                     l2255:
  4268                           
  4269                           ;lcd.c: 68:     Delay40us();
  4270  001866  EC31  F00E         	call	_Delay40us	;wreg free
  4271  00186A                     l147:
  4272  00186A  0012               	return		;funcret
  4273  00186C                     __end_of_lcdCommand:
  4274                           	callstack 0
  4275                           
  4276 ;; *************** function _Delay2ms *****************
  4277 ;; Defined at:
  4278 ;;		line 37 in file "lcd.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  i               1    1[COMRAM] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4292 ;;      Params:         0       0       0       0       0       0       0
  4293 ;;      Locals:         1       0       0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0
  4295 ;;      Totals:         1       0       0       0       0       0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; Hardware stack levels required when called: 1
  4299 ;; This function calls:
  4300 ;;		_Delay40us
  4301 ;; This function is called by:
  4302 ;;		_lcdCommand
  4303 ;;		_lcdInit
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text18
  4308  001C46                     __ptext18:
  4309                           	callstack 0
  4310  001C46                     _Delay2ms:
  4311                           	callstack 27
  4312  001C46                     
  4313                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  4314  001C46  0E00               	movlw	0
  4315  001C48  6E45               	movwf	Delay2ms@i^0,c
  4316  001C4A                     l2189:
  4317                           
  4318                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  4319  001C4A  EC31  F00E         	call	_Delay40us	;wreg free
  4320  001C4E                     
  4321                           ;lcd.c: 43:  }
  4322  001C4E  2A45               	incf	Delay2ms@i^0,f,c
  4323  001C50  0E31               	movlw	49
  4324  001C52  6445               	cpfsgt	Delay2ms@i^0,c
  4325  001C54  EF2E  F00E         	goto	u1591
  4326  001C58  EF30  F00E         	goto	u1590
  4327  001C5C                     u1591:
  4328  001C5C  EF25  F00E         	goto	l2189
  4329  001C60                     u1590:
  4330  001C60  0012               	return		;funcret
  4331  001C62                     __end_of_Delay2ms:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function _lcdData *****************
  4335 ;; Defined at:
  4336 ;;		line 74 in file "lcd.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  valor           1    wreg     unsigned char 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  valor           1    6[COMRAM] unsigned char 
  4341 ;;  old_D           1    7[COMRAM] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4351 ;;      Params:         0       0       0       0       0       0       0
  4352 ;;      Locals:         2       0       0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0
  4354 ;;      Totals:         2       0       0       0       0       0       0
  4355 ;;Total ram usage:        2 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 1
  4358 ;; This function calls:
  4359 ;;		_Delay40us
  4360 ;;		_digitalWrite
  4361 ;; This function is called by:
  4362 ;;		_imprime_img
  4363 ;;		_main
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text19
  4368  001B3A                     __ptext19:
  4369                           	callstack 0
  4370  001B3A                     _lcdData:
  4371                           	callstack 29
  4372                           
  4373                           ;incstack = 0
  4374                           ;lcdData@valor stored from wreg
  4375  001B3A  6E4A               	movwf	lcdData@valor^0,c
  4376  001B3C                     
  4377                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  4378  001B3C  CF83 F04B          	movff	3971,lcdData@old_D	;volatile
  4379  001B40                     
  4380                           ;lcd.c: 80:     TRISD = 0x00;
  4381  001B40  0E00               	movlw	0
  4382  001B42  6E95               	movwf	149,c	;volatile
  4383  001B44                     
  4384                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  4385  001B44  0E00               	movlw	0
  4386  001B46  6E45               	movwf	(digitalWrite@pin+1)^0,c
  4387  001B48  0E22               	movlw	34
  4388  001B4A  6E44               	movwf	digitalWrite@pin^0,c
  4389  001B4C  0E00               	movlw	0
  4390  001B4E  6E47               	movwf	(digitalWrite@value+1)^0,c
  4391  001B50  0E01               	movlw	1
  4392  001B52  6E46               	movwf	digitalWrite@value^0,c
  4393  001B54  EC75  F007         	call	_digitalWrite	;wreg free
  4394  001B58                     
  4395                           ;lcd.c: 83:  PORTD = valor;
  4396  001B58  C04A  FF83         	movff	lcdData@valor,3971	;volatile
  4397  001B5C                     
  4398                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  4399  001B5C  0E00               	movlw	0
  4400  001B5E  6E45               	movwf	(digitalWrite@pin+1)^0,c
  4401  001B60  0E21               	movlw	33
  4402  001B62  6E44               	movwf	digitalWrite@pin^0,c
  4403  001B64  0E00               	movlw	0
  4404  001B66  6E47               	movwf	(digitalWrite@value+1)^0,c
  4405  001B68  0E01               	movlw	1
  4406  001B6A  6E46               	movwf	digitalWrite@value^0,c
  4407  001B6C  EC75  F007         	call	_digitalWrite	;wreg free
  4408  001B70                     
  4409                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  4410  001B70  0E00               	movlw	0
  4411  001B72  6E45               	movwf	(digitalWrite@pin+1)^0,c
  4412  001B74  0E21               	movlw	33
  4413  001B76  6E44               	movwf	digitalWrite@pin^0,c
  4414  001B78  0E00               	movlw	0
  4415  001B7A  6E47               	movwf	(digitalWrite@value+1)^0,c
  4416  001B7C  0E00               	movlw	0
  4417  001B7E  6E46               	movwf	digitalWrite@value^0,c
  4418  001B80  EC75  F007         	call	_digitalWrite	;wreg free
  4419  001B84                     
  4420                           ;lcd.c: 88:     PORTD= old_D;
  4421  001B84  C04B  FF83         	movff	lcdData@old_D,3971	;volatile
  4422  001B88                     
  4423                           ;lcd.c: 90:  Delay40us();
  4424  001B88  EC31  F00E         	call	_Delay40us	;wreg free
  4425  001B8C  0012               	return		;funcret
  4426  001B8E                     __end_of_lcdData:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _digitalWrite *****************
  4430 ;; Defined at:
  4431 ;;		line 14 in file "io.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  pin             2    0[COMRAM] int 
  4434 ;;  value           2    2[COMRAM] int 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4446 ;;      Params:         4       0       0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0       0       0
  4448 ;;      Temps:          2       0       0       0       0       0       0
  4449 ;;      Totals:         6       0       0       0       0       0       0
  4450 ;;Total ram usage:        6 bytes
  4451 ;; Hardware stack levels used: 1
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_lcdCommand
  4456 ;;		_lcdData
  4457 ;;		_ssdUpdate
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text20
  4462  000EEA                     __ptext20:
  4463                           	callstack 0
  4464  000EEA                     _digitalWrite:
  4465                           	callstack 28
  4466  000EEA                     
  4467                           ;io.c: 16:     if(pin <8){
  4468  000EEA  BE45               	btfsc	(digitalWrite@pin+1)^0,7,c
  4469  000EEC  EF83  F007         	goto	u1390
  4470  000EF0  5045               	movf	(digitalWrite@pin+1)^0,w,c
  4471  000EF2  E107               	bnz	u1391
  4472  000EF4  0E08               	movlw	8
  4473  000EF6  5C44               	subwf	digitalWrite@pin^0,w,c
  4474  000EF8  B0D8               	btfsc	status,0,c
  4475  000EFA  EF81  F007         	goto	u1391
  4476  000EFE  EF83  F007         	goto	u1390
  4477  000F02                     u1391:
  4478  000F02  EFAD  F007         	goto	l2151
  4479  000F06                     u1390:
  4480  000F06                     
  4481                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4482  000F06  5046               	movf	digitalWrite@value^0,w,c
  4483  000F08  1047               	iorwf	(digitalWrite@value+1)^0,w,c
  4484  000F0A  B4D8               	btfsc	status,2,c
  4485  000F0C  EF8A  F007         	goto	u1401
  4486  000F10  EF8C  F007         	goto	u1400
  4487  000F14                     u1401:
  4488  000F14  EF9C  F007         	goto	l2149
  4489  000F18                     u1400:
  4490  000F18  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4491  000F1C  0E01               	movlw	1
  4492  000F1E  6E49               	movwf	(??_digitalWrite+1)^0,c
  4493  000F20  2A48               	incf	??_digitalWrite^0,f,c
  4494  000F22  EF95  F007         	goto	u1414
  4495  000F26                     u1415:
  4496  000F26  90D8               	bcf	status,0,c
  4497  000F28  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4498  000F2A                     u1414:
  4499  000F2A  2E48               	decfsz	??_digitalWrite^0,f,c
  4500  000F2C  EF93  F007         	goto	u1415
  4501  000F30  5049               	movf	(??_digitalWrite+1)^0,w,c
  4502  000F32  1280               	iorwf	128,f,c	;volatile
  4503  000F34  EF9B  F008         	goto	l52
  4504  000F38                     l2149:
  4505  000F38  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4506  000F3C  0E01               	movlw	1
  4507  000F3E  6E49               	movwf	(??_digitalWrite+1)^0,c
  4508  000F40  2A48               	incf	??_digitalWrite^0,f,c
  4509  000F42  EFA5  F007         	goto	u1424
  4510  000F46                     u1425:
  4511  000F46  90D8               	bcf	status,0,c
  4512  000F48  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4513  000F4A                     u1424:
  4514  000F4A  2E48               	decfsz	??_digitalWrite^0,f,c
  4515  000F4C  EFA3  F007         	goto	u1425
  4516  000F50  5049               	movf	(??_digitalWrite+1)^0,w,c
  4517  000F52  0AFF               	xorlw	255
  4518  000F54  1680               	andwf	128,f,c	;volatile
  4519  000F56  EF9B  F008         	goto	l52
  4520  000F5A                     l2151:
  4521  000F5A  BE45               	btfsc	(digitalWrite@pin+1)^0,7,c
  4522  000F5C  EFBB  F007         	goto	u1430
  4523  000F60  5045               	movf	(digitalWrite@pin+1)^0,w,c
  4524  000F62  E107               	bnz	u1431
  4525  000F64  0E10               	movlw	16
  4526  000F66  5C44               	subwf	digitalWrite@pin^0,w,c
  4527  000F68  B0D8               	btfsc	status,0,c
  4528  000F6A  EFB9  F007         	goto	u1431
  4529  000F6E  EFBB  F007         	goto	u1430
  4530  000F72                     u1431:
  4531  000F72  EFE9  F007         	goto	l2159
  4532  000F76                     u1430:
  4533  000F76                     
  4534                           ;io.c: 20:         pin -=8;
  4535  000F76  0EF8               	movlw	248
  4536  000F78  2644               	addwf	digitalWrite@pin^0,f,c
  4537  000F7A  0EFF               	movlw	255
  4538  000F7C  2245               	addwfc	(digitalWrite@pin+1)^0,f,c
  4539                           
  4540                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4541  000F7E  5046               	movf	digitalWrite@value^0,w,c
  4542  000F80  1047               	iorwf	(digitalWrite@value+1)^0,w,c
  4543  000F82  B4D8               	btfsc	status,2,c
  4544  000F84  EFC6  F007         	goto	u1441
  4545  000F88  EFC8  F007         	goto	u1440
  4546  000F8C                     u1441:
  4547  000F8C  EFD8  F007         	goto	l2157
  4548  000F90                     u1440:
  4549  000F90  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4550  000F94  0E01               	movlw	1
  4551  000F96  6E49               	movwf	(??_digitalWrite+1)^0,c
  4552  000F98  2A48               	incf	??_digitalWrite^0,f,c
  4553  000F9A  EFD1  F007         	goto	u1454
  4554  000F9E                     u1455:
  4555  000F9E  90D8               	bcf	status,0,c
  4556  000FA0  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4557  000FA2                     u1454:
  4558  000FA2  2E48               	decfsz	??_digitalWrite^0,f,c
  4559  000FA4  EFCF  F007         	goto	u1455
  4560  000FA8  5049               	movf	(??_digitalWrite+1)^0,w,c
  4561  000FAA  1281               	iorwf	129,f,c	;volatile
  4562  000FAC  EF9B  F008         	goto	l52
  4563  000FB0                     l2157:
  4564  000FB0  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4565  000FB4  0E01               	movlw	1
  4566  000FB6  6E49               	movwf	(??_digitalWrite+1)^0,c
  4567  000FB8  2A48               	incf	??_digitalWrite^0,f,c
  4568  000FBA  EFE1  F007         	goto	u1464
  4569  000FBE                     u1465:
  4570  000FBE  90D8               	bcf	status,0,c
  4571  000FC0  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4572  000FC2                     u1464:
  4573  000FC2  2E48               	decfsz	??_digitalWrite^0,f,c
  4574  000FC4  EFDF  F007         	goto	u1465
  4575  000FC8  5049               	movf	(??_digitalWrite+1)^0,w,c
  4576  000FCA  0AFF               	xorlw	255
  4577  000FCC  1681               	andwf	129,f,c	;volatile
  4578  000FCE  EF9B  F008         	goto	l52
  4579  000FD2                     l2159:
  4580  000FD2  BE45               	btfsc	(digitalWrite@pin+1)^0,7,c
  4581  000FD4  EFF7  F007         	goto	u1470
  4582  000FD8  5045               	movf	(digitalWrite@pin+1)^0,w,c
  4583  000FDA  E107               	bnz	u1471
  4584  000FDC  0E18               	movlw	24
  4585  000FDE  5C44               	subwf	digitalWrite@pin^0,w,c
  4586  000FE0  B0D8               	btfsc	status,0,c
  4587  000FE2  EFF5  F007         	goto	u1471
  4588  000FE6  EFF7  F007         	goto	u1470
  4589  000FEA                     u1471:
  4590  000FEA  EF25  F008         	goto	l2167
  4591  000FEE                     u1470:
  4592  000FEE                     
  4593                           ;io.c: 24:         pin -=16;
  4594  000FEE  0EF0               	movlw	240
  4595  000FF0  2644               	addwf	digitalWrite@pin^0,f,c
  4596  000FF2  0EFF               	movlw	255
  4597  000FF4  2245               	addwfc	(digitalWrite@pin+1)^0,f,c
  4598                           
  4599                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4600  000FF6  5046               	movf	digitalWrite@value^0,w,c
  4601  000FF8  1047               	iorwf	(digitalWrite@value+1)^0,w,c
  4602  000FFA  B4D8               	btfsc	status,2,c
  4603  000FFC  EF02  F008         	goto	u1481
  4604  001000  EF04  F008         	goto	u1480
  4605  001004                     u1481:
  4606  001004  EF14  F008         	goto	l2165
  4607  001008                     u1480:
  4608  001008  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4609  00100C  0E01               	movlw	1
  4610  00100E  6E49               	movwf	(??_digitalWrite+1)^0,c
  4611  001010  2A48               	incf	??_digitalWrite^0,f,c
  4612  001012  EF0D  F008         	goto	u1494
  4613  001016                     u1495:
  4614  001016  90D8               	bcf	status,0,c
  4615  001018  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4616  00101A                     u1494:
  4617  00101A  2E48               	decfsz	??_digitalWrite^0,f,c
  4618  00101C  EF0B  F008         	goto	u1495
  4619  001020  5049               	movf	(??_digitalWrite+1)^0,w,c
  4620  001022  1282               	iorwf	130,f,c	;volatile
  4621  001024  EF9B  F008         	goto	l52
  4622  001028                     l2165:
  4623  001028  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4624  00102C  0E01               	movlw	1
  4625  00102E  6E49               	movwf	(??_digitalWrite+1)^0,c
  4626  001030  2A48               	incf	??_digitalWrite^0,f,c
  4627  001032  EF1D  F008         	goto	u1504
  4628  001036                     u1505:
  4629  001036  90D8               	bcf	status,0,c
  4630  001038  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4631  00103A                     u1504:
  4632  00103A  2E48               	decfsz	??_digitalWrite^0,f,c
  4633  00103C  EF1B  F008         	goto	u1505
  4634  001040  5049               	movf	(??_digitalWrite+1)^0,w,c
  4635  001042  0AFF               	xorlw	255
  4636  001044  1682               	andwf	130,f,c	;volatile
  4637  001046  EF9B  F008         	goto	l52
  4638  00104A                     l2167:
  4639  00104A  BE45               	btfsc	(digitalWrite@pin+1)^0,7,c
  4640  00104C  EF33  F008         	goto	u1510
  4641  001050  5045               	movf	(digitalWrite@pin+1)^0,w,c
  4642  001052  E107               	bnz	u1511
  4643  001054  0E20               	movlw	32
  4644  001056  5C44               	subwf	digitalWrite@pin^0,w,c
  4645  001058  B0D8               	btfsc	status,0,c
  4646  00105A  EF31  F008         	goto	u1511
  4647  00105E  EF33  F008         	goto	u1510
  4648  001062                     u1511:
  4649  001062  EF61  F008         	goto	l2175
  4650  001066                     u1510:
  4651  001066                     
  4652                           ;io.c: 28:         pin -=24;
  4653  001066  0EE8               	movlw	232
  4654  001068  2644               	addwf	digitalWrite@pin^0,f,c
  4655  00106A  0EFF               	movlw	255
  4656  00106C  2245               	addwfc	(digitalWrite@pin+1)^0,f,c
  4657                           
  4658                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4659  00106E  5046               	movf	digitalWrite@value^0,w,c
  4660  001070  1047               	iorwf	(digitalWrite@value+1)^0,w,c
  4661  001072  B4D8               	btfsc	status,2,c
  4662  001074  EF3E  F008         	goto	u1521
  4663  001078  EF40  F008         	goto	u1520
  4664  00107C                     u1521:
  4665  00107C  EF50  F008         	goto	l2173
  4666  001080                     u1520:
  4667  001080  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4668  001084  0E01               	movlw	1
  4669  001086  6E49               	movwf	(??_digitalWrite+1)^0,c
  4670  001088  2A48               	incf	??_digitalWrite^0,f,c
  4671  00108A  EF49  F008         	goto	u1534
  4672  00108E                     u1535:
  4673  00108E  90D8               	bcf	status,0,c
  4674  001090  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4675  001092                     u1534:
  4676  001092  2E48               	decfsz	??_digitalWrite^0,f,c
  4677  001094  EF47  F008         	goto	u1535
  4678  001098  5049               	movf	(??_digitalWrite+1)^0,w,c
  4679  00109A  1283               	iorwf	131,f,c	;volatile
  4680  00109C  EF9B  F008         	goto	l52
  4681  0010A0                     l2173:
  4682  0010A0  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4683  0010A4  0E01               	movlw	1
  4684  0010A6  6E49               	movwf	(??_digitalWrite+1)^0,c
  4685  0010A8  2A48               	incf	??_digitalWrite^0,f,c
  4686  0010AA  EF59  F008         	goto	u1544
  4687  0010AE                     u1545:
  4688  0010AE  90D8               	bcf	status,0,c
  4689  0010B0  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4690  0010B2                     u1544:
  4691  0010B2  2E48               	decfsz	??_digitalWrite^0,f,c
  4692  0010B4  EF57  F008         	goto	u1545
  4693  0010B8  5049               	movf	(??_digitalWrite+1)^0,w,c
  4694  0010BA  0AFF               	xorlw	255
  4695  0010BC  1683               	andwf	131,f,c	;volatile
  4696  0010BE  EF9B  F008         	goto	l52
  4697  0010C2                     l2175:
  4698  0010C2  BE45               	btfsc	(digitalWrite@pin+1)^0,7,c
  4699  0010C4  EF6F  F008         	goto	u1550
  4700  0010C8  5045               	movf	(digitalWrite@pin+1)^0,w,c
  4701  0010CA  E107               	bnz	u1551
  4702  0010CC  0E28               	movlw	40
  4703  0010CE  5C44               	subwf	digitalWrite@pin^0,w,c
  4704  0010D0  B0D8               	btfsc	status,0,c
  4705  0010D2  EF6D  F008         	goto	u1551
  4706  0010D6  EF6F  F008         	goto	u1550
  4707  0010DA                     u1551:
  4708  0010DA  EF9B  F008         	goto	l52
  4709  0010DE                     u1550:
  4710  0010DE                     
  4711                           ;io.c: 32:         pin -=32;
  4712  0010DE  0EE0               	movlw	224
  4713  0010E0  2644               	addwf	digitalWrite@pin^0,f,c
  4714  0010E2  0EFF               	movlw	255
  4715  0010E4  2245               	addwfc	(digitalWrite@pin+1)^0,f,c
  4716                           
  4717                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4718  0010E6  5046               	movf	digitalWrite@value^0,w,c
  4719  0010E8  1047               	iorwf	(digitalWrite@value+1)^0,w,c
  4720  0010EA  B4D8               	btfsc	status,2,c
  4721  0010EC  EF7A  F008         	goto	u1561
  4722  0010F0  EF7C  F008         	goto	u1560
  4723  0010F4                     u1561:
  4724  0010F4  EF8C  F008         	goto	l2181
  4725  0010F8                     u1560:
  4726  0010F8  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4727  0010FC  0E01               	movlw	1
  4728  0010FE  6E49               	movwf	(??_digitalWrite+1)^0,c
  4729  001100  2A48               	incf	??_digitalWrite^0,f,c
  4730  001102  EF85  F008         	goto	u1574
  4731  001106                     u1575:
  4732  001106  90D8               	bcf	status,0,c
  4733  001108  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4734  00110A                     u1574:
  4735  00110A  2E48               	decfsz	??_digitalWrite^0,f,c
  4736  00110C  EF83  F008         	goto	u1575
  4737  001110  5049               	movf	(??_digitalWrite+1)^0,w,c
  4738  001112  1284               	iorwf	132,f,c	;volatile
  4739  001114  EF9B  F008         	goto	l52
  4740  001118                     l2181:
  4741  001118  C044  F048         	movff	digitalWrite@pin,??_digitalWrite
  4742  00111C  0E01               	movlw	1
  4743  00111E  6E49               	movwf	(??_digitalWrite+1)^0,c
  4744  001120  2A48               	incf	??_digitalWrite^0,f,c
  4745  001122  EF95  F008         	goto	u1584
  4746  001126                     u1585:
  4747  001126  90D8               	bcf	status,0,c
  4748  001128  3649               	rlcf	(??_digitalWrite+1)^0,f,c
  4749  00112A                     u1584:
  4750  00112A  2E48               	decfsz	??_digitalWrite^0,f,c
  4751  00112C  EF93  F008         	goto	u1585
  4752  001130  5049               	movf	(??_digitalWrite+1)^0,w,c
  4753  001132  0AFF               	xorlw	255
  4754  001134  1684               	andwf	132,f,c	;volatile
  4755  001136                     l52:
  4756  001136  0012               	return		;funcret
  4757  001138                     __end_of_digitalWrite:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _Delay40us *****************
  4761 ;; Defined at:
  4762 ;;		line 31 in file "lcd.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  i               1    0[COMRAM] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4776 ;;      Params:         0       0       0       0       0       0       0
  4777 ;;      Locals:         1       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0
  4779 ;;      Totals:         1       0       0       0       0       0       0
  4780 ;;Total ram usage:        1 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_Delay2ms
  4786 ;;		_lcdCommand
  4787 ;;		_lcdData
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text21
  4792  001C62                     __ptext21:
  4793                           	callstack 0
  4794  001C62                     _Delay40us:
  4795                           	callstack 28
  4796  001C62                     
  4797                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  4798  001C62  0E00               	movlw	0
  4799  001C64  6E44               	movwf	Delay40us@i^0,c
  4800  001C66                     l2139:
  4801  001C66  2A44               	incf	Delay40us@i^0,f,c
  4802  001C68  0E18               	movlw	24
  4803  001C6A  6444               	cpfsgt	Delay40us@i^0,c
  4804  001C6C  EF3A  F00E         	goto	u1381
  4805  001C70  EF3C  F00E         	goto	u1380
  4806  001C74                     u1381:
  4807  001C74  EF33  F00E         	goto	l2139
  4808  001C78                     u1380:
  4809  001C78  0012               	return		;funcret
  4810  001C7A                     __end_of_Delay40us:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function ___wmul *****************
  4814 ;; Defined at:
  4815 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  multiplier      2    0[COMRAM] unsigned int 
  4818 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  product         2    4[COMRAM] unsigned int 
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  2    0[COMRAM] unsigned int 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, prodl, prodh
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4830 ;;      Params:         4       0       0       0       0       0       0
  4831 ;;      Locals:         2       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0
  4833 ;;      Totals:         6       0       0       0       0       0       0
  4834 ;;Total ram usage:        6 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_main
  4840 ;;		_pwmSet1
  4841 ;;		_pwmSet2
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text22
  4846  001C20                     __ptext22:
  4847                           	callstack 0
  4848  001C20                     ___wmul:
  4849                           	callstack 30
  4850  001C20  5044               	movf	___wmul@multiplier^0,w,c
  4851  001C22  0246               	mulwf	___wmul@multiplicand^0,c
  4852  001C24  CFF3 F048          	movff	prodl,___wmul@product
  4853  001C28  CFF4 F049          	movff	prodh,___wmul@product+1
  4854  001C2C  5044               	movf	___wmul@multiplier^0,w,c
  4855  001C2E  0247               	mulwf	(___wmul@multiplicand+1)^0,c
  4856  001C30  50F3               	movf	243,w,c
  4857  001C32  2649               	addwf	(___wmul@product+1)^0,f,c
  4858  001C34  5045               	movf	(___wmul@multiplier+1)^0,w,c
  4859  001C36  0246               	mulwf	___wmul@multiplicand^0,c
  4860  001C38  50F3               	movf	243,w,c
  4861  001C3A  2649               	addwf	(___wmul@product+1)^0,f,c
  4862  001C3C  C048  F044         	movff	___wmul@product,?___wmul
  4863  001C40  C049  F045         	movff	___wmul@product+1,?___wmul+1
  4864  001C44  0012               	return		;funcret
  4865  001C46                     __end_of___wmul:
  4866                           	callstack 0
  4867                           
  4868                           	psect	rparam
  4869  0000                     
  4870                           	psect	idloc
  4871                           
  4872                           ;Config register IDLOC0 @ 0x200000
  4873                           ;	unspecified, using default values
  4874  200000                     	org	2097152
  4875  200000  FF                 	db	255
  4876                           
  4877                           ;Config register IDLOC1 @ 0x200001
  4878                           ;	unspecified, using default values
  4879  200001                     	org	2097153
  4880  200001  FF                 	db	255
  4881                           
  4882                           ;Config register IDLOC2 @ 0x200002
  4883                           ;	unspecified, using default values
  4884  200002                     	org	2097154
  4885  200002  FF                 	db	255
  4886                           
  4887                           ;Config register IDLOC3 @ 0x200003
  4888                           ;	unspecified, using default values
  4889  200003                     	org	2097155
  4890  200003  FF                 	db	255
  4891                           
  4892                           ;Config register IDLOC4 @ 0x200004
  4893                           ;	unspecified, using default values
  4894  200004                     	org	2097156
  4895  200004  FF                 	db	255
  4896                           
  4897                           ;Config register IDLOC5 @ 0x200005
  4898                           ;	unspecified, using default values
  4899  200005                     	org	2097157
  4900  200005  FF                 	db	255
  4901                           
  4902                           ;Config register IDLOC6 @ 0x200006
  4903                           ;	unspecified, using default values
  4904  200006                     	org	2097158
  4905  200006  FF                 	db	255
  4906                           
  4907                           ;Config register IDLOC7 @ 0x200007
  4908                           ;	unspecified, using default values
  4909  200007                     	org	2097159
  4910  200007  FF                 	db	255
  4911                           
  4912                           	psect	config
  4913                           
  4914                           ; Padding undefined space
  4915  300000                     	org	3145728
  4916  300000  FF                 	db	255
  4917                           
  4918                           ;Config register CONFIG1H @ 0x300001
  4919                           ;	Oscillator Selection bits
  4920                           ;	OSC = HS, HS oscillator
  4921                           ;	Fail-Safe Clock Monitor Enable bit
  4922                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4923                           ;	Internal/External Oscillator Switchover bit
  4924                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4925  300001                     	org	3145729
  4926  300001  02                 	db	2
  4927                           
  4928                           ;Config register CONFIG2L @ 0x300002
  4929                           ;	Power-up Timer Enable bit
  4930                           ;	PWRT = OFF, PWRT disabled
  4931                           ;	Brown-out Reset Enable bits
  4932                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4933                           ;	Brown Out Reset Voltage bits
  4934                           ;	BORV = 0x2E, user specified literal
  4935  300002                     	org	3145730
  4936  300002  71                 	db	369
  4937                           
  4938                           ;Config register CONFIG2H @ 0x300003
  4939                           ;	Watchdog Timer Enable bit
  4940                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4941                           ;	Watchdog Timer Postscale Select bits
  4942                           ;	WDTPS = 1, 1:1
  4943  300003                     	org	3145731
  4944  300003  00                 	db	0
  4945                           
  4946                           ; Padding undefined space
  4947  300004                     	org	3145732
  4948  300004  FF                 	db	255
  4949                           
  4950                           ;Config register CONFIG3H @ 0x300005
  4951                           ;	CCP2 MUX bit
  4952                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4953                           ;	PORTB A/D Enable bit
  4954                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4955                           ;	Low-Power Timer1 Oscillator Enable bit
  4956                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4957                           ;	MCLR Pin Enable bit
  4958                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4959  300005                     	org	3145733
  4960  300005  83                 	db	131
  4961                           
  4962                           ;Config register CONFIG4L @ 0x300006
  4963                           ;	Stack Full/Underflow Reset Enable bit
  4964                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4965                           ;	Single-Supply ICSP Enable bit
  4966                           ;	LVP = OFF, Single-Supply ICSP disabled
  4967                           ;	Extended Instruction Set Enable bit
  4968                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4969                           ;	Background Debugger Enable bit
  4970                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4971  300006                     	org	3145734
  4972  300006  80                 	db	128
  4973                           
  4974                           ; Padding undefined space
  4975  300007                     	org	3145735
  4976  300007  FF                 	db	255
  4977                           
  4978                           ;Config register CONFIG5L @ 0x300008
  4979                           ;	Code Protection bit
  4980                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4981                           ;	Code Protection bit
  4982                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4983                           ;	Code Protection bit
  4984                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4985                           ;	Code Protection bit
  4986                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4987  300008                     	org	3145736
  4988  300008  0F                 	db	15
  4989                           
  4990                           ;Config register CONFIG5H @ 0x300009
  4991                           ;	Boot Block Code Protection bit
  4992                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4993                           ;	Data EEPROM Code Protection bit
  4994                           ;	CPD = OFF, Data EEPROM not code-protected
  4995  300009                     	org	3145737
  4996  300009  C0                 	db	192
  4997                           
  4998                           ;Config register CONFIG6L @ 0x30000A
  4999                           ;	Write Protection bit
  5000                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5001                           ;	Write Protection bit
  5002                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5003                           ;	Write Protection bit
  5004                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5005                           ;	Write Protection bit
  5006                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5007  30000A                     	org	3145738
  5008  30000A  0F                 	db	15
  5009                           
  5010                           ;Config register CONFIG6H @ 0x30000B
  5011                           ;	Configuration Register Write Protection bit
  5012                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5013                           ;	Boot Block Write Protection bit
  5014                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5015                           ;	Data EEPROM Write Protection bit
  5016                           ;	WRTD = OFF, Data EEPROM not write-protected
  5017  30000B                     	org	3145739
  5018  30000B  E0                 	db	224
  5019                           
  5020                           ;Config register CONFIG7L @ 0x30000C
  5021                           ;	Table Read Protection bit
  5022                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5023                           ;	Table Read Protection bit
  5024                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5025                           ;	Table Read Protection bit
  5026                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5027                           ;	Table Read Protection bit
  5028                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5029  30000C                     	org	3145740
  5030  30000C  0F                 	db	15
  5031                           
  5032                           ;Config register CONFIG7H @ 0x30000D
  5033                           ;	Boot Block Table Read Protection bit
  5034                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5035  30000D                     	org	3145741
  5036  30000D  40                 	db	64
  5037                           tosu	equ	0xFFF
  5038                           tosh	equ	0xFFE
  5039                           tosl	equ	0xFFD
  5040                           stkptr	equ	0xFFC
  5041                           pclatu	equ	0xFFB
  5042                           pclath	equ	0xFFA
  5043                           pcl	equ	0xFF9
  5044                           tblptru	equ	0xFF8
  5045                           tblptrh	equ	0xFF7
  5046                           tblptrl	equ	0xFF6
  5047                           tablat	equ	0xFF5
  5048                           prodh	equ	0xFF4
  5049                           prodl	equ	0xFF3
  5050                           indf0	equ	0xFEF
  5051                           postinc0	equ	0xFEE
  5052                           postdec0	equ	0xFED
  5053                           preinc0	equ	0xFEC
  5054                           plusw0	equ	0xFEB
  5055                           fsr0h	equ	0xFEA
  5056                           fsr0l	equ	0xFE9
  5057                           wreg	equ	0xFE8
  5058                           indf1	equ	0xFE7
  5059                           postinc1	equ	0xFE6
  5060                           postdec1	equ	0xFE5
  5061                           preinc1	equ	0xFE4
  5062                           plusw1	equ	0xFE3
  5063                           fsr1h	equ	0xFE2
  5064                           fsr1l	equ	0xFE1
  5065                           bsr	equ	0xFE0
  5066                           indf2	equ	0xFDF
  5067                           postinc2	equ	0xFDE
  5068                           postdec2	equ	0xFDD
  5069                           preinc2	equ	0xFDC
  5070                           plusw2	equ	0xFDB
  5071                           fsr2h	equ	0xFDA
  5072                           fsr2l	equ	0xFD9
  5073                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        203
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20     103
    BANK0           128      0      96
    BANK1           256    250     250
    BANK2           256      0      40
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    imprime_img@img	PTR unsigned char  size(2) Largest target is 32
		 -> main@img4(BANK1[32]), main@img3(BANK1[32]), main@img2(BANK1[32]), main@img1(BANK1[32]), 


Critical Paths under _main in COMRAM

    _main->_pwmFrequency
    _ssdInit->_pinMode
    _pwmFrequency->___aldiv
    _num_rodada->_ssdDigit
    _ssdUpdate->_digitalWrite
    _ssdDigit->___awdiv
    _imprime_img->_lcdCommand
    _imprime_img->_lcdData
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdData->_digitalWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               255   255      0   30739
                                             16 COMRAM     4     4      0
                                              0 BANK1    250   250      0
                             ___wmul
                        _imprime_img
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                         _num_rodada
                       _pwmFrequency
                            _pwmInit
                            _ssdInit
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmFrequency                                         2     0      2     854
                                             14 COMRAM     2     0      2
                            ___aldiv
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _num_rodada                                           1     1      0    5025
                                             10 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                           _ssdDigit
                          _ssdUpdate
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _tempo                                                4     2      2    1179
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     328
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _imprime_img                                          3     1      2   10099
                                              8 COMRAM     3     1      2
                         _lcdCommand
                            _lcdData
                            _lcdInit
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _imprime_img
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _lcdData
       _Delay40us
       _digitalWrite
     _lcdInit
       _Delay2ms
       _lcdCommand
       _pinMode
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
   _lcdData
   _lcdInit
   _num_rodada
     ___awdiv
     ___awmod
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
     _ssdUpdate
       _digitalWrite
     _tempo
   _pwmFrequency
     ___aldiv
     ___wmul (ARG)
   _pwmInit
   _ssdInit
     _pinMode
   _tempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      28       9       15.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FA      FA       7       97.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      60       5       75.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      67       1       81.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E9      15        0.0%
DATA                 0      0     1E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 28 12:27:01 2021

                     l10 1A2A                       l52 1136                       l86 0EE8  
                     l99 1C96             ___awdiv@sign 0049                       _v0 0065  
                     _v1 0064                       _v2 0063                       _v3 0062  
    ___wmul@multiplicand 0046                      l122 1CA0                      l140 1C60  
                    l117 1290                      l150 1B8C                      l118 12A8  
                    l135 1C78                      l119 12B0                      l320 1B38  
                    l153 18E2                      l147 186A                      l307 1AE2  
                    l317 156C                      l190 141C                      l280 1C8C  
                    l611 173C                      l195 19C8                      l380 1C44  
                    l277 1C1E                      l624 17EC                      l459 1678  
                    _pos 0058             ___awmod@sign 0049                      prod 000FF3  
                    wreg 000FE8                     l2201 0CEA                     l2211 0D84  
                   l2203 0D0C                     l2141 1C68                     l2133 1C62  
                   l2221 0E18                     l2213 0DA0                     l2205 0D28  
                   l2301 1894                     l2151 0F5A                     l2143 0EEA  
                   l2231 0EA2                     l2223 0E2A                     l2215 0DB2  
                   l2207 0D3A                     l2311 18A8                     l2303 1898  
                   l2161 0FEE                     l2153 0F76                     l2145 0F06  
                   l2241 180C                     l2233 0EC6                     l2225 0E4E  
                   l2217 0DD6                     l2209 0D5E                     l2321 18C0  
                   l2313 18AC                     l2305 189C                     l2401 1594  
                   l2139 1C66                     l2171 1080                     l2163 1008  
                   l2155 0F90                     l2147 0F18                     l2251 184E  
                   l2243 1810                     l2235 17F0                     l2227 0E74  
                   l2219 0DFC                     l2331 18DC                     l2323 18C4  
                   l2315 18B2                     l2307 18A0                     l3051 1546  
                   l2411 15DC                     l2403 15A2                     l2181 1118  
                   l2173 10A0                     l2165 1028                     l2157 0FB0  
                   l2149 0F38                     l2253 185E                     l2245 1824  
                   l2237 17F4                     l2229 0E90                     l2325 18CA  
                   l2317 18B6                     l2309 18A4                     l2501 17A2  
                   l2341 1AB6                     l2333 1A8E                     l2261 19D2  
                   l2421 1626                     l2413 15E4                     l2405 15B2  
                   l2175 10C2                     l2167 104A                     l2159 0FD2  
                   l2191 1C4E                     l2183 1C46                     l2255 1866  
                   l2247 1838                     l2239 17F8                     l2327 18D0  
                   l2319 18BA                     l2511 17DC                     l2503 17B8  
                   l2343 1AC8                     l2335 1A9E                     l2351 1422  
                   l2271 19FE                     l2431 1658                     l2423 1636  
                   l2415 15F0                     l2407 15B6                     l2177 10DE  
                   l2169 1066                     l2193 1C50                     l2249 183C  
                   l2329 18D6                     l2601 137C                     l2521 113C  
                   l2441 168C                     l2513 17E4                     l2505 17C0  
                   l2345 1ACC                     l2337 1AA2                     l2361 148C  
                   l2353 1436                     l2265 19E6                     l2281 1A10  
                   l2257 19CA                     l2433 1668                     l2425 1638  
                   l2417 15FE                     l2409 15C6                     l3049 0C82  
                   l2179 10F8                     l2291 1B5C                     l2283 1B3C  
                   l2195 0C9C                     l2603 1390                     l2531 1186  
                   l2523 1140                     l2451 16B2                     l2443 1694  
                   l2507 17C6                     l2347 1ADE                     l2339 1AB2  
                   l2371 14D6                     l2363 14A0                     l2355 144A  
                   l2275 1A04                     l2267 19EA                     l2259 19CE  
                   l2427 1642                     l2419 1608                     l2293 1B70  
                   l2285 1B40                     l2189 1C4A                     l2197 0CB8  
                   l2605 13C6                     l2541 11AE                     l2517 1C8E  
                   l2461 16EA                     l2453 16BA                     l2445 1698  
                   l2437 167A                     l2509 17CC                     l2381 152A  
                   l2373 14E8                     l2365 14A8                     l2357 145E  
                   l2349 141E                     l2621 1966                     l2429 1648  
                   l2701 0738                     l2295 1B84                     l2287 1B44  
                   l2199 0CCA                     l2607 13DA                     l2551 120E  
                   l2519 1138                     l2471 1716                     l2463 16F0  
                   l2455 16CC                     l2447 16A6                     l2439 167E  
                   l2375 14FC                     l2367 14BA                     l2359 147A  
                   l2279 1A0A                     l2631 19AA                     l2623 1968  
                   l2615 195E                     l2711 0798                     l2703 0742  
                   l2297 1B88                     l2289 1B58                     l2561 1266  
                   l2553 1242                     l2537 118E                     l2529 1144  
                   l2465 1706                     l2457 16D4                     l2473 171C  
                   l2449 16AE                     l2481 173E                     l2377 1504  
                   l2369 14CE                     l2633 19B6                     l2625 196A  
                   l2617 1962                     l2609 195A                     l2393 156E  
                   l2641 1C7A                     l2801 097A                     l2721 07A0  
                   l2705 0746                     l2651 1C3C                     l2299 186C  
                   l2571 12AC                     l2563 127E                     l2555 1244  
                   l2547 11B2                     l2539 1192                     l2475 172C  
                   l2467 170E                     l2459 16DC                     l2491 176A  
                   l2483 1742                     l2379 1516                     l2387 1532  
                   l2635 19B8                     l2627 1988                     l2619 1964  
                   l2395 1572                     l2643 1C7E                     l2811 0990  
                   l2803 097E                     l2731 07C2                     l2715 079E  
                   l2707 0752                     l2565 1284                     l2557 1254  
                   l2549 11DE                     l2573 1C98                     l2477 1734  
                   l2469 1710                     l2493 1772                     l2485 1750  
                   l2629 19A6                     l2397 1580                     l2645 1C82  
                   l2637 1AE4                     l2901 0B24                     l2805 098A  
                   l2733 07CA                     l2709 0768                     l2661 06B4  
                   l2591 1308                     l2583 12C0                     l2575 12B2  
                   l2567 1288                     l2559 1256                     l2495 1784  
                   l2487 1758                     l2399 1590                     l2647 1BFA  
                   l2639 1B34                     l2823 099E                     l2815 0990  
                   l2831 09C8                     l2903 0B30                     l2751 0826  
                   l2727 07AC                     l2719 079E                     l2735 07CC  
                   l2671 06C8                     l2663 06B8                     l2655 0612  
                   l2649 1C20                     l2593 130C                     l2585 12D2  
                   l2577 12BC                     l2569 12A0                     l2497 178C  
                   l2489 175C                     l2913 0B52                     l2905 0B42  
                   l2841 0A3E                     l2833 09D8                     l2825 09A4  
                   l2817 0992                     l2761 0870                     l2753 0832  
                   l2745 0800                     l2737 07F0                     l2729 07B2  
                   l2681 06EE                     l2673 06CC                     l2665 06BC  
                   l2657 06A2                     l2595 1320                     l2587 12D4  
                   l2499 1794                     l2931 0B98                     l2915 0B64  
                   l2907 0B4C                     l2851 0A44                     l2835 09F2  
                   l2827 09B4                     l2763 088A                     l2755 0836  
                   l2747 0812                     l2739 07FA                     l2683 06F6  
                   l2675 06DE                     l2667 06C0                     l2659 06AC  
                   l2597 133E                     l2589 12E4                     l2941 0BDA  
                   l2933 0B9A                     l2925 0B7C                     l2917 0B68  
                   l2861 0A58                     l2853 0A46                     l2837 0A2E  
                   l2829 09BC                     l2781 08DE                     l2765 08C6  
                   l2757 0854                     l2749 0816                     l2693 0706  
                   l2685 06FA                     l2677 06E6                     l2669 06C4  
                   l2599 1352                     l2951 0BEE                     l2935 0B9E  
                   l2927 0B88                     l2919 0B78                     l2871 0AA6  
                   l2863 0A68                     l2847 0A44                     l2839 0A32  
                   l2791 0900                     l2775 08DC                     l2767 08CA  
                   l2759 0860                     l2695 0718                     l2687 0700  
                   l2679 06EA                     l2953 0BFA                     l2961 0C20  
                   l2937 0BAE                     l2929 0B8C                     l2873 0AE2  
                   l2865 0A70                     l2793 0908                     l2769 08D6  
                   l2697 071C                     l2963 0C38                     l2955 0BFC  
                   l2947 0BDE                     l2939 0BC6                     l2883 0AF8  
                   l2875 0AE6                     l2859 0A52                     l2867 0A7C  
                   l2787 08EA                     l2779 08DC                     l2795 0914  
                   l2699 072C                     l2971 0C6C                     l2965 0C5A  
                   l2957 0C00                     l2949 0BEA                     l2877 0AF2  
                   l2869 0A8C                     l2797 0924                     l2789 08F0  
                   l2967 0C5E                     l2959 0C10                     l2895 0B06  
                   l2887 0AF8                     l2799 093E                     l2897 0B0C  
                   l2889 0AFA                     l2899 0B1C                     u2000 172C  
                   u2001 1728                     u2010 1750                     u2011 174C  
                   u2020 176A                     u2021 1766                     u2110 11DE  
                   u2030 1784                     u2111 11DA                     u2031 1780  
                   u1400 0F18                     u2200 1352                     u2104 11C4  
                   u2040 17A2                     u1401 0F14                     u2201 134E  
                   u2105 11C0                     u2041 179E                     u2210 1390  
                   u2050 17B8                     u2211 138C                     u2051 17B4  
                   u2220 13DA                     u2140 1254                     u2124 11FC  
                   u2060 17DC                     u2221 13D6                     u2141 1250  
                   u2125 11F6                     u2061 17D8                     u2301 0688  
                   u1510 1066                     u1430 0F76                     u1414 0F2A  
                   u2150 1266                     u2134 122C                     u2230 19C8  
                   u1511 1062                     u1431 0F72                     u1415 0F26  
                   u2151 1262                     u2135 1226                     u2231 19C4  
                   u2311 069A                     u1520 1080                     u1504 103A  
                   u1440 0F90                     u1424 0F4A                     u1600 0CB8  
                   u2160 127E                     u2400 0900                     u2320 06DE  
                   u1521 107C                     u1505 1036                     u1441 0F8C  
                   u1425 0F46                     u1601 0CB4                     u2161 127A  
                   u2401 08FC                     u2321 06DA                     u2241 061C  
                   u1610 0CCA                     u2170 12A0                     u2090 11AE  
                   u2074 115A                     u2410 0924                     u2330 072C  
                   u1611 0CC6                     u2171 129C                     u2091 11AA  
                   u2075 1156                     u2411 0920                     u2331 0728  
                   u2251 062E                     u1380 1C78                     u2180 12E4  
                   u2084 117A                     u2500 0B42                     u2420 097A  
                   u2340 07C2                     u1381 1C74                     u2181 12E0  
                   u2085 1176                     u2501 0B3E                     u2421 0976  
                   u2341 07BE                     u2261 0640                     u1550 10DE  
                   u1534 1092                     u1470 0FEE                     u1454 0FA2  
                   u1390 0F06                     u2190 1320                     u2510 0B78  
                   u2430 09B4                     u2350 07F0                     u1551 10DA  
                   u1535 108E                     u1471 0FEA                     u1455 0F9E  
                   u1391 0F02                     u2191 131C                     u2511 0B74  
                   u2431 09B0                     u2351 07EC                     u2271 0652  
                   u1560 10F8                     u1544 10B2                     u1480 1008  
                   u1464 0FC2                     u1800 184E                     u1720 0E18  
                   u1704 0DC8                     u1640 0D28                     u1624 0CDC  
                   u2520 0BAE                     u2440 09D8                     u2360 0826  
                   u1561 10F4                     u1545 10AE                     u1481 1004  
                   u1465 0FBE                     u1801 184A                     u1721 0E14  
                   u1705 0DC4                     u1641 0D24                     u1625 0CD8  
                   u2521 0BAA                     u2441 09D4                     u2361 0822  
                   u2281 0664                     u1810 185E                     u1730 0E2A  
                   u1714 0DEC                     u1650 0D3A                     u1634 0CFC  
                   u2530 0BDA                     u2450 0A2E                     u2370 0854  
                   u1811 185A                     u1731 0E26                     u1715 0DE8  
                   u1651 0D36                     u1635 0CF8                     u2531 0BD6  
                   u2451 0A2A                     u2371 0850                     u2291 0676  
                   u1820 19E2                     u1900 15A2                     u2540 0C10  
                   u2460 0A68                     u2380 0870                     u1821 19DE  
                   u1901 159E                     u2541 0C0C                     u2461 0A64  
                   u2381 086C                     u1574 110A                     u1494 101A  
                   u1590 1C60                     u1830 19FA                     u1910 15DC  
                   u2550 0C38                     u2470 0A8C                     u2390 08C6  
                   u1575 1106                     u1495 1016                     u1591 1C5C  
                   u1831 19F6                     u1911 15D8                     u2551 0C34  
                   u2471 0A88                     u2391 08C2                     u1584 112A  
                   u1760 0E90                     u1744 0E40                     u1680 0DA0  
                   u1664 0D50                     u1840 1A2A                     u1920 15FE  
                   u2480 0AE2                     u1585 1126                     u1761 0E8C  
                   u1745 0E3C                     u1681 0D9C                     u1665 0D4C  
                   u1841 1A26                     u1921 15FA                     u2481 0ADE  
                   u1770 0EA2                     u1754 0E64                     u1690 0DB2  
                   u1674 0D74                     u1850 1A9E                     u1930 1626  
                   u2490 0B1C                     u1771 0E9E                     u1755 0E60  
                   u1691 0DAE                     u1675 0D70                     u1851 1A9A  
                   u1931 1622                     u2491 0B18                     u1860 1AB2  
                   u1940 1658                     u1861 1AAE                     u1941 1654  
                   u1950 168C                     u1870 1AC8                     u1951 1688  
                   u1871 1AC4                     u1784 0EB8                     u1960 16A6  
                   u1880 1ADE                     u1785 0EB4                     u1961 16A2  
                   u1881 1ADA                     u1794 0EDC                     u1970 16CC  
                   u1890 1580                     u1795 0ED8                     u1971 16C8  
                   u1891 157C                     u1980 16EA                     u1981 16E6  
                   u1990 1706                     u1991 1702                     _main 0612  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
        __end_of___aldiv 167A                    ?_main 0044          __end_of___awdiv 173E  
        __end_of___awmod 17EE                    _T0CON 000FD5          ___awdiv@divisor 0046  
        ___awdiv@counter 0048                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdData 1B8E          __end_of_lcdInit 18E4  
        __end_of_pinMode 0EEA                    _valor 0060                    _tempo 19CA  
                  main@i 01F9                    main@k 01F8                    tablat 000FF5  
        __end_of_ssdInit 1B3A          __end_of_pwmInit 1C8E                    plusw1 000FE3  
                  plusw2 000FDB             ?_imprime_img 004C                    status 000FD8  
       __end_of_Delay2ms 1C62     __end_of_digitalWrite 1138          __initialization 18E4  
           __end_of_main 0C9C       __size_of_Delay40us 0018                   ??_main 0054  
          __activetblptr 000002         ___awdiv@dividend 0044                   ?_tempo 0044  
                 _INTCON 000FF2           imprime_img@img 004C                ??___aldiv 004C  
                 ___wmul 1C20                ??___awdiv 0048                ??___awmod 0048  
                 _kpInit 1C98                   _kpRead 1C8E                   clear_0 194A  
       ___awdiv@quotient 004A          ___awmod@divisor 0046                   _rodada 005A  
              ??_lcdData 004A                   isa$std 000001                ??_lcdInit 004C  
        ___awmod@counter 0048         __end_of_ssdDigit 1AE4             __pdataCOMRAM 0001  
              ??_pinMode 0048             __mediumconst 0000                   tempo@j 0046  
                 tempo@k 0047                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_ssdInit 004A                ??_pwmInit 0044  
      __end_of_Delay40us 1C7A               __accesstop 0080  __end_of__initialization 1950  
          ___rparam_used 000001              pinMode@type 0046           __pcstackCOMRAM 0044  
           __pidataBANK0 1A2C             __pidataBANK2 1BD1            __end_of_tempo 1A2C  
              ?_Delay2ms 0044                  ??_tempo 0046    __size_of_digitalWrite 024E  
   __size_of_imprime_img 016C               _lcdCommand 17EE                  ?___wmul 0044  
                ?_kpInit 0044                  ?_kpRead 0044               _kpDebounce 1138  
     __size_of_ssdUpdate 0150               ??_Delay2ms 0045             _digitalWrite 0EEA  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 004C  
        kpDebounce@old_D 0049          kpDebounce@tempo 0067                  ___aldiv 156E  
                ___awdiv 167A                  ___awmod 173E          __size_of___wmul 0026  
           __psmallconst 0600          __size_of_kpInit 000A          __size_of_kpRead 000A  
         main@msg_inicio 0180              ssdDigit@val 004D              ssdDigit@pos 004C  
                __pcinit 18E4                  _lcdData 1B3A                  __ramtop 0600  
         main@msg_perdeu 018F                  _lcdInit 186C                  __ptext0 0612  
                __ptext1 1AE4                  __ptext2 1C7A                  __ptext3 1BFA  
                __ptext4 156E                  __ptext5 195A                  __ptext6 19CA  
                __ptext7 141E                  __ptext8 1A8C                  __ptext9 173E  
                _display 0066                  _pinMode 0C9C         ___awmod@dividend 0044  
       ___aldiv@dividend 0044                  _ssdInit 1AE4                  main@F40 0021  
                main@F32 0001                  main@F34 00C0                  main@F42 003C  
                main@F36 00A0                  main@F44 0030                  main@F46 0200  
                main@F38 0080                  _pwmInit 1C7A                Delay2ms@i 0045  
                main@msg 019B      kpDebounce@valorNovo 005E     end_of_initialization 1950  
          __Lmediumconst 0000            ?_pwmFrequency 0052        __end_of_ssdUpdate 156E  
             ??_ssdDigit 004D         ___aldiv@quotient 004E                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 0044                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               _num_rodada 195A  
            ?_kpDebounce 0044                _PORTCbits 000F82           _valor@ssd$F250 0601  
              _TRISCbits 000F94           ??_pwmFrequency 0054                _Delay40us 1C62  
         __end_of___wmul 1C46             imprime_img@i 004E            __pidataCOMRAM 1B8E  
         __end_of_kpInit 1CA2           __end_of_kpRead 1C98   __end_of_valor@ssd$F250 0611  
    start_initialization 18E4        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 0044                 ??___wmul 0048  
               ??_kpInit 0044                 ??_kpRead 0046              __pdataBANK0 0080  
            __pdataBANK2 0200              ?_num_rodada 0044              __pbssCOMRAM 0058  
          __pcstackBANK1 0100               pinMode@pin 0044            ??_imprime_img 004E  
               ?___aldiv 0044                 ?___awdiv 0044                 ?___awmod 0044  
      __size_of_ssdDigit 0058                 ?_lcdData 0044                 ?_lcdInit 0044  
   __end_of_pwmFrequency 1C20            lcdCommand@cmd 004B              __smallconst 0600  
               ?_pinMode 0044                 ?_ssdInit 0044                 ?_pwmInit 0044  
         __size_of_tempo 0062         pwmFrequency@freq 0052          ___aldiv@divisor 0048  
        ___aldiv@counter 004C      __size_of_num_rodada 0070              ??_Delay40us 0044  
         ___wmul@product 0048      __end_of_imprime_img 141E             ??_lcdCommand 004A  
              _ssdUpdate 141E             ??_kpDebounce 0044        ___wmul@multiplier 0044  
        lcdCommand@old_D 004A    kpDebounce@valorAntigo 005C                 _Delay2ms 1C46  
              main@tecla 01F6                main@vetor 01CB                main@turno 01F3  
              copy_data0 18F8                copy_data1 1918                copy_data2 1938  
     __end_of_lcdCommand 186C             lcdData@old_D 004B             lcdData@valor 004A  
     __end_of_kpDebounce 12B2                 __Hrparam 0000                 __Lrparam 0000  
             ?_ssdUpdate 0044         __size_of___aldiv 010C         __size_of___awdiv 00C4  
       __size_of___awmod 00B0         __size_of_lcdData 0054         __size_of_lcdInit 0078  
       __size_of_pinMode 024E                 __ptext10 167A                 __ptext11 1C8E  
               __ptext20 0EEA                 __ptext12 1C98                 __ptext21 1C62  
               __ptext13 1138                 __ptext22 1C20                 __ptext14 12B2  
               __ptext15 186C                 __ptext16 0C9C                 __ptext17 17EE  
               __ptext18 1C46                 __ptext19 1B3A         __size_of_ssdInit 0056  
       __size_of_pwmInit 0014              _imprime_img 12B2            __size_of_main 068A  
             Delay40us@i 0044                 _ssdDigit 1A8C                 isa$xinst 000000  
  __size_of_pwmFrequency 0026      num_rodada@intervalo 004E                 main@img1 0100  
               main@img2 0120                 main@img3 0140                 main@img4 0160  
           ??_num_rodada 004E                 main@erro 01F5                 main@resp 01A3  
          ?_digitalWrite 0044             tempo@tempo_x 0044        digitalWrite@value 0046  
     __end_of_num_rodada 19CA             _pwmFrequency 1BFA              ??_ssdUpdate 004A  
            kpDebounce@i 004D              kpDebounce@j 004C              kpDebounce@k 004A  
         ??_digitalWrite 0048             ___aldiv@sign 004D          digitalWrite@pin 0044  
